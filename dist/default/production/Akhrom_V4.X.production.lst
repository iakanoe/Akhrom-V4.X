

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Jul 16 22:33:46 2018

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           	psect	idataBANK1
    29  000E3C                     __pidataBANK1:
    30                           	opt stack 0
    31                           
    32                           ;initializer for loop@direccion
    33  000E3C  0005               	dw	5
    34  0000                     _ADCON1bits	set	4033
    35  0000                     _CCP1CONbits	set	4029
    36  0000                     _CCP2CONbits	set	4026
    37  0000                     _CCPR1L	set	4030
    38  0000                     _CCPR2L	set	4027
    39  0000                     _INTCON3	set	4080
    40  0000                     _INTCONbits	set	4082
    41  0000                     _LATBbits	set	3978
    42  0000                     _LATCbits	set	3979
    43  0000                     _PIE1	set	3997
    44  0000                     _PIE1bits	set	3997
    45  0000                     _PIE2	set	4000
    46  0000                     _PORTAbits	set	3968
    47  0000                     _PORTBbits	set	3969
    48  0000                     _PORTCbits	set	3970
    49  0000                     _PR2	set	4043
    50  0000                     _RCONbits	set	4048
    51  0000                     _T2CON	set	4042
    52  0000                     _T2CONbits	set	4042
    53  0000                     _TRISAbits	set	3986
    54  0000                     _TRISBbits	set	3987
    55  0000                     _TRISCbits	set	3988
    56  0000                     _TMR2IF	set	31985
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  000DAC                     __pcinit:
    62                           	opt stack 0
    63  000DAC                     start_initialization:
    64                           	opt stack 0
    65  000DAC                     __initialization:
    66                           	opt stack 0
    67                           
    68                           ; Clear objects allocated to BANK1 (6 bytes)
    69  000DAC  0101               	movlb	1
    70  000DAE  6BAF               	clrf	(__pbssBANK1+5)& (0+255),b
    71  000DB0  6BAE               	clrf	(__pbssBANK1+4)& (0+255),b
    72  000DB2  6BAD               	clrf	(__pbssBANK1+3)& (0+255),b
    73  000DB4  6BAC               	clrf	(__pbssBANK1+2)& (0+255),b
    74  000DB6  6BAB               	clrf	(__pbssBANK1+1)& (0+255),b
    75  000DB8  6BAA               	clrf	__pbssBANK1& (0+255),b
    76                           
    77                           ; Clear objects allocated to COMRAM (4 bytes)
    78  000DBA  6A4B               	clrf	(__pbssCOMRAM+3)& (0+255),c
    79  000DBC  6A4A               	clrf	(__pbssCOMRAM+2)& (0+255),c
    80  000DBE  6A49               	clrf	(__pbssCOMRAM+1)& (0+255),c
    81  000DC0  6A48               	clrf	__pbssCOMRAM& (0+255),c
    82                           
    83                           ; Initialize objects allocated to BANK1 (2 bytes)
    84                           ; load TBLPTR registers with __pidataBANK1
    85  000DC2  0E3C               	movlw	low __pidataBANK1
    86  000DC4  6EF6               	movwf	tblptrl,c
    87  000DC6  0E0E               	movlw	high __pidataBANK1
    88  000DC8  6EF7               	movwf	tblptrh,c
    89  000DCA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
    90  000DCC  6EF8               	movwf	tblptru,c
    91  000DCE  0009               	tblrd		*+	;fetch initializer
    92  000DD0  CFF5 F1B0          	movff	tablat,__pdataBANK1
    93  000DD4  0009               	tblrd		*+	;fetch initializer
    94  000DD6  CFF5 F1B1          	movff	tablat,__pdataBANK1+1
    95  000DDA                     end_of_initialization:
    96                           	opt stack 0
    97  000DDA                     __end_of__initialization:
    98                           	opt stack 0
    99  000DDA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   100  000DDC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   101  000DDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102  000DE0  6EF8               	movwf	tblptru,c
   103  000DE2  0100               	movlb	0
   104  000DE4  EF19  F007         	goto	_main	;jump to C main() function
   105                           tblptru	equ	0xFF8
   106                           tblptrh	equ	0xFF7
   107                           tblptrl	equ	0xFF6
   108                           tablat	equ	0xFF5
   109                           
   110                           	psect	bssCOMRAM
   111  000048                     __pbssCOMRAM:
   112                           	opt stack 0
   113  000048                     _millisCounter:
   114                           	opt stack 0
   115  000048                     	ds	4
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           
   121                           	psect	bssBANK1
   122  0001AA                     __pbssBANK1:
   123                           	opt stack 0
   124  0001AA                     loop@m:
   125                           	opt stack 0
   126  0001AA                     	ds	4
   127  0001AE                     loop@estado:
   128                           	opt stack 0
   129  0001AE                     	ds	2
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           
   135                           	psect	dataBANK1
   136  0001B0                     __pdataBANK1:
   137                           	opt stack 0
   138  0001B0                     loop@direccion:
   139                           	opt stack 0
   140  0001B0                     	ds	2
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           
   146                           	psect	cstackBANK1
   147  000100                     __pcstackBANK1:
   148                           	opt stack 0
   149  000100                     _loop$848:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x0
   153  000100                     	ds	2
   154  000102                     _loop$849:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x2
   158  000102                     	ds	2
   159  000104                     _loop$850:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x4
   163  000104                     	ds	2
   164  000106                     _loop$851:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x6
   168  000106                     	ds	2
   169  000108                     _loop$852:
   170                           	opt stack 0
   171                           
   172                           ; 2 bytes @ 0x8
   173  000108                     	ds	2
   174  00010A                     _loop$853:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0xA
   178  00010A                     	ds	2
   179  00010C                     _loop$854:
   180                           	opt stack 0
   181                           
   182                           ; 2 bytes @ 0xC
   183  00010C                     	ds	2
   184  00010E                     _loop$855:
   185                           	opt stack 0
   186                           
   187                           ; 2 bytes @ 0xE
   188  00010E                     	ds	2
   189  000110                     _loop$856:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x10
   193  000110                     	ds	2
   194  000112                     _loop$857:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x12
   198  000112                     	ds	2
   199  000114                     _loop$858:
   200                           	opt stack 0
   201                           
   202                           ; 2 bytes @ 0x14
   203  000114                     	ds	2
   204  000116                     _loop$859:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x16
   208  000116                     	ds	2
   209  000118                     _loop$860:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x18
   213  000118                     	ds	2
   214  00011A                     _loop$861:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x1A
   218  00011A                     	ds	2
   219  00011C                     _loop$862:
   220                           	opt stack 0
   221                           
   222                           ; 2 bytes @ 0x1C
   223  00011C                     	ds	2
   224  00011E                     _loop$872:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x1E
   228  00011E                     	ds	2
   229  000120                     _loop$873:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x20
   233  000120                     	ds	2
   234  000122                     _loop$874:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x22
   238  000122                     	ds	2
   239  000124                     _loop$875:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x24
   243  000124                     	ds	2
   244  000126                     _loop$876:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0x26
   248  000126                     	ds	2
   249  000128                     _loop$878:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x28
   253  000128                     	ds	2
   254  00012A                     _loop$879:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x2A
   258  00012A                     	ds	2
   259  00012C                     _loop$880:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x2C
   263  00012C                     	ds	2
   264  00012E                     _loop$881:
   265                           	opt stack 0
   266                           
   267                           ; 2 bytes @ 0x2E
   268  00012E                     	ds	2
   269  000130                     _loop$882:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x30
   273  000130                     	ds	2
   274  000132                     _loop$883:
   275                           	opt stack 0
   276                           
   277                           ; 2 bytes @ 0x32
   278  000132                     	ds	2
   279  000134                     _loop$884:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0x34
   283  000134                     	ds	2
   284  000136                     _loop$885:
   285                           	opt stack 0
   286                           
   287                           ; 2 bytes @ 0x36
   288  000136                     	ds	2
   289  000138                     _loop$886:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x38
   293  000138                     	ds	2
   294  00013A                     _loop$887:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x3A
   298  00013A                     	ds	2
   299  00013C                     _loop$888:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x3C
   303  00013C                     	ds	2
   304  00013E                     _loop$889:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x3E
   308  00013E                     	ds	2
   309  000140                     _loop$890:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x40
   313  000140                     	ds	2
   314  000142                     _loop$891:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x42
   318  000142                     	ds	2
   319  000144                     _loop$892:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x44
   323  000144                     	ds	2
   324  000146                     _loop$893:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x46
   328  000146                     	ds	2
   329  000148                     _loop$894:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x48
   333  000148                     	ds	2
   334  00014A                     _loop$895:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x4A
   338  00014A                     	ds	2
   339  00014C                     _loop$896:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x4C
   343  00014C                     	ds	2
   344  00014E                     _loop$897:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x4E
   348  00014E                     	ds	2
   349  000150                     _loop$898:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x50
   353  000150                     	ds	2
   354  000152                     _loop$899:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x52
   358  000152                     	ds	2
   359  000154                     _loop$900:
   360                           	opt stack 0
   361                           
   362                           ; 2 bytes @ 0x54
   363  000154                     	ds	2
   364  000156                     _loop$901:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x56
   368  000156                     	ds	2
   369  000158                     _loop$902:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x58
   373  000158                     	ds	2
   374  00015A                     _loop$903:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x5A
   378  00015A                     	ds	2
   379  00015C                     _loop$904:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x5C
   383  00015C                     	ds	2
   384  00015E                     _loop$905:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x5E
   388  00015E                     	ds	2
   389  000160                     _loop$906:
   390                           	opt stack 0
   391                           
   392                           ; 2 bytes @ 0x60
   393  000160                     	ds	2
   394  000162                     _loop$907:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x62
   398  000162                     	ds	2
   399  000164                     _loop$908:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x64
   403  000164                     	ds	2
   404  000166                     _loop$909:
   405                           	opt stack 0
   406                           
   407                           ; 2 bytes @ 0x66
   408  000166                     	ds	2
   409  000168                     _loop$910:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x68
   413  000168                     	ds	2
   414  00016A                     _loop$911:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x6A
   418  00016A                     	ds	2
   419  00016C                     _loop$912:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x6C
   423  00016C                     	ds	2
   424  00016E                     _loop$913:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x6E
   428  00016E                     	ds	2
   429  000170                     _loop$914:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x70
   433  000170                     	ds	2
   434  000172                     _loop$915:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x72
   438  000172                     	ds	2
   439  000174                     _loop$916:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x74
   443  000174                     	ds	2
   444  000176                     _loop$917:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0x76
   448  000176                     	ds	2
   449  000178                     _loop$918:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x78
   453  000178                     	ds	2
   454  00017A                     _loop$919:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x7A
   458  00017A                     	ds	2
   459  00017C                     _loop$920:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x7C
   463  00017C                     	ds	2
   464  00017E                     _loop$921:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x7E
   468  00017E                     	ds	2
   469  000180                     _loop$922:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x80
   473  000180                     	ds	2
   474  000182                     _loop$923:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x82
   478  000182                     	ds	2
   479  000184                     _loop$924:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x84
   483  000184                     	ds	2
   484  000186                     _loop$925:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x86
   488  000186                     	ds	2
   489  000188                     _loop$926:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x88
   493  000188                     	ds	2
   494  00018A                     _loop$927:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x8A
   498  00018A                     	ds	2
   499  00018C                     _loop$928:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x8C
   503  00018C                     	ds	2
   504  00018E                     _loop$929:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x8E
   508  00018E                     	ds	2
   509  000190                     _loop$930:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x90
   513  000190                     	ds	2
   514  000192                     _loop$931:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x92
   518  000192                     	ds	2
   519  000194                     _loop$932:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x94
   523  000194                     	ds	2
   524  000196                     _loop$933:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x96
   528  000196                     	ds	2
   529  000198                     _loop$934:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x98
   533  000198                     	ds	2
   534  00019A                     _loop$935:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x9A
   538  00019A                     	ds	2
   539  00019C                     _loop$936:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x9C
   543  00019C                     	ds	2
   544  00019E                     _loop$937:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x9E
   548  00019E                     	ds	2
   549  0001A0                     _loop$938:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0xA0
   553  0001A0                     	ds	2
   554  0001A2                     _loop$939:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0xA2
   558  0001A2                     	ds	2
   559  0001A4                     _loop$940:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0xA4
   563  0001A4                     	ds	2
   564  0001A6                     _loop$941:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0xA6
   568  0001A6                     	ds	2
   569  0001A8                     _loop$871:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0xA8
   573  0001A8                     	ds	1
   574  0001A9                     _loop$877:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0xA9
   578  0001A9                     	ds	1
   579                           tblptru	equ	0xFF8
   580                           tblptrh	equ	0xFF7
   581                           tblptrl	equ	0xFF6
   582                           tablat	equ	0xFF5
   583                           
   584                           	psect	cstackCOMRAM
   585  000001                     __pcstackCOMRAM:
   586                           	opt stack 0
   587  000001                     ??_ISR:
   588  000001                     
   589                           ; 1 bytes @ 0x0
   590  000001                     	ds	14
   591  00000F                     ?___awdiv:
   592                           	opt stack 0
   593  00000F                     ?___ftpack:
   594                           	opt stack 0
   595  00000F                     ?_millis:
   596                           	opt stack 0
   597  00000F                     ___awdiv@dividend:
   598                           	opt stack 0
   599  00000F                     ___ftpack@arg:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0xE
   603  00000F                     	ds	2
   604  000011                     ___awdiv@divisor:
   605                           	opt stack 0
   606                           
   607                           ; 2 bytes @ 0x10
   608  000011                     	ds	1
   609  000012                     ___ftpack@exp:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x11
   613  000012                     	ds	1
   614  000013                     ___awdiv@counter:
   615                           	opt stack 0
   616  000013                     ___ftpack@sign:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x12
   620  000013                     	ds	1
   621  000014                     ??___ftpack:
   622  000014                     ___awdiv@sign:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x13
   626  000014                     	ds	1
   627  000015                     ___awdiv@quotient:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x14
   631  000015                     	ds	2
   632  000017                     ?___awtoft:
   633                           	opt stack 0
   634  000017                     ___awtoft@c:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x16
   638  000017                     	ds	3
   639  00001A                     ___awtoft@sign:
   640                           	opt stack 0
   641                           
   642                           ; 1 bytes @ 0x19
   643  00001A                     	ds	1
   644  00001B                     ?___ftmul:
   645                           	opt stack 0
   646  00001B                     ___ftmul@f1:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0x1A
   650  00001B                     	ds	3
   651  00001E                     ___ftmul@f2:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x1D
   655  00001E                     	ds	3
   656  000021                     ??___ftmul:
   657                           
   658                           ; 1 bytes @ 0x20
   659  000021                     	ds	3
   660  000024                     ___ftmul@exp:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x23
   664  000024                     	ds	1
   665  000025                     ___ftmul@f3_as_product:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0x24
   669  000025                     	ds	3
   670  000028                     ___ftmul@cntr:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x27
   674  000028                     	ds	1
   675  000029                     ___ftmul@sign:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x28
   679  000029                     	ds	1
   680  00002A                     ?___fttol:
   681                           	opt stack 0
   682  00002A                     ___fttol@f1:
   683                           	opt stack 0
   684                           
   685                           ; 3 bytes @ 0x29
   686  00002A                     	ds	4
   687  00002E                     ??___fttol:
   688                           
   689                           ; 1 bytes @ 0x2D
   690  00002E                     	ds	5
   691  000033                     ___fttol@sign1:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x32
   695  000033                     	ds	1
   696  000034                     ___fttol@lval:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x33
   700  000034                     	ds	4
   701  000038                     ___fttol@exp1:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x37
   705  000038                     	ds	1
   706  000039                     setMotores@dutyI:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x38
   710  000039                     	ds	2
   711  00003B                     setMotores@dutyD:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x3A
   715  00003B                     	ds	2
   716  00003D                     ??_setMotores:
   717                           
   718                           ; 1 bytes @ 0x3C
   719  00003D                     	ds	2
   720  00003F                     _setMotores$945:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x3E
   724  00003F                     	ds	2
   725  000041                     _setMotores$946:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0x40
   729  000041                     	ds	2
   730  000043                     ??_loop:
   731                           
   732                           ; 1 bytes @ 0x42
   733  000043                     	ds	5
   734  000048                     tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           
   739                           ; 1 bytes @ 0x47
   740 ;;
   741 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   742 ;;
   743 ;; *************** function _main *****************
   744 ;; Defined at:
   745 ;;		line 270 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         0       0       0       0       0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0
   762 ;;      Totals:         0       0       0       0       0       0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels required when called:    5
   765 ;; This function calls:
   766 ;;		_init
   767 ;;		_loop
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text0
   774  000E32                     __ptext0:
   775                           	opt stack 0
   776  000E32                     _main:
   777                           	opt stack 26
   778                           
   779                           ;main.c: 271: init();
   780                           
   781                           ;incstack = 0
   782  000E32  EC08  F006         	call	_init	;wreg free
   783  000E36                     l485:
   784  000E36  EC0D  F000         	call	_loop	;wreg free
   785  000E3A  D7FD               	goto	l485
   786  000E3C                     __end_of_main:
   787                           	opt stack 0
   788                           tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           
   793 ;; *************** function _loop *****************
   794 ;; Defined at:
   795 ;;		line 66 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   809 ;;      Params:         0       0       0       0       0       0       0       0       0
   810 ;;      Locals:         0       0     170       0       0       0       0       0       0
   811 ;;      Temps:          5       0       0       0       0       0       0       0       0
   812 ;;      Totals:         5       0     170       0       0       0       0       0       0
   813 ;;Total ram usage:      175 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    4
   816 ;; This function calls:
   817 ;;		_millis
   818 ;;		_setMotores
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825  00001A                     __ptext1:
   826                           	opt stack 0
   827  00001A                     _loop:
   828                           	opt stack 26
   829                           
   830                           ;main.c: 67: static unsigned long m = 0;
   831                           ;main.c: 68: static int estado = MENU;
   832                           ;main.c: 69: static int direccion = DER;
   833                           ;main.c: 70: switch(estado){
   834                           
   835                           ;incstack = 0
   836  00001A  D394               	goto	l2704
   837  00001C                     l2186:
   838  00001C  BA80               	btfsc	3968,5,c	;volatile
   839  00001E  D002               	goto	u2850
   840  000020  0E01               	movlw	1
   841  000022  D001               	goto	u2860
   842  000024                     u2850:
   843  000024  0E00               	movlw	0
   844  000026                     u2860:
   845  000026  0101               	movlb	1	; () banked
   846  000028  6F04               	movwf	_loop$850& (0+255),b
   847  00002A  6B05               	clrf	(_loop$850+1)& (0+255),b
   848                           
   849                           ; BSR set to: 1
   850                           
   851                           ; BSR set to: 1
   852  00002C  C104  F102         	movff	_loop$850,_loop$849
   853  000030  C105  F103         	movff	_loop$850+1,_loop$849+1
   854                           
   855                           ; BSR set to: 1
   856                           
   857                           ; BSR set to: 1
   858                           
   859                           ; BSR set to: 1
   860                           
   861                           ; BSR set to: 1
   862  000034  C102  F100         	movff	_loop$849,_loop$848
   863  000038  C103  F101         	movff	_loop$849+1,_loop$848+1
   864                           
   865                           ; BSR set to: 1
   866                           
   867                           ; BSR set to: 1
   868                           
   869                           ; BSR set to: 1
   870                           
   871                           ; BSR set to: 1
   872  00003C  0101               	movlb	1	; () banked
   873  00003E  5100               	movf	_loop$848& (0+255),w,b
   874  000040  0101               	movlb	1	; () banked
   875  000042  1101               	iorwf	(_loop$848+1)& (0+255),w,b
   876  000044  B4D8               	btfsc	status,2,c
   877  000046  D006               	goto	l2210
   878                           
   879                           ; BSR set to: 1
   880                           ;main.c: 73: estado = LIMPIAR;
   881  000048  0E00               	movlw	0
   882  00004A  0101               	movlb	1	; () banked
   883  00004C  6FAF               	movwf	(loop@estado+1)& (0+255),b
   884  00004E  0E01               	movlw	1
   885  000050  6FAE               	movwf	loop@estado& (0+255),b
   886                           
   887                           ;main.c: 74: break;
   888  000052  0012               	return	
   889  000054                     l2210:
   890                           
   891                           ; BSR set to: 1
   892  000054  B081               	btfsc	3969,0,c	;volatile
   893  000056  D002               	goto	u2960
   894  000058  0E01               	movlw	1
   895  00005A  D001               	goto	u2970
   896  00005C                     u2960:
   897  00005C  0E00               	movlw	0
   898  00005E                     u2970:
   899  00005E  0101               	movlb	1	; () banked
   900  000060  6F06               	movwf	_loop$851& (0+255),b
   901  000062  6B07               	clrf	(_loop$851+1)& (0+255),b
   902                           
   903                           ; BSR set to: 1
   904                           
   905                           ; BSR set to: 1
   906  000064  0101               	movlb	1	; () banked
   907  000066  5106               	movf	_loop$851& (0+255),w,b
   908  000068  0101               	movlb	1	; () banked
   909  00006A  1107               	iorwf	(_loop$851+1)& (0+255),w,b
   910  00006C  B4D8               	btfsc	status,2,c
   911  00006E  D027               	goto	l2242
   912                           
   913                           ; BSR set to: 1
   914                           ;main.c: 78: LATBbits.LB2 = 1;
   915  000070  848A               	bsf	3978,2,c	;volatile
   916                           
   917                           ;main.c: 79: LATBbits.LB3 = 1;
   918  000072  868A               	bsf	3978,3,c	;volatile
   919                           
   920                           ;main.c: 80: LATBbits.LB4 = 1;
   921  000074  888A               	bsf	3978,4,c	;volatile
   922                           
   923                           ;main.c: 81: while((1 == 1 ? !PORTBbits.RB0 : (1 == 2 ? !PORTBbits.RB1 : (1 == 0 ? !PORT
      +                          Abits.RA5 : 0)))){
   924  000076  D014               	goto	l2232
   925  000078                     l2216:
   926                           
   927                           ; BSR set to: 1
   928                           ;main.c: 82: m = millis();
   929  000078  EC10  F007         	call	_millis	;wreg free
   930  00007C  C00F  F1AA         	movff	?_millis,loop@m
   931  000080  C010  F1AB         	movff	?_millis+1,loop@m+1
   932  000084  C011  F1AC         	movff	?_millis+2,loop@m+2
   933  000088  C012  F1AD         	movff	?_millis+3,loop@m+3
   934                           
   935                           ;main.c: 83: direccion = DER;
   936  00008C  0E00               	movlw	0
   937  00008E  0101               	movlb	1	; () banked
   938  000090  6FB1               	movwf	(loop@direccion+1)& (0+255),b
   939  000092  0E05               	movlw	5
   940  000094  6FB0               	movwf	loop@direccion& (0+255),b
   941                           
   942                           ; BSR set to: 1
   943                           ;main.c: 84: estado = ESPERA;
   944  000096  0E00               	movlw	0
   945  000098  0101               	movlb	1	; () banked
   946  00009A  6FAF               	movwf	(loop@estado+1)& (0+255),b
   947  00009C  0E02               	movlw	2
   948  00009E  6FAE               	movwf	loop@estado& (0+255),b
   949  0000A0                     l2232:
   950                           
   951                           ; BSR set to: 1
   952  0000A0  B081               	btfsc	3969,0,c	;volatile
   953  0000A2  D002               	goto	u3030
   954  0000A4  0E01               	movlw	1
   955  0000A6  D001               	goto	u3040
   956  0000A8                     u3030:
   957  0000A8  0E00               	movlw	0
   958  0000AA                     u3040:
   959  0000AA  0101               	movlb	1	; () banked
   960  0000AC  6F0C               	movwf	_loop$854& (0+255),b
   961  0000AE  6B0D               	clrf	(_loop$854+1)& (0+255),b
   962                           
   963                           ; BSR set to: 1
   964                           
   965                           ; BSR set to: 1
   966  0000B0  0101               	movlb	1	; () banked
   967  0000B2  510C               	movf	_loop$854& (0+255),w,b
   968  0000B4  0101               	movlb	1	; () banked
   969  0000B6  110D               	iorwf	(_loop$854+1)& (0+255),w,b
   970  0000B8  B4D8               	btfsc	status,2,c
   971  0000BA  0012               	return	
   972  0000BC  D7DD               	goto	l2216
   973  0000BE                     l2242:
   974                           
   975                           ; BSR set to: 1
   976  0000BE  B281               	btfsc	3969,1,c	;volatile
   977  0000C0  D002               	goto	u3080
   978  0000C2  0E01               	movlw	1
   979  0000C4  D001               	goto	u3090
   980  0000C6                     u3080:
   981  0000C6  0E00               	movlw	0
   982  0000C8                     u3090:
   983  0000C8  0101               	movlb	1	; () banked
   984  0000CA  6F14               	movwf	_loop$858& (0+255),b
   985  0000CC  6B15               	clrf	(_loop$858+1)& (0+255),b
   986                           
   987                           ; BSR set to: 1
   988                           
   989                           ; BSR set to: 1
   990  0000CE  C114  F112         	movff	_loop$858,_loop$857
   991  0000D2  C115  F113         	movff	_loop$858+1,_loop$857+1
   992                           
   993                           ; BSR set to: 1
   994                           
   995                           ; BSR set to: 1
   996                           
   997                           ; BSR set to: 1
   998                           
   999                           ; BSR set to: 1
  1000  0000D6  0101               	movlb	1	; () banked
  1001  0000D8  5112               	movf	_loop$857& (0+255),w,b
  1002  0000DA  0101               	movlb	1	; () banked
  1003  0000DC  1113               	iorwf	(_loop$857+1)& (0+255),w,b
  1004  0000DE  B4D8               	btfsc	status,2,c
  1005  0000E0  D02B               	goto	l2272
  1006                           
  1007                           ; BSR set to: 1
  1008                           ;main.c: 90: LATBbits.LB2 = 1;
  1009  0000E2  848A               	bsf	3978,2,c	;volatile
  1010                           
  1011                           ;main.c: 91: LATBbits.LB3 = 1;
  1012  0000E4  868A               	bsf	3978,3,c	;volatile
  1013                           
  1014                           ;main.c: 92: LATBbits.LB4 = 1;
  1015  0000E6  888A               	bsf	3978,4,c	;volatile
  1016                           
  1017                           ;main.c: 93: while((2 == 1 ? !PORTBbits.RB0 : (2 == 2 ? !PORTBbits.RB1 : (2 == 0 ? !PORT
      +                          Abits.RA5 : 0)))){
  1018  0000E8  D014               	goto	l2264
  1019  0000EA                     l2252:
  1020                           
  1021                           ; BSR set to: 1
  1022                           ;main.c: 94: m = millis();
  1023  0000EA  EC10  F007         	call	_millis	;wreg free
  1024  0000EE  C00F  F1AA         	movff	?_millis,loop@m
  1025  0000F2  C010  F1AB         	movff	?_millis+1,loop@m+1
  1026  0000F6  C011  F1AC         	movff	?_millis+2,loop@m+2
  1027  0000FA  C012  F1AD         	movff	?_millis+3,loop@m+3
  1028                           
  1029                           ;main.c: 95: direccion = IZQ;
  1030  0000FE  0E00               	movlw	0
  1031  000100  0101               	movlb	1	; () banked
  1032  000102  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  1033  000104  0E08               	movlw	8
  1034  000106  6FB0               	movwf	loop@direccion& (0+255),b
  1035                           
  1036                           ; BSR set to: 1
  1037                           ;main.c: 96: estado = ESPERA;
  1038  000108  0E00               	movlw	0
  1039  00010A  0101               	movlb	1	; () banked
  1040  00010C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1041  00010E  0E02               	movlw	2
  1042  000110  6FAE               	movwf	loop@estado& (0+255),b
  1043  000112                     l2264:
  1044                           
  1045                           ; BSR set to: 1
  1046  000112  B281               	btfsc	3969,1,c	;volatile
  1047  000114  D002               	goto	u3150
  1048  000116  0E01               	movlw	1
  1049  000118  D001               	goto	u3160
  1050  00011A                     u3150:
  1051  00011A  0E00               	movlw	0
  1052  00011C                     u3160:
  1053  00011C  0101               	movlb	1	; () banked
  1054  00011E  6F1A               	movwf	_loop$861& (0+255),b
  1055  000120  6B1B               	clrf	(_loop$861+1)& (0+255),b
  1056                           
  1057                           ; BSR set to: 1
  1058                           
  1059                           ; BSR set to: 1
  1060  000122  C11A  F118         	movff	_loop$861,_loop$860
  1061  000126  C11B  F119         	movff	_loop$861+1,_loop$860+1
  1062                           
  1063                           ; BSR set to: 1
  1064                           
  1065                           ; BSR set to: 1
  1066                           
  1067                           ; BSR set to: 1
  1068                           
  1069                           ; BSR set to: 1
  1070  00012A  0101               	movlb	1	; () banked
  1071  00012C  5118               	movf	_loop$860& (0+255),w,b
  1072  00012E  0101               	movlb	1	; () banked
  1073  000130  1119               	iorwf	(_loop$860+1)& (0+255),w,b
  1074  000132  B4D8               	btfsc	status,2,c
  1075  000134  0012               	return	
  1076  000136  D7D9               	goto	l2252
  1077  000138                     l2272:
  1078                           
  1079                           ; BSR set to: 1
  1080                           ;main.c: 99: }
  1081                           ;main.c: 101: setMotores(0, 0);
  1082  000138  0E00               	movlw	0
  1083  00013A  6E3A               	movwf	setMotores@dutyI+1,c
  1084  00013C  0E00               	movlw	0
  1085  00013E  6E39               	movwf	setMotores@dutyI,c
  1086  000140  0E00               	movlw	0
  1087  000142  6E3C               	movwf	setMotores@dutyD+1,c
  1088  000144  0E00               	movlw	0
  1089  000146  6E3B               	movwf	setMotores@dutyD,c
  1090  000148  ECD3  F003         	call	_setMotores	;wreg free
  1091                           
  1092                           ;main.c: 102: LATBbits.LB2 = (1 == 1 ? !PORTAbits.RA4 : (1 == 2 ? !PORTAbits.RA3 : (1 ==
      +                           3 ? !PORTAbits.RA2 : (1 == 4 ? !PORTBbits.RB5 : (1 == 5 ? !PORTCbits.RC7 : 0))))) || (2
      +                           == 1 ? !PORTAbits.RA4 : (2 == 2 ? !PORTAbits.RA3 : (2 == 3 ? !PORTAbits.RA2 : (2 == 4 ?
  1093  00014C  0E01               	movlw	1
  1094  00014E  0101               	movlb	1	; () banked
  1095  000150  6FA8               	movwf	_loop$871& (0+255),b
  1096                           
  1097                           ; BSR set to: 1
  1098  000152  B880               	btfsc	3968,4,c	;volatile
  1099                           
  1100                           ; BSR set to: 1
  1101  000154  A680               	btfss	3968,3,c	;volatile
  1102  000156  D005               	goto	l2284
  1103                           
  1104                           ; BSR set to: 1
  1105  000158  A080               	btfss	3968,0,c	;volatile
  1106  00015A  D003               	goto	l2284
  1107                           
  1108                           ; BSR set to: 1
  1109  00015C  0E00               	movlw	0
  1110  00015E  0101               	movlb	1	; () banked
  1111  000160  6FA8               	movwf	_loop$871& (0+255),b
  1112  000162                     l2284:
  1113                           
  1114                           ; BSR set to: 1
  1115                           ;main.c: 103: LATBbits.LB3 = (3 == 1 ? !PORTAbits.RA4 : (3 == 2 ? !PORTAbits.RA3 : (3 ==
      +                           3 ? !PORTAbits.RA2 : (3 == 4 ? !PORTBbits.RB5 : (3 == 5 ? !PORTCbits.RC7 : 0)))));
  1116  000162  0101               	movlb	1	; () banked
  1117  000164  B1A8               	btfsc	_loop$871& (0+255),0,b
  1118  000166  D002               	bra	u3235
  1119  000168  948A               	bcf	3978,2,c	;volatile
  1120  00016A  D001               	bra	u3236
  1121  00016C                     u3235:
  1122  00016C  848A               	bsf	3978,2,c	;volatile
  1123  00016E                     u3236:
  1124                           
  1125                           ; BSR set to: 1
  1126                           
  1127                           ; BSR set to: 1
  1128                           
  1129                           ; BSR set to: 1
  1130                           
  1131                           ; BSR set to: 1
  1132                           
  1133                           ; BSR set to: 1
  1134                           
  1135                           ; BSR set to: 1
  1136                           
  1137                           ; BSR set to: 1
  1138                           
  1139                           ; BSR set to: 1
  1140                           
  1141                           ; BSR set to: 1
  1142  00016E  B480               	btfsc	3968,2,c	;volatile
  1143  000170  D002               	goto	u3280
  1144  000172  0E01               	movlw	1
  1145  000174  D001               	goto	u3290
  1146  000176                     u3280:
  1147  000176  0E00               	movlw	0
  1148  000178                     u3290:
  1149  000178  0101               	movlb	1	; () banked
  1150  00017A  6F22               	movwf	_loop$874& (0+255),b
  1151  00017C  6B23               	clrf	(_loop$874+1)& (0+255),b
  1152                           
  1153                           ; BSR set to: 1
  1154                           
  1155                           ; BSR set to: 1
  1156  00017E  C122  F120         	movff	_loop$874,_loop$873
  1157  000182  C123  F121         	movff	_loop$874+1,_loop$873+1
  1158                           
  1159                           ; BSR set to: 1
  1160                           
  1161                           ; BSR set to: 1
  1162                           
  1163                           ; BSR set to: 1
  1164                           
  1165                           ; BSR set to: 1
  1166  000186  C120  F11E         	movff	_loop$873,_loop$872
  1167  00018A  C121  F11F         	movff	_loop$873+1,_loop$872+1
  1168                           
  1169                           ; BSR set to: 1
  1170                           
  1171                           ; BSR set to: 1
  1172                           
  1173                           ; BSR set to: 1
  1174                           
  1175                           ; BSR set to: 1
  1176  00018E  0101               	movlb	1	; () banked
  1177  000190  B11E               	btfsc	_loop$872& (0+255),0,b
  1178  000192  D002               	bra	u3345
  1179  000194  968A               	bcf	3978,3,c	;volatile
  1180  000196  D001               	bra	u3346
  1181  000198                     u3345:
  1182  000198  868A               	bsf	3978,3,c	;volatile
  1183  00019A                     u3346:
  1184                           
  1185                           ;main.c: 104: LATBbits.LB4 = (4 == 1 ? !PORTAbits.RA4 : (4 == 2 ? !PORTAbits.RA3 : (4 ==
      +                           3 ? !PORTAbits.RA2 : (4 == 4 ? !PORTBbits.RB5 : (4 == 5 ? !PORTCbits.RC7 : 0))))) || (5
      +                           == 1 ? !PORTAbits.RA4 : (5 == 2 ? !PORTAbits.RA3 : (5 == 3 ? !PORTAbits.RA2 : (5 == 4 ?
  1186  00019A  0E01               	movlw	1
  1187  00019C  0101               	movlb	1	; () banked
  1188  00019E  6FA9               	movwf	_loop$877& (0+255),b
  1189                           
  1190                           ; BSR set to: 1
  1191  0001A0  BA81               	btfsc	3969,5,c	;volatile
  1192                           
  1193                           ; BSR set to: 1
  1194  0001A2  AE82               	btfss	3970,7,c	;volatile
  1195  0001A4  D005               	goto	l2316
  1196                           
  1197                           ; BSR set to: 1
  1198  0001A6  A280               	btfss	3968,1,c	;volatile
  1199  0001A8  D003               	goto	l2316
  1200                           
  1201                           ; BSR set to: 1
  1202  0001AA  0E00               	movlw	0
  1203  0001AC  0101               	movlb	1	; () banked
  1204  0001AE  6FA9               	movwf	_loop$877& (0+255),b
  1205  0001B0                     l2316:
  1206                           
  1207                           ; BSR set to: 1
  1208  0001B0  0101               	movlb	1	; () banked
  1209  0001B2  B1A9               	btfsc	_loop$877& (0+255),0,b
  1210  0001B4  D002               	bra	u3385
  1211  0001B6  988A               	bcf	3978,4,c	;volatile
  1212  0001B8  D001               	bra	u3386
  1213  0001BA                     u3385:
  1214  0001BA  888A               	bsf	3978,4,c	;volatile
  1215  0001BC                     u3386:
  1216                           
  1217                           ;main.c: 105: break;
  1218  0001BC  0012               	return	
  1219  0001BE                     l2320:
  1220  0001BE  BA80               	btfsc	3968,5,c	;volatile
  1221  0001C0  D002               	goto	u3390
  1222  0001C2  0E01               	movlw	1
  1223  0001C4  D001               	goto	u3400
  1224  0001C6                     u3390:
  1225  0001C6  0E00               	movlw	0
  1226  0001C8                     u3400:
  1227  0001C8  0101               	movlb	1	; () banked
  1228  0001CA  6F2C               	movwf	_loop$880& (0+255),b
  1229  0001CC  6B2D               	clrf	(_loop$880+1)& (0+255),b
  1230                           
  1231                           ; BSR set to: 1
  1232                           
  1233                           ; BSR set to: 1
  1234  0001CE  C12C  F12A         	movff	_loop$880,_loop$879
  1235  0001D2  C12D  F12B         	movff	_loop$880+1,_loop$879+1
  1236                           
  1237                           ; BSR set to: 1
  1238                           
  1239                           ; BSR set to: 1
  1240                           
  1241                           ; BSR set to: 1
  1242                           
  1243                           ; BSR set to: 1
  1244  0001D6  C12A  F128         	movff	_loop$879,_loop$878
  1245  0001DA  C12B  F129         	movff	_loop$879+1,_loop$878+1
  1246                           
  1247                           ; BSR set to: 1
  1248                           
  1249                           ; BSR set to: 1
  1250                           
  1251                           ; BSR set to: 1
  1252                           
  1253                           ; BSR set to: 1
  1254  0001DE  0101               	movlb	1	; () banked
  1255  0001E0  5128               	movf	_loop$878& (0+255),w,b
  1256  0001E2  0101               	movlb	1	; () banked
  1257  0001E4  1129               	iorwf	(_loop$878+1)& (0+255),w,b
  1258  0001E6  A4D8               	btfss	status,2,c
  1259  0001E8  D006               	goto	l159
  1260                           
  1261                           ; BSR set to: 1
  1262                           ;main.c: 109: estado = MENU;
  1263  0001EA  0E00               	movlw	0
  1264  0001EC  0101               	movlb	1	; () banked
  1265  0001EE  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1266  0001F0  0E00               	movlw	0
  1267  0001F2  6FAE               	movwf	loop@estado& (0+255),b
  1268                           
  1269                           ;main.c: 110: break;
  1270  0001F4  0012               	return	
  1271  0001F6                     l159:
  1272                           
  1273                           ; BSR set to: 1
  1274                           ;main.c: 111: }
  1275                           ;main.c: 113: LATBbits.LB2 = 1;
  1276  0001F6  848A               	bsf	3978,2,c	;volatile
  1277                           
  1278                           ;main.c: 114: LATBbits.LB3 = 0;
  1279  0001F8  968A               	bcf	3978,3,c	;volatile
  1280                           
  1281                           ;main.c: 115: LATBbits.LB4 = 1;
  1282  0001FA  888A               	bsf	3978,4,c	;volatile
  1283                           
  1284                           ; BSR set to: 1
  1285                           ;main.c: 116: setMotores(1000, 1000);
  1286  0001FC  0E03               	movlw	3
  1287  0001FE  6E3A               	movwf	setMotores@dutyI+1,c
  1288  000200  0EE8               	movlw	232
  1289  000202  6E39               	movwf	setMotores@dutyI,c
  1290  000204  0E03               	movlw	3
  1291  000206  6E3C               	movwf	setMotores@dutyD+1,c
  1292  000208  0EE8               	movlw	232
  1293  00020A  6E3B               	movwf	setMotores@dutyD,c
  1294  00020C  ECD3  F003         	call	_setMotores	;wreg free
  1295                           
  1296                           ;main.c: 117: break;
  1297  000210  0012               	return	
  1298  000212                     l2336:
  1299                           
  1300                           ;main.c: 120: if(millis() > (m + 4970)){
  1301  000212  EC10  F007         	call	_millis	;wreg free
  1302  000216  0E6A               	movlw	106
  1303  000218  0101               	movlb	1	; () banked
  1304  00021A  25AA               	addwf	loop@m& (0+255),w,b
  1305  00021C  6E43               	movwf	??_loop& (0+255),c
  1306  00021E  0E13               	movlw	19
  1307  000220  0101               	movlb	1	; () banked
  1308  000222  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1309  000224  6E44               	movwf	(??_loop+1)& (0+255),c
  1310  000226  0E00               	movlw	0
  1311  000228  0101               	movlb	1	; () banked
  1312  00022A  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1313  00022C  6E45               	movwf	(??_loop+2)& (0+255),c
  1314  00022E  0E00               	movlw	0
  1315  000230  0101               	movlb	1	; () banked
  1316  000232  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1317  000234  6E46               	movwf	(??_loop+3)& (0+255),c
  1318  000236  500F               	movf	?_millis,w,c
  1319  000238  5C43               	subwf	??_loop,w,c
  1320  00023A  5010               	movf	?_millis+1,w,c
  1321  00023C  5844               	subwfb	??_loop+1,w,c
  1322  00023E  5011               	movf	?_millis+2,w,c
  1323  000240  5845               	subwfb	??_loop+2,w,c
  1324  000242  5012               	movf	?_millis+3,w,c
  1325  000244  5846               	subwfb	??_loop+3,w,c
  1326  000246  B0D8               	btfsc	status,0,c
  1327  000248  D009               	goto	l2346
  1328                           
  1329                           ; BSR set to: 1
  1330                           ;main.c: 121: estado = 1;
  1331  00024A  0E00               	movlw	0
  1332  00024C  0101               	movlb	1	; () banked
  1333  00024E  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1334  000250  0E01               	movlw	1
  1335  000252  6FAE               	movwf	loop@estado& (0+255),b
  1336                           
  1337                           ; BSR set to: 1
  1338                           ;main.c: 122: LATBbits.LB2 = 0;
  1339  000254  948A               	bcf	3978,2,c	;volatile
  1340                           
  1341                           ; BSR set to: 1
  1342                           ;main.c: 123: LATBbits.LB3 = 0;
  1343  000256  968A               	bcf	3978,3,c	;volatile
  1344                           
  1345                           ; BSR set to: 1
  1346                           ;main.c: 124: LATBbits.LB4 = 1;
  1347  000258  888A               	bsf	3978,4,c	;volatile
  1348                           
  1349                           ;main.c: 125: break;
  1350  00025A  0012               	return	
  1351  00025C                     l2346:
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 126: }
  1355                           ;main.c: 128: setMotores(0, 0);
  1356  00025C  0E00               	movlw	0
  1357  00025E  6E3A               	movwf	setMotores@dutyI+1,c
  1358  000260  0E00               	movlw	0
  1359  000262  6E39               	movwf	setMotores@dutyI,c
  1360  000264  0E00               	movlw	0
  1361  000266  6E3C               	movwf	setMotores@dutyD+1,c
  1362  000268  0E00               	movlw	0
  1363  00026A  6E3B               	movwf	setMotores@dutyD,c
  1364  00026C  ECD3  F003         	call	_setMotores	;wreg free
  1365                           
  1366                           ;main.c: 129: LATBbits.LB2 = 1;
  1367  000270  848A               	bsf	3978,2,c	;volatile
  1368                           
  1369                           ;main.c: 130: LATBbits.LB3 = millis() > (m + (4970 / 2));
  1370  000272  EC10  F007         	call	_millis	;wreg free
  1371  000276  0EB5               	movlw	181
  1372  000278  0101               	movlb	1	; () banked
  1373  00027A  25AA               	addwf	loop@m& (0+255),w,b
  1374  00027C  6E43               	movwf	??_loop& (0+255),c
  1375  00027E  0E09               	movlw	9
  1376  000280  0101               	movlb	1	; () banked
  1377  000282  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1378  000284  6E44               	movwf	(??_loop+1)& (0+255),c
  1379  000286  0E00               	movlw	0
  1380  000288  0101               	movlb	1	; () banked
  1381  00028A  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1382  00028C  6E45               	movwf	(??_loop+2)& (0+255),c
  1383  00028E  0E00               	movlw	0
  1384  000290  0101               	movlb	1	; () banked
  1385  000292  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1386  000294  6E46               	movwf	(??_loop+3)& (0+255),c
  1387  000296  500F               	movf	?_millis,w,c
  1388  000298  5C43               	subwf	??_loop,w,c
  1389  00029A  5010               	movf	?_millis+1,w,c
  1390  00029C  5844               	subwfb	??_loop+1,w,c
  1391  00029E  5011               	movf	?_millis+2,w,c
  1392  0002A0  5845               	subwfb	??_loop+2,w,c
  1393  0002A2  5012               	movf	?_millis+3,w,c
  1394  0002A4  5846               	subwfb	??_loop+3,w,c
  1395  0002A6  B0D8               	btfsc	status,0,c
  1396  0002A8  D003               	goto	u3470
  1397  0002AA  6A47               	clrf	(??_loop+4)& (0+255),c
  1398  0002AC  2A47               	incf	(??_loop+4)& (0+255),f,c
  1399  0002AE  D001               	goto	u3488
  1400  0002B0                     u3470:
  1401  0002B0  6A47               	clrf	(??_loop+4)& (0+255),c
  1402  0002B2                     u3488:
  1403  0002B2  4647               	rlncf	??_loop+4,f,c
  1404  0002B4  4647               	rlncf	??_loop+4,f,c
  1405  0002B6  4647               	rlncf	??_loop+4,f,c
  1406  0002B8  508A               	movf	3978,w,c	;volatile
  1407  0002BA  1847               	xorwf	??_loop+4,w,c
  1408  0002BC  0BF7               	andlw	-9
  1409  0002BE  1847               	xorwf	??_loop+4,w,c
  1410  0002C0  6E8A               	movwf	3978,c	;volatile
  1411                           
  1412                           ;main.c: 131: LATBbits.LB4 = 0;
  1413  0002C2  988A               	bcf	3978,4,c	;volatile
  1414                           
  1415                           ;main.c: 132: break;
  1416  0002C4  0012               	return	
  1417  0002C6                     l2358:
  1418  0002C6  B080               	btfsc	3968,0,c	;volatile
  1419  0002C8  D002               	goto	u3510
  1420  0002CA  0E01               	movlw	1
  1421  0002CC  D001               	goto	u3520
  1422  0002CE                     u3510:
  1423  0002CE  0E00               	movlw	0
  1424  0002D0                     u3520:
  1425  0002D0  0101               	movlb	1	; () banked
  1426  0002D2  6F2E               	movwf	_loop$881& (0+255),b
  1427  0002D4  6B2F               	clrf	(_loop$881+1)& (0+255),b
  1428                           
  1429                           ; BSR set to: 1
  1430                           
  1431                           ; BSR set to: 1
  1432  0002D6  0101               	movlb	1	; () banked
  1433  0002D8  512E               	movf	_loop$881& (0+255),w,b
  1434  0002DA  0101               	movlb	1	; () banked
  1435  0002DC  112F               	iorwf	(_loop$881+1)& (0+255),w,b
  1436  0002DE  A4D8               	btfss	status,2,c
  1437  0002E0  D012               	goto	l2374
  1438                           
  1439                           ; BSR set to: 1
  1440                           
  1441                           ; BSR set to: 1
  1442                           
  1443                           ; BSR set to: 1
  1444                           
  1445                           ; BSR set to: 1
  1446  0002E2  B280               	btfsc	3968,1,c	;volatile
  1447  0002E4  D002               	goto	u3540
  1448  0002E6  0E01               	movlw	1
  1449  0002E8  D001               	goto	u3550
  1450  0002EA                     u3540:
  1451  0002EA  0E00               	movlw	0
  1452  0002EC                     u3550:
  1453  0002EC  0101               	movlb	1	; () banked
  1454  0002EE  6F34               	movwf	_loop$884& (0+255),b
  1455  0002F0  6B35               	clrf	(_loop$884+1)& (0+255),b
  1456                           
  1457                           ; BSR set to: 1
  1458                           
  1459                           ; BSR set to: 1
  1460  0002F2  C134  F132         	movff	_loop$884,_loop$883
  1461  0002F6  C135  F133         	movff	_loop$884+1,_loop$883+1
  1462                           
  1463                           ; BSR set to: 1
  1464                           
  1465                           ; BSR set to: 1
  1466                           
  1467                           ; BSR set to: 1
  1468                           
  1469                           ; BSR set to: 1
  1470  0002FA  0101               	movlb	1	; () banked
  1471  0002FC  5132               	movf	_loop$883& (0+255),w,b
  1472  0002FE  0101               	movlb	1	; () banked
  1473  000300  1133               	iorwf	(_loop$883+1)& (0+255),w,b
  1474  000302  B4D8               	btfsc	status,2,c
  1475  000304  D010               	goto	l2388
  1476  000306                     l2374:
  1477                           
  1478                           ; BSR set to: 1
  1479                           ;main.c: 136: estado = ATRAS;
  1480  000306  0E00               	movlw	0
  1481  000308  0101               	movlb	1	; () banked
  1482  00030A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1483  00030C  0E0B               	movlw	11
  1484  00030E  6FAE               	movwf	loop@estado& (0+255),b
  1485                           
  1486                           ; BSR set to: 1
  1487                           ;main.c: 137: m = millis();
  1488  000310  EC10  F007         	call	_millis	;wreg free
  1489  000314  C00F  F1AA         	movff	?_millis,loop@m
  1490  000318  C010  F1AB         	movff	?_millis+1,loop@m+1
  1491  00031C  C011  F1AC         	movff	?_millis+2,loop@m+2
  1492  000320  C012  F1AD         	movff	?_millis+3,loop@m+3
  1493                           
  1494                           ;main.c: 138: break;
  1495  000324  0012               	return	
  1496  000326                     l2388:
  1497  000326  B480               	btfsc	3968,2,c	;volatile
  1498  000328  D002               	goto	u3630
  1499  00032A  0E01               	movlw	1
  1500  00032C  D001               	goto	u3640
  1501  00032E                     u3630:
  1502  00032E  0E00               	movlw	0
  1503  000330                     u3640:
  1504  000330  0101               	movlb	1	; () banked
  1505  000332  6F3A               	movwf	_loop$887& (0+255),b
  1506  000334  6B3B               	clrf	(_loop$887+1)& (0+255),b
  1507                           
  1508                           ; BSR set to: 1
  1509                           
  1510                           ; BSR set to: 1
  1511  000336  C13A  F138         	movff	_loop$887,_loop$886
  1512  00033A  C13B  F139         	movff	_loop$887+1,_loop$886+1
  1513                           
  1514                           ; BSR set to: 1
  1515                           
  1516                           ; BSR set to: 1
  1517                           
  1518                           ; BSR set to: 1
  1519                           
  1520                           ; BSR set to: 1
  1521  00033E  C138  F136         	movff	_loop$886,_loop$885
  1522  000342  C139  F137         	movff	_loop$886+1,_loop$885+1
  1523                           
  1524                           ; BSR set to: 1
  1525                           ;main.c: 142: if((2 == 1 ? !PORTAbits.RA4 : (2 == 2 ? !PORTAbits.RA3 : (2 == 3 ? !PORTAb
      +                          its.RA2 : (2 == 4 ? !PORTBbits.RB5 : (2 == 5 ? !PORTCbits.RC7 : 0))))) == (4 == 1 ? !POR
      +                          TAbits.RA4 : (4 == 2 ? !PORTAbits.RA3 : (4 == 3 ? !PORTAbits.RA2 : (4 == 4 ? !PORTBbits.
  1526                           
  1527                           ; BSR set to: 1
  1528                           
  1529                           ; BSR set to: 1
  1530                           
  1531                           ; BSR set to: 1
  1532  000346  0101               	movlb	1	; () banked
  1533  000348  5136               	movf	_loop$885& (0+255),w,b
  1534  00034A  0101               	movlb	1	; () banked
  1535  00034C  1137               	iorwf	(_loop$885+1)& (0+255),w,b
  1536  00034E  B4D8               	btfsc	status,2,c
  1537  000350  D069               	goto	l2508
  1538                           
  1539                           ; BSR set to: 1
  1540                           
  1541                           ; BSR set to: 1
  1542                           
  1543                           ; BSR set to: 1
  1544                           
  1545                           ; BSR set to: 1
  1546                           
  1547                           ; BSR set to: 1
  1548                           
  1549                           ; BSR set to: 1
  1550                           
  1551                           ; BSR set to: 1
  1552                           
  1553                           ; BSR set to: 1
  1554  000352  BA81               	btfsc	3969,5,c	;volatile
  1555  000354  D002               	goto	u3720
  1556  000356  0E01               	movlw	1
  1557  000358  D001               	goto	u3730
  1558  00035A                     u3720:
  1559  00035A  0E00               	movlw	0
  1560  00035C                     u3730:
  1561  00035C  0101               	movlb	1	; () banked
  1562  00035E  6F46               	movwf	_loop$893& (0+255),b
  1563  000360  6B47               	clrf	(_loop$893+1)& (0+255),b
  1564                           
  1565                           ; BSR set to: 1
  1566                           
  1567                           ; BSR set to: 1
  1568  000362  C146  F144         	movff	_loop$893,_loop$892
  1569  000366  C147  F145         	movff	_loop$893+1,_loop$892+1
  1570                           
  1571                           ; BSR set to: 1
  1572                           
  1573                           ; BSR set to: 1
  1574                           
  1575                           ; BSR set to: 1
  1576                           
  1577                           ; BSR set to: 1
  1578  00036A  C144  F142         	movff	_loop$892,_loop$891
  1579  00036E  C145  F143         	movff	_loop$892+1,_loop$891+1
  1580                           
  1581                           ; BSR set to: 1
  1582                           
  1583                           ; BSR set to: 1
  1584                           
  1585                           ; BSR set to: 1
  1586                           
  1587                           ; BSR set to: 1
  1588  000372  C142  F140         	movff	_loop$891,_loop$890
  1589  000376  C143  F141         	movff	_loop$891+1,_loop$890+1
  1590                           
  1591                           ; BSR set to: 1
  1592                           
  1593                           ; BSR set to: 1
  1594                           
  1595                           ; BSR set to: 1
  1596                           
  1597                           ; BSR set to: 1
  1598                           
  1599                           ; BSR set to: 1
  1600                           
  1601                           ; BSR set to: 1
  1602                           
  1603                           ; BSR set to: 1
  1604                           
  1605                           ; BSR set to: 1
  1606                           
  1607                           ; BSR set to: 1
  1608                           
  1609                           ; BSR set to: 1
  1610                           
  1611                           ; BSR set to: 1
  1612                           
  1613                           ; BSR set to: 1
  1614                           
  1615                           ; BSR set to: 1
  1616                           
  1617                           ; BSR set to: 1
  1618                           
  1619                           ; BSR set to: 1
  1620                           
  1621                           ; BSR set to: 1
  1622                           
  1623                           ; BSR set to: 1
  1624                           
  1625                           ; BSR set to: 1
  1626  00037A  B680               	btfsc	3968,3,c	;volatile
  1627  00037C  D002               	goto	u3860
  1628  00037E  0E01               	movlw	1
  1629  000380  D001               	goto	u3870
  1630  000382                     u3860:
  1631  000382  0E00               	movlw	0
  1632  000384                     u3870:
  1633  000384  0101               	movlb	1	; () banked
  1634  000386  6F4C               	movwf	_loop$896& (0+255),b
  1635  000388  6B4D               	clrf	(_loop$896+1)& (0+255),b
  1636                           
  1637                           ; BSR set to: 1
  1638                           
  1639                           ; BSR set to: 1
  1640  00038A  C14C  F14A         	movff	_loop$896,_loop$895
  1641  00038E  C14D  F14B         	movff	_loop$896+1,_loop$895+1
  1642                           
  1643                           ; BSR set to: 1
  1644                           
  1645                           ; BSR set to: 1
  1646                           
  1647                           ; BSR set to: 1
  1648                           
  1649                           ; BSR set to: 1
  1650  000392  0101               	movlb	1	; () banked
  1651  000394  5140               	movf	_loop$890& (0+255),w,b
  1652  000396  0101               	movlb	1	; () banked
  1653  000398  194A               	xorwf	_loop$895& (0+255),w,b
  1654  00039A  E10C               	bnz	l2460
  1655  00039C  0101               	movlb	1	; () banked
  1656  00039E  5141               	movf	(_loop$890+1)& (0+255),w,b
  1657  0003A0  0101               	movlb	1	; () banked
  1658  0003A2  194B               	xorwf	(_loop$895+1)& (0+255),w,b
  1659  0003A4  A4D8               	btfss	status,2,c
  1660  0003A6  D006               	goto	l2460
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 143: estado = ATAQUE;
  1664  0003A8  0E00               	movlw	0
  1665  0003AA  0101               	movlb	1	; () banked
  1666  0003AC  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1667  0003AE  0E04               	movlw	4
  1668  0003B0  6FAE               	movwf	loop@estado& (0+255),b
  1669                           
  1670                           ;main.c: 144: break;
  1671  0003B2  0012               	return	
  1672  0003B4                     l2460:
  1673                           
  1674                           ; BSR set to: 1
  1675  0003B4  B680               	btfsc	3968,3,c	;volatile
  1676  0003B6  D002               	goto	u3970
  1677  0003B8  0E01               	movlw	1
  1678  0003BA  D001               	goto	u3980
  1679  0003BC                     u3970:
  1680  0003BC  0E00               	movlw	0
  1681  0003BE                     u3980:
  1682  0003BE  0101               	movlb	1	; () banked
  1683  0003C0  6F56               	movwf	_loop$901& (0+255),b
  1684  0003C2  6B57               	clrf	(_loop$901+1)& (0+255),b
  1685                           
  1686                           ; BSR set to: 1
  1687                           
  1688                           ; BSR set to: 1
  1689  0003C4  C156  F154         	movff	_loop$901,_loop$900
  1690  0003C8  C157  F155         	movff	_loop$901+1,_loop$900+1
  1691                           
  1692                           ; BSR set to: 1
  1693                           
  1694                           ; BSR set to: 1
  1695                           
  1696                           ; BSR set to: 1
  1697                           
  1698                           ; BSR set to: 1
  1699  0003CC  0101               	movlb	1	; () banked
  1700  0003CE  5154               	movf	_loop$900& (0+255),w,b
  1701  0003D0  0101               	movlb	1	; () banked
  1702  0003D2  1155               	iorwf	(_loop$900+1)& (0+255),w,b
  1703  0003D4  B4D8               	btfsc	status,2,c
  1704  0003D6  D006               	goto	l2476
  1705                           
  1706                           ; BSR set to: 1
  1707                           ;main.c: 148: estado = IZQAV;
  1708  0003D8  0E00               	movlw	0
  1709  0003DA  0101               	movlb	1	; () banked
  1710  0003DC  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1711  0003DE  0E0A               	movlw	10
  1712  0003E0  6FAE               	movwf	loop@estado& (0+255),b
  1713                           
  1714                           ;main.c: 149: break;
  1715  0003E2  0012               	return	
  1716  0003E4                     l2476:
  1717                           
  1718                           ; BSR set to: 1
  1719  0003E4  BA81               	btfsc	3969,5,c	;volatile
  1720  0003E6  D002               	goto	u4040
  1721  0003E8  0E01               	movlw	1
  1722  0003EA  D001               	goto	u4050
  1723  0003EC                     u4040:
  1724  0003EC  0E00               	movlw	0
  1725  0003EE                     u4050:
  1726  0003EE  0101               	movlb	1	; () banked
  1727  0003F0  6F64               	movwf	_loop$908& (0+255),b
  1728  0003F2  6B65               	clrf	(_loop$908+1)& (0+255),b
  1729                           
  1730                           ; BSR set to: 1
  1731                           
  1732                           ; BSR set to: 1
  1733  0003F4  C164  F162         	movff	_loop$908,_loop$907
  1734  0003F8  C165  F163         	movff	_loop$908+1,_loop$907+1
  1735                           
  1736                           ; BSR set to: 1
  1737                           
  1738                           ; BSR set to: 1
  1739                           
  1740                           ; BSR set to: 1
  1741                           
  1742                           ; BSR set to: 1
  1743  0003FC  C162  F160         	movff	_loop$907,_loop$906
  1744  000400  C163  F161         	movff	_loop$907+1,_loop$906+1
  1745                           
  1746                           ; BSR set to: 1
  1747                           
  1748                           ; BSR set to: 1
  1749                           
  1750                           ; BSR set to: 1
  1751                           
  1752                           ; BSR set to: 1
  1753  000404  C160  F15E         	movff	_loop$906,_loop$905
  1754  000408  C161  F15F         	movff	_loop$906+1,_loop$905+1
  1755                           
  1756                           ; BSR set to: 1
  1757                           
  1758                           ; BSR set to: 1
  1759                           
  1760                           ; BSR set to: 1
  1761                           
  1762                           ; BSR set to: 1
  1763  00040C  0101               	movlb	1	; () banked
  1764  00040E  515E               	movf	_loop$905& (0+255),w,b
  1765  000410  0101               	movlb	1	; () banked
  1766  000412  115F               	iorwf	(_loop$905+1)& (0+255),w,b
  1767  000414  B4D8               	btfsc	status,2,c
  1768  000416  D006               	goto	l2508
  1769                           
  1770                           ; BSR set to: 1
  1771                           ;main.c: 153: estado = DERAV;
  1772  000418  0E00               	movlw	0
  1773  00041A  0101               	movlb	1	; () banked
  1774  00041C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1775  00041E  0E07               	movlw	7
  1776  000420  6FAE               	movwf	loop@estado& (0+255),b
  1777                           
  1778                           ;main.c: 154: break;
  1779  000422  0012               	return	
  1780  000424                     l2508:
  1781                           
  1782                           ; BSR set to: 1
  1783  000424  B680               	btfsc	3968,3,c	;volatile
  1784  000426  D002               	goto	u4190
  1785  000428  0E01               	movlw	1
  1786  00042A  D001               	goto	u4200
  1787  00042C                     u4190:
  1788  00042C  0E00               	movlw	0
  1789  00042E                     u4200:
  1790  00042E  0101               	movlb	1	; () banked
  1791  000430  6F6A               	movwf	_loop$911& (0+255),b
  1792  000432  6B6B               	clrf	(_loop$911+1)& (0+255),b
  1793                           
  1794                           ; BSR set to: 1
  1795                           
  1796                           ; BSR set to: 1
  1797  000434  C16A  F168         	movff	_loop$911,_loop$910
  1798  000438  C16B  F169         	movff	_loop$911+1,_loop$910+1
  1799                           
  1800                           ; BSR set to: 1
  1801                           
  1802                           ; BSR set to: 1
  1803                           
  1804                           ; BSR set to: 1
  1805                           
  1806                           ; BSR set to: 1
  1807  00043C  0101               	movlb	1	; () banked
  1808  00043E  5168               	movf	_loop$910& (0+255),w,b
  1809  000440  0101               	movlb	1	; () banked
  1810  000442  1169               	iorwf	(_loop$910+1)& (0+255),w,b
  1811  000444  B4D8               	btfsc	status,2,c
  1812  000446  D006               	goto	l2524
  1813                           
  1814                           ; BSR set to: 1
  1815                           ;main.c: 159: estado = IZQA;
  1816  000448  0E00               	movlw	0
  1817  00044A  0101               	movlb	1	; () banked
  1818  00044C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1819  00044E  0E09               	movlw	9
  1820  000450  6FAE               	movwf	loop@estado& (0+255),b
  1821                           
  1822                           ;main.c: 160: break;
  1823  000452  0012               	return	
  1824  000454                     l2524:
  1825                           
  1826                           ; BSR set to: 1
  1827  000454  BA81               	btfsc	3969,5,c	;volatile
  1828  000456  D002               	goto	u4260
  1829  000458  0E01               	movlw	1
  1830  00045A  D001               	goto	u4270
  1831  00045C                     u4260:
  1832  00045C  0E00               	movlw	0
  1833  00045E                     u4270:
  1834  00045E  0101               	movlb	1	; () banked
  1835  000460  6F78               	movwf	_loop$918& (0+255),b
  1836  000462  6B79               	clrf	(_loop$918+1)& (0+255),b
  1837                           
  1838                           ; BSR set to: 1
  1839                           
  1840                           ; BSR set to: 1
  1841  000464  C178  F176         	movff	_loop$918,_loop$917
  1842  000468  C179  F177         	movff	_loop$918+1,_loop$917+1
  1843                           
  1844                           ; BSR set to: 1
  1845                           
  1846                           ; BSR set to: 1
  1847                           
  1848                           ; BSR set to: 1
  1849                           
  1850                           ; BSR set to: 1
  1851  00046C  C176  F174         	movff	_loop$917,_loop$916
  1852  000470  C177  F175         	movff	_loop$917+1,_loop$916+1
  1853                           
  1854                           ; BSR set to: 1
  1855                           
  1856                           ; BSR set to: 1
  1857                           
  1858                           ; BSR set to: 1
  1859                           
  1860                           ; BSR set to: 1
  1861  000474  C174  F172         	movff	_loop$916,_loop$915
  1862  000478  C175  F173         	movff	_loop$916+1,_loop$915+1
  1863                           
  1864                           ; BSR set to: 1
  1865                           
  1866                           ; BSR set to: 1
  1867                           
  1868                           ; BSR set to: 1
  1869                           
  1870                           ; BSR set to: 1
  1871  00047C  0101               	movlb	1	; () banked
  1872  00047E  5172               	movf	_loop$915& (0+255),w,b
  1873  000480  0101               	movlb	1	; () banked
  1874  000482  1173               	iorwf	(_loop$915+1)& (0+255),w,b
  1875  000484  B4D8               	btfsc	status,2,c
  1876  000486  D006               	goto	l2560
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;main.c: 164: estado = DERA;
  1880  000488  0E00               	movlw	0
  1881  00048A  0101               	movlb	1	; () banked
  1882  00048C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1883  00048E  0E06               	movlw	6
  1884  000490  6FAE               	movwf	loop@estado& (0+255),b
  1885                           
  1886                           ;main.c: 165: break;
  1887  000492  0012               	return	
  1888  000494                     l2560:
  1889                           
  1890                           ; BSR set to: 1
  1891  000494  B880               	btfsc	3968,4,c	;volatile
  1892  000496  D002               	goto	u4430
  1893  000498  0E01               	movlw	1
  1894  00049A  D001               	goto	u4440
  1895  00049C                     u4430:
  1896  00049C  0E00               	movlw	0
  1897  00049E                     u4440:
  1898  00049E  0101               	movlb	1	; () banked
  1899  0004A0  6F7C               	movwf	_loop$920& (0+255),b
  1900  0004A2  6B7D               	clrf	(_loop$920+1)& (0+255),b
  1901                           
  1902                           ; BSR set to: 1
  1903                           
  1904                           ; BSR set to: 1
  1905  0004A4  0101               	movlb	1	; () banked
  1906  0004A6  517C               	movf	_loop$920& (0+255),w,b
  1907  0004A8  0101               	movlb	1	; () banked
  1908  0004AA  117D               	iorwf	(_loop$920+1)& (0+255),w,b
  1909  0004AC  B4D8               	btfsc	status,2,c
  1910  0004AE  D006               	goto	l2568
  1911                           
  1912                           ; BSR set to: 1
  1913                           ;main.c: 169: estado = IZQ;
  1914  0004B0  0E00               	movlw	0
  1915  0004B2  0101               	movlb	1	; () banked
  1916  0004B4  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1917  0004B6  0E08               	movlw	8
  1918  0004B8  6FAE               	movwf	loop@estado& (0+255),b
  1919                           
  1920                           ;main.c: 170: break;
  1921  0004BA  0012               	return	
  1922  0004BC                     l2568:
  1923                           
  1924                           ; BSR set to: 1
  1925  0004BC  BE82               	btfsc	3970,7,c	;volatile
  1926  0004BE  D002               	goto	u4460
  1927  0004C0  0E01               	movlw	1
  1928  0004C2  D001               	goto	u4470
  1929  0004C4                     u4460:
  1930  0004C4  0E00               	movlw	0
  1931  0004C6                     u4470:
  1932  0004C6  0101               	movlb	1	; () banked
  1933  0004C8  6F8E               	movwf	_loop$929& (0+255),b
  1934  0004CA  6B8F               	clrf	(_loop$929+1)& (0+255),b
  1935                           
  1936                           ; BSR set to: 1
  1937                           
  1938                           ; BSR set to: 1
  1939  0004CC  C18E  F18C         	movff	_loop$929,_loop$928
  1940  0004D0  C18F  F18D         	movff	_loop$929+1,_loop$928+1
  1941                           
  1942                           ; BSR set to: 1
  1943                           
  1944                           ; BSR set to: 1
  1945                           
  1946                           ; BSR set to: 1
  1947                           
  1948                           ; BSR set to: 1
  1949  0004D4  C18C  F18A         	movff	_loop$928,_loop$927
  1950  0004D8  C18D  F18B         	movff	_loop$928+1,_loop$927+1
  1951                           
  1952                           ; BSR set to: 1
  1953                           
  1954                           ; BSR set to: 1
  1955                           
  1956                           ; BSR set to: 1
  1957                           
  1958                           ; BSR set to: 1
  1959  0004DC  C18A  F188         	movff	_loop$927,_loop$926
  1960  0004E0  C18B  F189         	movff	_loop$927+1,_loop$926+1
  1961                           
  1962                           ; BSR set to: 1
  1963                           
  1964                           ; BSR set to: 1
  1965                           
  1966                           ; BSR set to: 1
  1967                           
  1968                           ; BSR set to: 1
  1969  0004E4  C188  F186         	movff	_loop$926,_loop$925
  1970  0004E8  C189  F187         	movff	_loop$926+1,_loop$925+1
  1971                           
  1972                           ; BSR set to: 1
  1973                           
  1974                           ; BSR set to: 1
  1975                           
  1976                           ; BSR set to: 1
  1977                           
  1978                           ; BSR set to: 1
  1979  0004EC  0101               	movlb	1	; () banked
  1980  0004EE  5186               	movf	_loop$925& (0+255),w,b
  1981  0004F0  0101               	movlb	1	; () banked
  1982  0004F2  1187               	iorwf	(_loop$925+1)& (0+255),w,b
  1983  0004F4  B4D8               	btfsc	status,2,c
  1984  0004F6  D006               	goto	l361
  1985                           
  1986                           ; BSR set to: 1
  1987                           ;main.c: 174: estado = DER;
  1988  0004F8  0E00               	movlw	0
  1989  0004FA  0101               	movlb	1	; () banked
  1990  0004FC  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1991  0004FE  0E05               	movlw	5
  1992  000500  6FAE               	movwf	loop@estado& (0+255),b
  1993                           
  1994                           ;main.c: 175: break;
  1995  000502  0012               	return	
  1996  000504                     l361:
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;main.c: 176: }
  2000                           ;main.c: 178: estado = direccion;
  2001  000504  C1B0  F1AE         	movff	loop@direccion,loop@estado
  2002  000508  C1B1  F1AF         	movff	loop@direccion+1,loop@estado+1
  2003                           
  2004                           ;main.c: 179: break;
  2005  00050C  0012               	return	
  2006  00050E                     l2590:
  2007                           
  2008                           ;main.c: 182: setMotores(1000, 1000);
  2009  00050E  0E03               	movlw	3
  2010  000510  6E3A               	movwf	setMotores@dutyI+1,c
  2011  000512  0EE8               	movlw	232
  2012  000514  6E39               	movwf	setMotores@dutyI,c
  2013  000516  0E03               	movlw	3
  2014  000518  6E3C               	movwf	setMotores@dutyD+1,c
  2015  00051A  0EE8               	movlw	232
  2016  00051C  6E3B               	movwf	setMotores@dutyD,c
  2017  00051E  ECD3  F003         	call	_setMotores	;wreg free
  2018                           
  2019                           ;main.c: 183: estado = ANALISIS;
  2020  000522  0E00               	movlw	0
  2021  000524  0101               	movlb	1	; () banked
  2022  000526  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2023  000528  0E03               	movlw	3
  2024  00052A  6FAE               	movwf	loop@estado& (0+255),b
  2025                           
  2026                           ;main.c: 184: break;
  2027  00052C  0012               	return	
  2028  00052E                     l2594:
  2029                           
  2030                           ;main.c: 187: setMotores(1000, 1000 / 2);
  2031  00052E  0E03               	movlw	3
  2032  000530  6E3A               	movwf	setMotores@dutyI+1,c
  2033  000532  0EE8               	movlw	232
  2034  000534  6E39               	movwf	setMotores@dutyI,c
  2035  000536  0E01               	movlw	1
  2036  000538  6E3C               	movwf	setMotores@dutyD+1,c
  2037  00053A  0EF4               	movlw	244
  2038  00053C  6E3B               	movwf	setMotores@dutyD,c
  2039  00053E  ECD3  F003         	call	_setMotores	;wreg free
  2040                           
  2041                           ;main.c: 188: direccion = DER;
  2042  000542  0E00               	movlw	0
  2043  000544  0101               	movlb	1	; () banked
  2044  000546  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2045  000548  0E05               	movlw	5
  2046  00054A  6FB0               	movwf	loop@direccion& (0+255),b
  2047                           
  2048                           ; BSR set to: 1
  2049                           ;main.c: 189: estado = ANALISIS;
  2050  00054C  0E00               	movlw	0
  2051  00054E  0101               	movlb	1	; () banked
  2052  000550  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2053  000552  0E03               	movlw	3
  2054  000554  6FAE               	movwf	loop@estado& (0+255),b
  2055                           
  2056                           ;main.c: 190: break;
  2057  000556  0012               	return	
  2058  000558                     l2600:
  2059                           
  2060                           ;main.c: 193: setMotores(1000 / 2, 1000);
  2061  000558  0E01               	movlw	1
  2062  00055A  6E3A               	movwf	setMotores@dutyI+1,c
  2063  00055C  0EF4               	movlw	244
  2064  00055E  6E39               	movwf	setMotores@dutyI,c
  2065  000560  0E03               	movlw	3
  2066  000562  6E3C               	movwf	setMotores@dutyD+1,c
  2067  000564  0EE8               	movlw	232
  2068  000566  6E3B               	movwf	setMotores@dutyD,c
  2069  000568  ECD3  F003         	call	_setMotores	;wreg free
  2070                           
  2071                           ;main.c: 194: direccion = IZQ;
  2072  00056C  0E00               	movlw	0
  2073  00056E  0101               	movlb	1	; () banked
  2074  000570  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2075  000572  0E08               	movlw	8
  2076  000574  6FB0               	movwf	loop@direccion& (0+255),b
  2077                           
  2078                           ; BSR set to: 1
  2079                           ;main.c: 195: estado = ANALISIS;
  2080  000576  0E00               	movlw	0
  2081  000578  0101               	movlb	1	; () banked
  2082  00057A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2083  00057C  0E03               	movlw	3
  2084  00057E  6FAE               	movwf	loop@estado& (0+255),b
  2085                           
  2086                           ;main.c: 196: break;
  2087  000580  0012               	return	
  2088  000582                     l2606:
  2089                           
  2090                           ;main.c: 199: if(millis() > (m + 200)){
  2091  000582  EC10  F007         	call	_millis	;wreg free
  2092  000586  0EC8               	movlw	200
  2093  000588  0101               	movlb	1	; () banked
  2094  00058A  25AA               	addwf	loop@m& (0+255),w,b
  2095  00058C  6E43               	movwf	??_loop& (0+255),c
  2096  00058E  0E00               	movlw	0
  2097  000590  0101               	movlb	1	; () banked
  2098  000592  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  2099  000594  6E44               	movwf	(??_loop+1)& (0+255),c
  2100  000596  0E00               	movlw	0
  2101  000598  0101               	movlb	1	; () banked
  2102  00059A  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  2103  00059C  6E45               	movwf	(??_loop+2)& (0+255),c
  2104  00059E  0E00               	movlw	0
  2105  0005A0  0101               	movlb	1	; () banked
  2106  0005A2  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  2107  0005A4  6E46               	movwf	(??_loop+3)& (0+255),c
  2108  0005A6  500F               	movf	?_millis,w,c
  2109  0005A8  5C43               	subwf	??_loop,w,c
  2110  0005AA  5010               	movf	?_millis+1,w,c
  2111  0005AC  5844               	subwfb	??_loop+1,w,c
  2112  0005AE  5011               	movf	?_millis+2,w,c
  2113  0005B0  5845               	subwfb	??_loop+2,w,c
  2114  0005B2  5012               	movf	?_millis+3,w,c
  2115  0005B4  5846               	subwfb	??_loop+3,w,c
  2116  0005B6  B0D8               	btfsc	status,0,c
  2117  0005B8  D006               	goto	l2610
  2118                           
  2119                           ; BSR set to: 1
  2120                           ;main.c: 200: estado = ANALISIS;
  2121  0005BA  0E00               	movlw	0
  2122  0005BC  0101               	movlb	1	; () banked
  2123  0005BE  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2124  0005C0  0E03               	movlw	3
  2125  0005C2  6FAE               	movwf	loop@estado& (0+255),b
  2126                           
  2127                           ;main.c: 201: break;
  2128  0005C4  0012               	return	
  2129  0005C6                     l2610:
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 202: }
  2133                           ;main.c: 204: setMotores(-1000, -1000);
  2134  0005C6  0EFC               	movlw	252
  2135  0005C8  6E3A               	movwf	setMotores@dutyI+1,c
  2136  0005CA  0E18               	movlw	24
  2137  0005CC  6E39               	movwf	setMotores@dutyI,c
  2138  0005CE  0EFC               	movlw	252
  2139  0005D0  6E3C               	movwf	setMotores@dutyD+1,c
  2140  0005D2  0E18               	movlw	24
  2141  0005D4  6E3B               	movwf	setMotores@dutyD,c
  2142  0005D6  ECD3  F003         	call	_setMotores	;wreg free
  2143                           
  2144                           ;main.c: 205: break;
  2145  0005DA  0012               	return	
  2146  0005DC                     l2612:
  2147                           
  2148                           ;main.c: 208: setMotores(0, 1000);
  2149  0005DC  0E00               	movlw	0
  2150  0005DE  6E3A               	movwf	setMotores@dutyI+1,c
  2151  0005E0  0E00               	movlw	0
  2152  0005E2  6E39               	movwf	setMotores@dutyI,c
  2153  0005E4  0E03               	movlw	3
  2154  0005E6  6E3C               	movwf	setMotores@dutyD+1,c
  2155  0005E8  0EE8               	movlw	232
  2156  0005EA  6E3B               	movwf	setMotores@dutyD,c
  2157  0005EC  ECD3  F003         	call	_setMotores	;wreg free
  2158                           
  2159                           ;main.c: 209: direccion = IZQ;
  2160  0005F0  0E00               	movlw	0
  2161  0005F2  0101               	movlb	1	; () banked
  2162  0005F4  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2163  0005F6  0E08               	movlw	8
  2164  0005F8  6FB0               	movwf	loop@direccion& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;main.c: 210: estado = ANALISIS;
  2168  0005FA  0E00               	movlw	0
  2169  0005FC  0101               	movlb	1	; () banked
  2170  0005FE  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2171  000600  0E03               	movlw	3
  2172  000602  6FAE               	movwf	loop@estado& (0+255),b
  2173                           
  2174                           ;main.c: 211: break;
  2175  000604  0012               	return	
  2176  000606                     l2618:
  2177                           
  2178                           ;main.c: 214: setMotores(1000, 0);
  2179  000606  0E03               	movlw	3
  2180  000608  6E3A               	movwf	setMotores@dutyI+1,c
  2181  00060A  0EE8               	movlw	232
  2182  00060C  6E39               	movwf	setMotores@dutyI,c
  2183  00060E  0E00               	movlw	0
  2184  000610  6E3C               	movwf	setMotores@dutyD+1,c
  2185  000612  0E00               	movlw	0
  2186  000614  6E3B               	movwf	setMotores@dutyD,c
  2187  000616  ECD3  F003         	call	_setMotores	;wreg free
  2188                           
  2189                           ;main.c: 215: direccion = DER;
  2190  00061A  0E00               	movlw	0
  2191  00061C  0101               	movlb	1	; () banked
  2192  00061E  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2193  000620  0E05               	movlw	5
  2194  000622  6FB0               	movwf	loop@direccion& (0+255),b
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;main.c: 216: estado = ANALISIS;
  2198  000624  0E00               	movlw	0
  2199  000626  0101               	movlb	1	; () banked
  2200  000628  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2201  00062A  0E03               	movlw	3
  2202  00062C  6FAE               	movwf	loop@estado& (0+255),b
  2203                           
  2204                           ;main.c: 217: break;
  2205  00062E  0012               	return	
  2206  000630                     l2624:
  2207                           
  2208                           ;main.c: 220: setMotores(-700, 700);
  2209  000630  0EFD               	movlw	253
  2210  000632  6E3A               	movwf	setMotores@dutyI+1,c
  2211  000634  0E44               	movlw	68
  2212  000636  6E39               	movwf	setMotores@dutyI,c
  2213  000638  0E02               	movlw	2
  2214  00063A  6E3C               	movwf	setMotores@dutyD+1,c
  2215  00063C  0EBC               	movlw	188
  2216  00063E  6E3B               	movwf	setMotores@dutyD,c
  2217  000640  ECD3  F003         	call	_setMotores	;wreg free
  2218                           
  2219                           ;main.c: 221: direccion = IZQ;
  2220  000644  0E00               	movlw	0
  2221  000646  0101               	movlb	1	; () banked
  2222  000648  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2223  00064A  0E08               	movlw	8
  2224  00064C  6FB0               	movwf	loop@direccion& (0+255),b
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;main.c: 222: estado = ANALISIS;
  2228  00064E  0E00               	movlw	0
  2229  000650  0101               	movlb	1	; () banked
  2230  000652  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2231  000654  0E03               	movlw	3
  2232  000656  6FAE               	movwf	loop@estado& (0+255),b
  2233                           
  2234                           ;main.c: 223: break;
  2235  000658  0012               	return	
  2236  00065A                     l2630:
  2237                           
  2238                           ;main.c: 226: setMotores(700, -700);
  2239  00065A  0E02               	movlw	2
  2240  00065C  6E3A               	movwf	setMotores@dutyI+1,c
  2241  00065E  0EBC               	movlw	188
  2242  000660  6E39               	movwf	setMotores@dutyI,c
  2243  000662  0EFD               	movlw	253
  2244  000664  6E3C               	movwf	setMotores@dutyD+1,c
  2245  000666  0E44               	movlw	68
  2246  000668  6E3B               	movwf	setMotores@dutyD,c
  2247  00066A  ECD3  F003         	call	_setMotores	;wreg free
  2248                           
  2249                           ;main.c: 227: direccion = DER;
  2250  00066E  0E00               	movlw	0
  2251  000670  0101               	movlb	1	; () banked
  2252  000672  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2253  000674  0E05               	movlw	5
  2254  000676  6FB0               	movwf	loop@direccion& (0+255),b
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;main.c: 228: estado = ANALISIS;
  2258  000678  0E00               	movlw	0
  2259  00067A  0101               	movlb	1	; () banked
  2260  00067C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2261  00067E  0E03               	movlw	3
  2262  000680  6FAE               	movwf	loop@estado& (0+255),b
  2263                           
  2264                           ;main.c: 229: break;
  2265  000682  0012               	return	
  2266  000684                     l2636:
  2267                           
  2268                           ;main.c: 232: LATBbits.LB2 = !PORTAbits.RA0;
  2269  000684  B080               	btfsc	3968,0,c	;volatile
  2270  000686  D003               	goto	u4580
  2271  000688  6A43               	clrf	??_loop& (0+255),c
  2272  00068A  2A43               	incf	??_loop& (0+255),f,c
  2273  00068C  D001               	goto	u4598
  2274  00068E                     u4580:
  2275  00068E  6A43               	clrf	??_loop& (0+255),c
  2276  000690                     u4598:
  2277  000690  4643               	rlncf	??_loop,f,c
  2278  000692  4643               	rlncf	??_loop,f,c
  2279  000694  508A               	movf	3978,w,c	;volatile
  2280  000696  1843               	xorwf	??_loop,w,c
  2281  000698  0BFB               	andlw	-5
  2282  00069A  1843               	xorwf	??_loop,w,c
  2283  00069C  6E8A               	movwf	3978,c	;volatile
  2284                           
  2285                           ;main.c: 233: LATBbits.LB4 = !PORTAbits.RA1;
  2286  00069E  B280               	btfsc	3968,1,c	;volatile
  2287  0006A0  D003               	goto	u4600
  2288  0006A2  6A43               	clrf	??_loop& (0+255),c
  2289  0006A4  2A43               	incf	??_loop& (0+255),f,c
  2290  0006A6  D001               	goto	u4618
  2291  0006A8                     u4600:
  2292  0006A8  6A43               	clrf	??_loop& (0+255),c
  2293  0006AA                     u4618:
  2294  0006AA  3A43               	swapf	??_loop,f,c
  2295  0006AC  508A               	movf	3978,w,c	;volatile
  2296  0006AE  1843               	xorwf	??_loop,w,c
  2297  0006B0  0BEF               	andlw	-17
  2298  0006B2  1843               	xorwf	??_loop,w,c
  2299  0006B4  6E8A               	movwf	3978,c	;volatile
  2300                           
  2301                           ;main.c: 234: LATBbits.LB3 = 1;
  2302  0006B6  868A               	bsf	3978,3,c	;volatile
  2303                           
  2304                           ; BSR set to: 1
  2305                           
  2306                           ; BSR set to: 1
  2307                           
  2308                           ; BSR set to: 1
  2309                           
  2310                           ; BSR set to: 1
  2311                           
  2312                           ; BSR set to: 1
  2313                           
  2314                           ; BSR set to: 1
  2315                           
  2316                           ; BSR set to: 1
  2317                           
  2318                           ; BSR set to: 1
  2319                           
  2320                           ; BSR set to: 1
  2321                           
  2322                           ;main.c: 235: if((1 == 1 ? !PORTBbits.RB0 : (1 == 2 ? !PORTBbits.RB1 : (1 == 0 ? !PORTAb
      +                          its.RA5 : 0))) || (2 == 1 ? !PORTBbits.RB0 : (2 == 2 ? !PORTBbits.RB1 : (2 == 0 ? !PORTA
      +                          bits.RA5 : 0)))){
  2323  0006B8  B081               	btfsc	3969,0,c	;volatile
  2324  0006BA  D002               	goto	u4660
  2325  0006BC  0E01               	movlw	1
  2326  0006BE  D001               	goto	u4670
  2327  0006C0                     u4660:
  2328  0006C0  0E00               	movlw	0
  2329  0006C2                     u4670:
  2330  0006C2  0101               	movlb	1	; () banked
  2331  0006C4  6F90               	movwf	_loop$930& (0+255),b
  2332  0006C6  6B91               	clrf	(_loop$930+1)& (0+255),b
  2333                           
  2334                           ; BSR set to: 1
  2335                           
  2336                           ; BSR set to: 1
  2337  0006C8  0101               	movlb	1	; () banked
  2338  0006CA  5190               	movf	_loop$930& (0+255),w,b
  2339  0006CC  0101               	movlb	1	; () banked
  2340  0006CE  1191               	iorwf	(_loop$930+1)& (0+255),w,b
  2341  0006D0  A4D8               	btfss	status,2,c
  2342  0006D2  D012               	goto	l2680
  2343                           
  2344                           ; BSR set to: 1
  2345                           
  2346                           ; BSR set to: 1
  2347                           
  2348                           ; BSR set to: 1
  2349                           
  2350                           ; BSR set to: 1
  2351                           
  2352                           ; BSR set to: 1
  2353                           
  2354                           ; BSR set to: 1
  2355                           
  2356                           ; BSR set to: 1
  2357                           
  2358                           ; BSR set to: 1
  2359  0006D4  B281               	btfsc	3969,1,c	;volatile
  2360  0006D6  D002               	goto	u4710
  2361  0006D8  0E01               	movlw	1
  2362  0006DA  D001               	goto	u4720
  2363  0006DC                     u4710:
  2364  0006DC  0E00               	movlw	0
  2365  0006DE                     u4720:
  2366  0006DE  0101               	movlb	1	; () banked
  2367  0006E0  6F98               	movwf	_loop$934& (0+255),b
  2368  0006E2  6B99               	clrf	(_loop$934+1)& (0+255),b
  2369                           
  2370                           ; BSR set to: 1
  2371                           
  2372                           ; BSR set to: 1
  2373  0006E4  C198  F196         	movff	_loop$934,_loop$933
  2374  0006E8  C199  F197         	movff	_loop$934+1,_loop$933+1
  2375                           
  2376                           ; BSR set to: 1
  2377                           
  2378                           ; BSR set to: 1
  2379                           
  2380                           ; BSR set to: 1
  2381                           
  2382                           ; BSR set to: 1
  2383  0006EC  0101               	movlb	1	; () banked
  2384  0006EE  5196               	movf	_loop$933& (0+255),w,b
  2385  0006F0  0101               	movlb	1	; () banked
  2386  0006F2  1197               	iorwf	(_loop$933+1)& (0+255),w,b
  2387  0006F4  B4D8               	btfsc	status,2,c
  2388  0006F6  0012               	return	
  2389  0006F8                     l2680:
  2390                           
  2391                           ; BSR set to: 1
  2392  0006F8  B081               	btfsc	3969,0,c	;volatile
  2393  0006FA  D002               	goto	u4800
  2394  0006FC  0E01               	movlw	1
  2395  0006FE  D001               	goto	u4810
  2396  000700                     u4800:
  2397  000700  0E00               	movlw	0
  2398  000702                     u4810:
  2399  000702  0101               	movlb	1	; () banked
  2400  000704  6F9C               	movwf	_loop$936& (0+255),b
  2401  000706  6B9D               	clrf	(_loop$936+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           
  2405                           ; BSR set to: 1
  2406  000708  0101               	movlb	1	; () banked
  2407  00070A  519C               	movf	_loop$936& (0+255),w,b
  2408  00070C  0101               	movlb	1	; () banked
  2409  00070E  119D               	iorwf	(_loop$936+1)& (0+255),w,b
  2410  000710  A4D8               	btfss	status,2,c
  2411  000712  D7F2               	goto	l2680
  2412                           
  2413                           ; BSR set to: 1
  2414                           
  2415                           ; BSR set to: 1
  2416                           
  2417                           ; BSR set to: 1
  2418                           
  2419                           ; BSR set to: 1
  2420                           
  2421                           ; BSR set to: 1
  2422                           
  2423                           ; BSR set to: 1
  2424                           
  2425                           ; BSR set to: 1
  2426                           
  2427                           ; BSR set to: 1
  2428  000714  B281               	btfsc	3969,1,c	;volatile
  2429  000716  D002               	goto	u4850
  2430  000718  0E01               	movlw	1
  2431  00071A  D001               	goto	u4860
  2432  00071C                     u4850:
  2433  00071C  0E00               	movlw	0
  2434  00071E                     u4860:
  2435  00071E  0101               	movlb	1	; () banked
  2436  000720  6FA4               	movwf	_loop$940& (0+255),b
  2437  000722  6BA5               	clrf	(_loop$940+1)& (0+255),b
  2438                           
  2439                           ; BSR set to: 1
  2440                           
  2441                           ; BSR set to: 1
  2442  000724  C1A4  F1A2         	movff	_loop$940,_loop$939
  2443  000728  C1A5  F1A3         	movff	_loop$940+1,_loop$939+1
  2444                           
  2445                           ; BSR set to: 1
  2446                           
  2447                           ; BSR set to: 1
  2448                           
  2449                           ; BSR set to: 1
  2450                           
  2451                           ; BSR set to: 1
  2452  00072C  0101               	movlb	1	; () banked
  2453  00072E  51A2               	movf	_loop$939& (0+255),w,b
  2454  000730  0101               	movlb	1	; () banked
  2455  000732  11A3               	iorwf	(_loop$939+1)& (0+255),w,b
  2456  000734  A4D8               	btfss	status,2,c
  2457  000736  D7E0               	goto	l2680
  2458                           
  2459                           ; BSR set to: 1
  2460                           ;main.c: 237: estado = 0;
  2461                           
  2462                           ; BSR set to: 1
  2463  000738  0E00               	movlw	0
  2464  00073A  0101               	movlb	1	; () banked
  2465  00073C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2466  00073E  0E00               	movlw	0
  2467  000740  6FAE               	movwf	loop@estado& (0+255),b
  2468                           
  2469                           ; BSR set to: 1
  2470                           ;main.c: 240: }
  2471                           
  2472                           ; BSR set to: 1
  2473                           ;main.c: 238: }
  2474                           ;main.c: 239: break;
  2475  000742  0012               	return	
  2476  000744                     l2704:
  2477  000744  C1AE  F043         	movff	loop@estado,??_loop
  2478  000748  C1AF  F044         	movff	loop@estado+1,??_loop+1
  2479                           
  2480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2481                           ; Switch size 1, requested type "space"
  2482                           ; Number of cases is 1, Range of values is 0 to 0
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte            4     3 (average)
  2486                           ;	Chosen strategy is simple_byte
  2487  00074C  5044               	movf	??_loop+1,w,c
  2488  00074E  0A00               	xorlw	0	; case 0
  2489  000750  A4D8               	btfss	status,2,c
  2490  000752  0012               	return	
  2491                           
  2492                           ; Switch size 1, requested type "space"
  2493                           ; Number of cases is 13, Range of values is 0 to 12
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte           40    21 (average)
  2497                           ;	Chosen strategy is simple_byte
  2498  000754  5043               	movf	??_loop,w,c
  2499  000756  0A00               	xorlw	0	; case 0
  2500  000758  B4D8               	btfsc	status,2,c
  2501  00075A  D460               	goto	l2186
  2502  00075C  0A01               	xorlw	1	; case 1
  2503  00075E  B4D8               	btfsc	status,2,c
  2504  000760  D52E               	goto	l2320
  2505  000762  0A03               	xorlw	3	; case 2
  2506  000764  B4D8               	btfsc	status,2,c
  2507  000766  D555               	goto	l2336
  2508  000768  0A01               	xorlw	1	; case 3
  2509  00076A  B4D8               	btfsc	status,2,c
  2510  00076C  D5AC               	goto	l2358
  2511  00076E  0A07               	xorlw	7	; case 4
  2512  000770  B4D8               	btfsc	status,2,c
  2513  000772  D6CD               	goto	l2590
  2514  000774  0A01               	xorlw	1	; case 5
  2515  000776  B4D8               	btfsc	status,2,c
  2516  000778  D770               	goto	l2630
  2517  00077A  0A03               	xorlw	3	; case 6
  2518  00077C  B4D8               	btfsc	status,2,c
  2519  00077E  D743               	goto	l2618
  2520  000780  0A01               	xorlw	1	; case 7
  2521  000782  B4D8               	btfsc	status,2,c
  2522  000784  D6D4               	goto	l2594
  2523  000786  0A0F               	xorlw	15	; case 8
  2524  000788  B4D8               	btfsc	status,2,c
  2525  00078A  D752               	goto	l2624
  2526  00078C  0A01               	xorlw	1	; case 9
  2527  00078E  B4D8               	btfsc	status,2,c
  2528  000790  D725               	goto	l2612
  2529  000792  0A03               	xorlw	3	; case 10
  2530  000794  B4D8               	btfsc	status,2,c
  2531  000796  D6E0               	goto	l2600
  2532  000798  0A01               	xorlw	1	; case 11
  2533  00079A  B4D8               	btfsc	status,2,c
  2534  00079C  D6F2               	goto	l2606
  2535  00079E  0A07               	xorlw	7	; case 12
  2536  0007A0  A4D8               	btfss	status,2,c
  2537  0007A2  0012               	return	
  2538  0007A4  D76F               	goto	l2636
  2539  0007A6                     __end_of_loop:
  2540                           	opt stack 0
  2541                           tblptru	equ	0xFF8
  2542                           tblptrh	equ	0xFF7
  2543                           tblptrl	equ	0xFF6
  2544                           tablat	equ	0xFF5
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _millis *****************
  2548 ;; Defined at:
  2549 ;;		line 263 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  4   14[COMRAM] unsigned long 
  2556 ;; Registers used:
  2557 ;;		None
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2563 ;;      Params:         4       0       0       0       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2566 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2567 ;;Total ram usage:        4 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_loop
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text2
  2578  000E20                     __ptext2:
  2579                           	opt stack 0
  2580  000E20                     _millis:
  2581                           	opt stack 28
  2582                           
  2583                           ;incstack = 0
  2584  000E20  C048  F00F         	movff	_millisCounter,?_millis
  2585  000E24  C049  F010         	movff	_millisCounter+1,?_millis+1
  2586  000E28  C04A  F011         	movff	_millisCounter+2,?_millis+2
  2587  000E2C  C04B  F012         	movff	_millisCounter+3,?_millis+3
  2588  000E30  0012               	return		;funcret
  2589  000E32                     __end_of_millis:
  2590                           	opt stack 0
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           status	equ	0xFD8
  2596                           
  2597 ;; *************** function _init *****************
  2598 ;; Defined at:
  2599 ;;		line 10 in file "main.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;		None
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;		None
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0
  2614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2616 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2617 ;;Total ram usage:        0 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    4
  2620 ;; This function calls:
  2621 ;;		_setMotores
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text3
  2628  000C10                     __ptext3:
  2629                           	opt stack 0
  2630  000C10                     _init:
  2631                           	opt stack 26
  2632                           
  2633                           ;main.c: 12: ADCON1bits.PCFG = 0b1111;
  2634                           
  2635                           ;incstack = 0
  2636  000C10  80C1               	bsf	4033,0,c	;volatile
  2637  000C12  82C1               	bsf	4033,1,c	;volatile
  2638  000C14  84C1               	bsf	4033,2,c	;volatile
  2639  000C16  86C1               	bsf	4033,3,c	;volatile
  2640                           
  2641                           ;main.c: 15: TRISBbits.RB0 = INPUT;
  2642  000C18  8093               	bsf	3987,0,c	;volatile
  2643                           
  2644                           ;main.c: 16: TRISBbits.RB1 = INPUT;
  2645  000C1A  8293               	bsf	3987,1,c	;volatile
  2646                           
  2647                           ;main.c: 17: TRISBbits.RB2 = OUTPUT;
  2648  000C1C  9493               	bcf	3987,2,c	;volatile
  2649                           
  2650                           ;main.c: 18: TRISBbits.RB3 = OUTPUT;
  2651  000C1E  9693               	bcf	3987,3,c	;volatile
  2652                           
  2653                           ;main.c: 19: TRISBbits.RB4 = OUTPUT;
  2654  000C20  9893               	bcf	3987,4,c	;volatile
  2655                           
  2656                           ;main.c: 20: TRISAbits.RA4 = INPUT;
  2657  000C22  8892               	bsf	3986,4,c	;volatile
  2658                           
  2659                           ;main.c: 21: TRISAbits.RA3 = INPUT;
  2660  000C24  8692               	bsf	3986,3,c	;volatile
  2661                           
  2662                           ;main.c: 22: TRISAbits.RA2 = INPUT;
  2663  000C26  8492               	bsf	3986,2,c	;volatile
  2664                           
  2665                           ;main.c: 23: TRISBbits.RB5 = INPUT;
  2666  000C28  8A93               	bsf	3987,5,c	;volatile
  2667                           
  2668                           ;main.c: 24: TRISCbits.RC7 = INPUT;
  2669  000C2A  8E94               	bsf	3988,7,c	;volatile
  2670                           
  2671                           ;main.c: 25: TRISAbits.RA0 = INPUT;
  2672  000C2C  8092               	bsf	3986,0,c	;volatile
  2673                           
  2674                           ;main.c: 26: TRISAbits.RA1 = INPUT;
  2675  000C2E  8292               	bsf	3986,1,c	;volatile
  2676                           
  2677                           ;main.c: 27: TRISCbits.RC2 = OUTPUT;
  2678  000C30  9494               	bcf	3988,2,c	;volatile
  2679                           
  2680                           ;main.c: 28: TRISCbits.RC1 = OUTPUT;
  2681  000C32  9294               	bcf	3988,1,c	;volatile
  2682                           
  2683                           ;main.c: 29: TRISCbits.RC6 = OUTPUT;
  2684  000C34  9C94               	bcf	3988,6,c	;volatile
  2685                           
  2686                           ;main.c: 30: TRISCbits.RC0 = OUTPUT;
  2687  000C36  9094               	bcf	3988,0,c	;volatile
  2688                           
  2689                           ;main.c: 33: T2CON = 0;
  2690  000C38  0E00               	movlw	0
  2691  000C3A  6ECA               	movwf	4042,c	;volatile
  2692                           
  2693                           ;main.c: 34: T2CONbits.TOUTPS=11;
  2694  000C3C  50CA               	movf	4042,w,c	;volatile
  2695  000C3E  0B87               	andlw	-121
  2696  000C40  0958               	iorlw	88
  2697  000C42  6ECA               	movwf	4042,c	;volatile
  2698                           
  2699                           ;main.c: 35: T2CONbits.T2CKPS=1;
  2700  000C44  50CA               	movf	4042,w,c	;volatile
  2701  000C46  0BFC               	andlw	-4
  2702  000C48  0901               	iorlw	1
  2703  000C4A  6ECA               	movwf	4042,c	;volatile
  2704                           
  2705                           ;main.c: 36: PR2=249;
  2706  000C4C  0EF9               	movlw	249
  2707  000C4E  6ECB               	movwf	4043,c	;volatile
  2708                           
  2709                           ;main.c: 37: T2CONbits.TMR2ON=1;
  2710  000C50  84CA               	bsf	4042,2,c	;volatile
  2711                           
  2712                           ;main.c: 40: CCPR1L=0;
  2713  000C52  0E00               	movlw	0
  2714  000C54  6EBE               	movwf	4030,c	;volatile
  2715                           
  2716                           ;main.c: 41: CCP1CONbits.DC1B=0;
  2717  000C56  0ECF               	movlw	-49
  2718  000C58  16BD               	andwf	4029,f,c	;volatile
  2719                           
  2720                           ;main.c: 42: CCP1CONbits.CCP1M=12;
  2721  000C5A  50BD               	movf	4029,w,c	;volatile
  2722  000C5C  0BF0               	andlw	-16
  2723  000C5E  090C               	iorlw	12
  2724  000C60  6EBD               	movwf	4029,c	;volatile
  2725                           
  2726                           ;main.c: 43: CCPR2L=0;
  2727  000C62  0E00               	movlw	0
  2728  000C64  6EBB               	movwf	4027,c	;volatile
  2729                           
  2730                           ;main.c: 44: CCP2CONbits.DC2B=0;
  2731  000C66  0ECF               	movlw	-49
  2732  000C68  16BA               	andwf	4026,f,c	;volatile
  2733                           
  2734                           ;main.c: 45: CCP2CONbits.CCP2M=12;
  2735  000C6A  50BA               	movf	4026,w,c	;volatile
  2736  000C6C  0BF0               	andlw	-16
  2737  000C6E  090C               	iorlw	12
  2738  000C70  6EBA               	movwf	4026,c	;volatile
  2739                           
  2740                           ;main.c: 48: INTCON3=0;
  2741  000C72  0E00               	movlw	0
  2742  000C74  6EF0               	movwf	intcon3,c	;volatile
  2743                           
  2744                           ;main.c: 49: PIE1=0;
  2745  000C76  0E00               	movlw	0
  2746  000C78  6E9D               	movwf	3997,c	;volatile
  2747                           
  2748                           ;main.c: 50: PIE2=0;
  2749  000C7A  0E00               	movlw	0
  2750  000C7C  6EA0               	movwf	4000,c	;volatile
  2751                           
  2752                           ;main.c: 51: RCONbits.IPEN=0;
  2753  000C7E  9ED0               	bcf	4048,7,c	;volatile
  2754                           
  2755                           ;main.c: 52: PIE1bits.TMR2IE=1;
  2756  000C80  829D               	bsf	3997,1,c	;volatile
  2757                           
  2758                           ;main.c: 53: INTCONbits.PEIE_GIEL=1;
  2759  000C82  8CF2               	bsf	intcon,6,c	;volatile
  2760                           
  2761                           ;main.c: 54: INTCONbits.GIE_GIEH=1;
  2762  000C84  8EF2               	bsf	intcon,7,c	;volatile
  2763                           
  2764                           ;main.c: 55: RCONbits.IPEN = 0;
  2765  000C86  9ED0               	bcf	4048,7,c	;volatile
  2766                           
  2767                           ;main.c: 56: INTCONbits.PEIE = 1;
  2768  000C88  8CF2               	bsf	intcon,6,c	;volatile
  2769                           
  2770                           ;main.c: 57: INTCONbits.GIE = 1;
  2771  000C8A  8EF2               	bsf	intcon,7,c	;volatile
  2772                           
  2773                           ;main.c: 60: setMotores(0, 0);
  2774  000C8C  0E00               	movlw	0
  2775  000C8E  6E3A               	movwf	setMotores@dutyI+1,c
  2776  000C90  0E00               	movlw	0
  2777  000C92  6E39               	movwf	setMotores@dutyI,c
  2778  000C94  0E00               	movlw	0
  2779  000C96  6E3C               	movwf	setMotores@dutyD+1,c
  2780  000C98  0E00               	movlw	0
  2781  000C9A  6E3B               	movwf	setMotores@dutyD,c
  2782  000C9C  ECD3  F003         	call	_setMotores	;wreg free
  2783                           
  2784                           ;main.c: 61: LATBbits.LB2 = 0;
  2785  000CA0  948A               	bcf	3978,2,c	;volatile
  2786                           
  2787                           ;main.c: 62: LATBbits.LB3 = 0;
  2788  000CA2  968A               	bcf	3978,3,c	;volatile
  2789                           
  2790                           ;main.c: 63: LATBbits.LB4 = 0;
  2791  000CA4  988A               	bcf	3978,4,c	;volatile
  2792  000CA6  0012               	return		;funcret
  2793  000CA8                     __end_of_init:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           intcon	equ	0xFF2
  2800                           intcon3	equ	0xFF0
  2801                           status	equ	0xFD8
  2802                           
  2803 ;; *************** function _setMotores *****************
  2804 ;; Defined at:
  2805 ;;		line 243 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  dutyI           2   56[COMRAM] int 
  2808 ;;  dutyD           2   58[COMRAM] int 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2820 ;;      Params:         4       0       0       0       0       0       0       0       0
  2821 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2822 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2823 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:       10 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; Hardware stack levels required when called:    3
  2827 ;; This function calls:
  2828 ;;		___awdiv
  2829 ;;		___awtoft
  2830 ;;		___ftmul
  2831 ;;		___fttol
  2832 ;; This function is called by:
  2833 ;;		_init
  2834 ;;		_loop
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text4
  2839  0007A6                     __ptext4:
  2840                           	opt stack 0
  2841  0007A6                     _setMotores:
  2842                           	opt stack 26
  2843                           
  2844                           ;main.c: 244: dutyI = (dutyI > 1000 ? 1000 : (dutyI < -1000 ? -1000 : dutyI));
  2845                           
  2846                           ;incstack = 0
  2847  0007A6  BE3A               	btfsc	setMotores@dutyI+1,7,c
  2848  0007A8  D006               	goto	l2108
  2849  0007AA  0EE9               	movlw	233
  2850  0007AC  5C39               	subwf	setMotores@dutyI,w,c
  2851  0007AE  0E03               	movlw	3
  2852  0007B0  583A               	subwfb	setMotores@dutyI+1,w,c
  2853  0007B2  B0D8               	btfsc	status,0,c
  2854  0007B4  D016               	goto	l2116
  2855  0007B6                     l2108:
  2856  0007B6  AE3A               	btfss	setMotores@dutyI+1,7,c
  2857  0007B8  D006               	goto	l2110
  2858  0007BA  0E18               	movlw	24
  2859  0007BC  5C39               	subwf	setMotores@dutyI,w,c
  2860  0007BE  0EFC               	movlw	252
  2861  0007C0  583A               	subwfb	setMotores@dutyI+1,w,c
  2862  0007C2  A0D8               	btfss	status,0,c
  2863  0007C4  D005               	goto	l2112
  2864  0007C6                     l2110:
  2865  0007C6  C039  F03F         	movff	setMotores@dutyI,_setMotores$945
  2866  0007CA  C03A  F040         	movff	setMotores@dutyI+1,_setMotores$945+1
  2867  0007CE  D004               	goto	l2114
  2868  0007D0                     l2112:
  2869  0007D0  0EFC               	movlw	252
  2870  0007D2  6E40               	movwf	_setMotores$945+1,c
  2871  0007D4  0E18               	movlw	24
  2872  0007D6  6E3F               	movwf	_setMotores$945,c
  2873  0007D8                     l2114:
  2874  0007D8  C03F  F039         	movff	_setMotores$945,setMotores@dutyI
  2875  0007DC  C040  F03A         	movff	_setMotores$945+1,setMotores@dutyI+1
  2876  0007E0  D004               	goto	l2118
  2877  0007E2                     l2116:
  2878  0007E2  0E03               	movlw	3
  2879  0007E4  6E3A               	movwf	setMotores@dutyI+1,c
  2880  0007E6  0EE8               	movlw	232
  2881  0007E8  6E39               	movwf	setMotores@dutyI,c
  2882  0007EA                     l2118:
  2883                           
  2884                           ;main.c: 245: dutyD = (dutyD > 1000 ? 1000 : (dutyD < -1000 ? -1000 : dutyD));
  2885  0007EA  BE3C               	btfsc	setMotores@dutyD+1,7,c
  2886  0007EC  D006               	goto	l2120
  2887  0007EE  0EE9               	movlw	233
  2888  0007F0  5C3B               	subwf	setMotores@dutyD,w,c
  2889  0007F2  0E03               	movlw	3
  2890  0007F4  583C               	subwfb	setMotores@dutyD+1,w,c
  2891  0007F6  B0D8               	btfsc	status,0,c
  2892  0007F8  D016               	goto	l2128
  2893  0007FA                     l2120:
  2894  0007FA  AE3C               	btfss	setMotores@dutyD+1,7,c
  2895  0007FC  D006               	goto	l2122
  2896  0007FE  0E18               	movlw	24
  2897  000800  5C3B               	subwf	setMotores@dutyD,w,c
  2898  000802  0EFC               	movlw	252
  2899  000804  583C               	subwfb	setMotores@dutyD+1,w,c
  2900  000806  A0D8               	btfss	status,0,c
  2901  000808  D005               	goto	l2124
  2902  00080A                     l2122:
  2903  00080A  C03B  F041         	movff	setMotores@dutyD,_setMotores$946
  2904  00080E  C03C  F042         	movff	setMotores@dutyD+1,_setMotores$946+1
  2905  000812  D004               	goto	l2126
  2906  000814                     l2124:
  2907  000814  0EFC               	movlw	252
  2908  000816  6E42               	movwf	_setMotores$946+1,c
  2909  000818  0E18               	movlw	24
  2910  00081A  6E41               	movwf	_setMotores$946,c
  2911  00081C                     l2126:
  2912  00081C  C041  F03B         	movff	_setMotores$946,setMotores@dutyD
  2913  000820  C042  F03C         	movff	_setMotores$946+1,setMotores@dutyD+1
  2914  000824  D004               	goto	l2130
  2915  000826                     l2128:
  2916  000826  0E03               	movlw	3
  2917  000828  6E3C               	movwf	setMotores@dutyD+1,c
  2918  00082A  0EE8               	movlw	232
  2919  00082C  6E3B               	movwf	setMotores@dutyD,c
  2920  00082E                     l2130:
  2921                           
  2922                           ;main.c: 247: LATCbits.LC0 = dutyI < 0;
  2923  00082E  AE3A               	btfss	setMotores@dutyI+1,7,c
  2924  000830  D003               	goto	u2790
  2925  000832  6A3D               	clrf	??_setMotores& (0+255),c
  2926  000834  2A3D               	incf	??_setMotores& (0+255),f,c
  2927  000836  D001               	goto	u2808
  2928  000838                     u2790:
  2929  000838  6A3D               	clrf	??_setMotores& (0+255),c
  2930  00083A                     u2808:
  2931  00083A  508B               	movf	3979,w,c	;volatile
  2932  00083C  183D               	xorwf	??_setMotores,w,c
  2933  00083E  0BFE               	andlw	-2
  2934  000840  183D               	xorwf	??_setMotores,w,c
  2935  000842  6E8B               	movwf	3979,c	;volatile
  2936                           
  2937                           ;main.c: 248: LATCbits.LC6 = dutyD < 0;
  2938  000844  AE3C               	btfss	setMotores@dutyD+1,7,c
  2939  000846  D003               	goto	u2810
  2940  000848  6A3D               	clrf	??_setMotores& (0+255),c
  2941  00084A  2A3D               	incf	??_setMotores& (0+255),f,c
  2942  00084C  D001               	goto	u2828
  2943  00084E                     u2810:
  2944  00084E  6A3D               	clrf	??_setMotores& (0+255),c
  2945  000850                     u2828:
  2946  000850  3A3D               	swapf	??_setMotores,f,c
  2947  000852  463D               	rlncf	??_setMotores,f,c
  2948  000854  463D               	rlncf	??_setMotores,f,c
  2949  000856  508B               	movf	3979,w,c	;volatile
  2950  000858  183D               	xorwf	??_setMotores,w,c
  2951  00085A  0BBF               	andlw	-65
  2952  00085C  183D               	xorwf	??_setMotores,w,c
  2953  00085E  6E8B               	movwf	3979,c	;volatile
  2954                           
  2955                           ;main.c: 250: dutyI = (dutyI < 0 ? 1000-dutyI : dutyI);
  2956  000860  AE3A               	btfss	setMotores@dutyI+1,7,c
  2957  000862  D00E               	goto	l468
  2958  000864  C039  F03D         	movff	setMotores@dutyI,??_setMotores
  2959  000868  C03A  F03E         	movff	setMotores@dutyI+1,??_setMotores+1
  2960  00086C  1E3D               	comf	??_setMotores,f,c
  2961  00086E  1E3E               	comf	??_setMotores+1,f,c
  2962  000870  4A3D               	infsnz	??_setMotores,f,c
  2963  000872  2A3E               	incf	??_setMotores+1,f,c
  2964  000874  0EE8               	movlw	232
  2965  000876  243D               	addwf	??_setMotores,w,c
  2966  000878  6E39               	movwf	setMotores@dutyI,c
  2967  00087A  0E03               	movlw	3
  2968  00087C  203E               	addwfc	??_setMotores+1,w,c
  2969  00087E  6E3A               	movwf	setMotores@dutyI+1,c
  2970  000880                     l468:
  2971                           
  2972                           ;main.c: 251: dutyD = (dutyD < 0 ? 1000-dutyD : dutyD);
  2973  000880  AE3C               	btfss	setMotores@dutyD+1,7,c
  2974  000882  D00E               	goto	l2144
  2975  000884  C03B  F03D         	movff	setMotores@dutyD,??_setMotores
  2976  000888  C03C  F03E         	movff	setMotores@dutyD+1,??_setMotores+1
  2977  00088C  1E3D               	comf	??_setMotores,f,c
  2978  00088E  1E3E               	comf	??_setMotores+1,f,c
  2979  000890  4A3D               	infsnz	??_setMotores,f,c
  2980  000892  2A3E               	incf	??_setMotores+1,f,c
  2981  000894  0EE8               	movlw	232
  2982  000896  243D               	addwf	??_setMotores,w,c
  2983  000898  6E3B               	movwf	setMotores@dutyD,c
  2984  00089A  0E03               	movlw	3
  2985  00089C  203E               	addwfc	??_setMotores+1,w,c
  2986  00089E  6E3C               	movwf	setMotores@dutyD+1,c
  2987  0008A0                     l2144:
  2988                           
  2989                           ;main.c: 253: dutyI *= 1.023;
  2990  0008A0  0EF2               	movlw	242
  2991  0008A2  6E1E               	movwf	___ftmul@f2,c
  2992  0008A4  0E82               	movlw	130
  2993  0008A6  6E1F               	movwf	___ftmul@f2+1,c
  2994  0008A8  0E3F               	movlw	63
  2995  0008AA  6E20               	movwf	___ftmul@f2+2,c
  2996  0008AC  C039  F017         	movff	setMotores@dutyI,___awtoft@c
  2997  0008B0  C03A  F018         	movff	setMotores@dutyI+1,___awtoft@c+1
  2998  0008B4  ECF4  F006         	call	___awtoft	;wreg free
  2999  0008B8  C017  F01B         	movff	?___awtoft,___ftmul@f1
  3000  0008BC  C018  F01C         	movff	?___awtoft+1,___ftmul@f1+1
  3001  0008C0  C019  F01D         	movff	?___awtoft+2,___ftmul@f1+2
  3002  0008C4  EC37  F005         	call	___ftmul	;wreg free
  3003  0008C8  C01B  F02A         	movff	?___ftmul,___fttol@f1
  3004  0008CC  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  3005  0008D0  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  3006  0008D4  ECBD  F004         	call	___fttol	;wreg free
  3007  0008D8  C02A  F039         	movff	?___fttol,setMotores@dutyI
  3008  0008DC  C02B  F03A         	movff	?___fttol+1,setMotores@dutyI+1
  3009                           
  3010                           ;main.c: 254: dutyD *= 1.023;
  3011  0008E0  0EF2               	movlw	242
  3012  0008E2  6E1E               	movwf	___ftmul@f2,c
  3013  0008E4  0E82               	movlw	130
  3014  0008E6  6E1F               	movwf	___ftmul@f2+1,c
  3015  0008E8  0E3F               	movlw	63
  3016  0008EA  6E20               	movwf	___ftmul@f2+2,c
  3017  0008EC  C03B  F017         	movff	setMotores@dutyD,___awtoft@c
  3018  0008F0  C03C  F018         	movff	setMotores@dutyD+1,___awtoft@c+1
  3019  0008F4  ECF4  F006         	call	___awtoft	;wreg free
  3020  0008F8  C017  F01B         	movff	?___awtoft,___ftmul@f1
  3021  0008FC  C018  F01C         	movff	?___awtoft+1,___ftmul@f1+1
  3022  000900  C019  F01D         	movff	?___awtoft+2,___ftmul@f1+2
  3023  000904  EC37  F005         	call	___ftmul	;wreg free
  3024  000908  C01B  F02A         	movff	?___ftmul,___fttol@f1
  3025  00090C  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  3026  000910  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  3027  000914  ECBD  F004         	call	___fttol	;wreg free
  3028  000918  C02A  F03B         	movff	?___fttol,setMotores@dutyD
  3029  00091C  C02B  F03C         	movff	?___fttol+1,setMotores@dutyD+1
  3030                           
  3031                           ;main.c: 256: CCPR1L = dutyD / 4;
  3032  000920  C03B  F00F         	movff	setMotores@dutyD,___awdiv@dividend
  3033  000924  C03C  F010         	movff	setMotores@dutyD+1,___awdiv@dividend+1
  3034  000928  0E00               	movlw	0
  3035  00092A  6E12               	movwf	___awdiv@divisor+1,c
  3036  00092C  0E04               	movlw	4
  3037  00092E  6E11               	movwf	___awdiv@divisor,c
  3038  000930  EC54  F006         	call	___awdiv	;wreg free
  3039  000934  500F               	movf	?___awdiv,w,c
  3040  000936  6EBE               	movwf	4030,c	;volatile
  3041                           
  3042                           ;main.c: 257: CCPR2L = dutyI / 4;
  3043  000938  C039  F00F         	movff	setMotores@dutyI,___awdiv@dividend
  3044  00093C  C03A  F010         	movff	setMotores@dutyI+1,___awdiv@dividend+1
  3045  000940  0E00               	movlw	0
  3046  000942  6E12               	movwf	___awdiv@divisor+1,c
  3047  000944  0E04               	movlw	4
  3048  000946  6E11               	movwf	___awdiv@divisor,c
  3049  000948  EC54  F006         	call	___awdiv	;wreg free
  3050  00094C  500F               	movf	?___awdiv,w,c
  3051  00094E  6EBB               	movwf	4027,c	;volatile
  3052                           
  3053                           ;main.c: 258: CCP1CONbits.DC1B = dutyD % 4;
  3054  000950  C03B  F03D         	movff	setMotores@dutyD,??_setMotores
  3055  000954  0E03               	movlw	3
  3056  000956  163D               	andwf	??_setMotores,f,c
  3057  000958  3A3D               	swapf	??_setMotores,f,c
  3058  00095A  50BD               	movf	4029,w,c	;volatile
  3059  00095C  183D               	xorwf	??_setMotores,w,c
  3060  00095E  0BCF               	andlw	-49
  3061  000960  183D               	xorwf	??_setMotores,w,c
  3062  000962  6EBD               	movwf	4029,c	;volatile
  3063                           
  3064                           ;main.c: 259: CCP2CONbits.DC2B = dutyI % 4;
  3065  000964  C039  F03D         	movff	setMotores@dutyI,??_setMotores
  3066  000968  0E03               	movlw	3
  3067  00096A  163D               	andwf	??_setMotores,f,c
  3068  00096C  3A3D               	swapf	??_setMotores,f,c
  3069  00096E  50BA               	movf	4026,w,c	;volatile
  3070  000970  183D               	xorwf	??_setMotores,w,c
  3071  000972  0BCF               	andlw	-49
  3072  000974  183D               	xorwf	??_setMotores,w,c
  3073  000976  6EBA               	movwf	4026,c	;volatile
  3074  000978  0012               	return		;funcret
  3075  00097A                     __end_of_setMotores:
  3076                           	opt stack 0
  3077                           tblptru	equ	0xFF8
  3078                           tblptrh	equ	0xFF7
  3079                           tblptrl	equ	0xFF6
  3080                           tablat	equ	0xFF5
  3081                           intcon	equ	0xFF2
  3082                           intcon3	equ	0xFF0
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function ___fttol *****************
  3086 ;; Defined at:
  3087 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  f1              3   41[COMRAM] float 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  lval            4   51[COMRAM] unsigned long 
  3092 ;;  exp1            1   55[COMRAM] unsigned char 
  3093 ;;  sign1           1   50[COMRAM] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  4   41[COMRAM] long 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         4       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3106 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:       15 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_setMotores
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text5
  3118  00097A                     __ptext5:
  3119                           	opt stack 0
  3120  00097A                     ___fttol:
  3121                           	opt stack 27
  3122                           
  3123                           ;incstack = 0
  3124  00097A  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  3125  00097E  6A2F               	clrf	(??___fttol+1)& (0+255),c
  3126  000980  6A30               	clrf	(??___fttol+2)& (0+255),c
  3127  000982  342B               	rlcf	___fttol@f1+1,w,c
  3128  000984  362E               	rlcf	??___fttol& (0+255),f,c
  3129  000986  E301               	bnc	u2671
  3130  000988  802F               	bsf	(??___fttol+1)& (0+255),0,c
  3131  00098A                     u2671:
  3132  00098A  502E               	movf	??___fttol,w,c
  3133  00098C  6E38               	movwf	___fttol@exp1,c
  3134  00098E  5038               	movf	___fttol@exp1,w,c
  3135  000990  A4D8               	btfss	status,2,c
  3136  000992  D009               	goto	l2066
  3137  000994  0E00               	movlw	0
  3138  000996  6E2A               	movwf	?___fttol,c
  3139  000998  0E00               	movlw	0
  3140  00099A  6E2B               	movwf	?___fttol+1,c
  3141  00099C  0E00               	movlw	0
  3142  00099E  6E2C               	movwf	?___fttol+2,c
  3143  0009A0  0E00               	movlw	0
  3144  0009A2  6E2D               	movwf	?___fttol+3,c
  3145  0009A4  0012               	return	
  3146  0009A6                     l2066:
  3147  0009A6  0E17               	movlw	23
  3148  0009A8  6E2E               	movwf	??___fttol& (0+255),c
  3149  0009AA  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  3150  0009AE  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  3151  0009B2  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  3152  0009B6  282E               	incf	??___fttol,w,c
  3153  0009B8  6E32               	movwf	(??___fttol+4)& (0+255),c
  3154  0009BA  D004               	goto	u2690
  3155  0009BC                     u2695:
  3156  0009BC  90D8               	bcf	status,0,c
  3157  0009BE  3231               	rrcf	??___fttol+3,f,c
  3158  0009C0  3230               	rrcf	??___fttol+2,f,c
  3159  0009C2  322F               	rrcf	??___fttol+1,f,c
  3160  0009C4                     u2690:
  3161  0009C4  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  3162  0009C6  D7FA               	goto	u2695
  3163  0009C8  502F               	movf	??___fttol+1,w,c
  3164  0009CA  6E33               	movwf	___fttol@sign1,c
  3165  0009CC  8E2B               	bsf	___fttol@f1+1,7,c
  3166  0009CE  0EFF               	movlw	255
  3167  0009D0  162A               	andwf	___fttol@f1,f,c
  3168  0009D2  0EFF               	movlw	255
  3169  0009D4  162B               	andwf	___fttol@f1+1,f,c
  3170  0009D6  0E00               	movlw	0
  3171  0009D8  162C               	andwf	___fttol@f1+2,f,c
  3172  0009DA  502A               	movf	___fttol@f1,w,c
  3173  0009DC  6E34               	movwf	___fttol@lval,c
  3174  0009DE  502B               	movf	___fttol@f1+1,w,c
  3175  0009E0  6E35               	movwf	___fttol@lval+1,c
  3176  0009E2  502C               	movf	___fttol@f1+2,w,c
  3177  0009E4  6E36               	movwf	___fttol@lval+2,c
  3178  0009E6  6A37               	clrf	___fttol@lval+3,c
  3179  0009E8  0E8E               	movlw	142
  3180  0009EA  5E38               	subwf	___fttol@exp1,f,c
  3181  0009EC  AE38               	btfss	___fttol@exp1,7,c
  3182  0009EE  D016               	goto	l2088
  3183  0009F0  5038               	movf	___fttol@exp1,w,c
  3184  0009F2  0A80               	xorlw	128
  3185  0009F4  0F8F               	addlw	143
  3186  0009F6  B0D8               	btfsc	status,0,c
  3187  0009F8  D009               	goto	l2084
  3188  0009FA  0E00               	movlw	0
  3189  0009FC  6E2A               	movwf	?___fttol,c
  3190  0009FE  0E00               	movlw	0
  3191  000A00  6E2B               	movwf	?___fttol+1,c
  3192  000A02  0E00               	movlw	0
  3193  000A04  6E2C               	movwf	?___fttol+2,c
  3194  000A06  0E00               	movlw	0
  3195  000A08  6E2D               	movwf	?___fttol+3,c
  3196  000A0A  0012               	return	
  3197  000A0C                     l2084:
  3198  000A0C  90D8               	bcf	status,0,c
  3199  000A0E  3237               	rrcf	___fttol@lval+3,f,c
  3200  000A10  3236               	rrcf	___fttol@lval+2,f,c
  3201  000A12  3235               	rrcf	___fttol@lval+1,f,c
  3202  000A14  3234               	rrcf	___fttol@lval,f,c
  3203  000A16  3E38               	incfsz	___fttol@exp1,f,c
  3204  000A18  D7F9               	goto	l2084
  3205  000A1A  D015               	goto	l2098
  3206  000A1C                     l2088:
  3207  000A1C  0E17               	movlw	23
  3208  000A1E  6438               	cpfsgt	___fttol@exp1,c
  3209  000A20  D00F               	goto	l2096
  3210  000A22  0E00               	movlw	0
  3211  000A24  6E2A               	movwf	?___fttol,c
  3212  000A26  0E00               	movlw	0
  3213  000A28  6E2B               	movwf	?___fttol+1,c
  3214  000A2A  0E00               	movlw	0
  3215  000A2C  6E2C               	movwf	?___fttol+2,c
  3216  000A2E  0E00               	movlw	0
  3217  000A30  6E2D               	movwf	?___fttol+3,c
  3218  000A32  0012               	return	
  3219  000A34                     l2094:
  3220  000A34  90D8               	bcf	status,0,c
  3221  000A36  3634               	rlcf	___fttol@lval,f,c
  3222  000A38  3635               	rlcf	___fttol@lval+1,f,c
  3223  000A3A  3636               	rlcf	___fttol@lval+2,f,c
  3224  000A3C  3637               	rlcf	___fttol@lval+3,f,c
  3225  000A3E  0638               	decf	___fttol@exp1,f,c
  3226  000A40                     l2096:
  3227  000A40  5038               	movf	___fttol@exp1,w,c
  3228  000A42  A4D8               	btfss	status,2,c
  3229  000A44  D7F7               	goto	l2094
  3230  000A46                     l2098:
  3231  000A46  5033               	movf	___fttol@sign1,w,c
  3232  000A48  B4D8               	btfsc	status,2,c
  3233  000A4A  D008               	goto	l2102
  3234  000A4C  1E37               	comf	___fttol@lval+3,f,c
  3235  000A4E  1E36               	comf	___fttol@lval+2,f,c
  3236  000A50  1E35               	comf	___fttol@lval+1,f,c
  3237  000A52  6C34               	negf	___fttol@lval,c
  3238  000A54  0E00               	movlw	0
  3239  000A56  2235               	addwfc	___fttol@lval+1,f,c
  3240  000A58  2236               	addwfc	___fttol@lval+2,f,c
  3241  000A5A  2237               	addwfc	___fttol@lval+3,f,c
  3242  000A5C                     l2102:
  3243  000A5C  C034  F02A         	movff	___fttol@lval,?___fttol
  3244  000A60  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  3245  000A64  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  3246  000A68  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  3247  000A6C  0012               	return	
  3248  000A6E                     __end_of___fttol:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           intcon	equ	0xFF2
  3255                           intcon3	equ	0xFF0
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function ___ftmul *****************
  3259 ;; Defined at:
  3260 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  f1              3   26[COMRAM] float 
  3263 ;;  f2              3   29[COMRAM] float 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  3266 ;;  sign            1   40[COMRAM] unsigned char 
  3267 ;;  cntr            1   39[COMRAM] unsigned char 
  3268 ;;  exp             1   35[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  3   26[COMRAM] float 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3278 ;;      Params:         6       0       0       0       0       0       0       0       0
  3279 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3280 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3281 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3282 ;;Total ram usage:       15 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    2
  3285 ;; This function calls:
  3286 ;;		___ftpack
  3287 ;; This function is called by:
  3288 ;;		_setMotores
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text6
  3293  000A6E                     __ptext6:
  3294                           	opt stack 0
  3295  000A6E                     ___ftmul:
  3296                           	opt stack 26
  3297                           
  3298                           ;incstack = 0
  3299  000A6E  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  3300  000A72  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3301  000A74  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3302  000A76  341C               	rlcf	___ftmul@f1+1,w,c
  3303  000A78  3621               	rlcf	??___ftmul& (0+255),f,c
  3304  000A7A  E301               	bnc	u2541
  3305  000A7C  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3306  000A7E                     u2541:
  3307  000A7E  5021               	movf	??___ftmul,w,c
  3308  000A80  6E24               	movwf	___ftmul@exp,c
  3309  000A82  5024               	movf	___ftmul@exp,w,c
  3310  000A84  A4D8               	btfss	status,2,c
  3311  000A86  D007               	goto	l1962
  3312  000A88  0E00               	movlw	0
  3313  000A8A  6E1B               	movwf	?___ftmul,c
  3314  000A8C  0E00               	movlw	0
  3315  000A8E  6E1C               	movwf	?___ftmul+1,c
  3316  000A90  0E00               	movlw	0
  3317  000A92  6E1D               	movwf	?___ftmul+2,c
  3318  000A94  0012               	return	
  3319  000A96                     l1962:
  3320  000A96  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  3321  000A9A  6A22               	clrf	(??___ftmul+1)& (0+255),c
  3322  000A9C  6A23               	clrf	(??___ftmul+2)& (0+255),c
  3323  000A9E  341F               	rlcf	___ftmul@f2+1,w,c
  3324  000AA0  3621               	rlcf	??___ftmul& (0+255),f,c
  3325  000AA2  E301               	bnc	u2561
  3326  000AA4  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  3327  000AA6                     u2561:
  3328  000AA6  5021               	movf	??___ftmul,w,c
  3329  000AA8  6E29               	movwf	___ftmul@sign,c
  3330  000AAA  5029               	movf	___ftmul@sign,w,c
  3331  000AAC  A4D8               	btfss	status,2,c
  3332  000AAE  D007               	goto	l1968
  3333  000AB0  0E00               	movlw	0
  3334  000AB2  6E1B               	movwf	?___ftmul,c
  3335  000AB4  0E00               	movlw	0
  3336  000AB6  6E1C               	movwf	?___ftmul+1,c
  3337  000AB8  0E00               	movlw	0
  3338  000ABA  6E1D               	movwf	?___ftmul+2,c
  3339  000ABC  0012               	return	
  3340  000ABE                     l1968:
  3341  000ABE  5029               	movf	___ftmul@sign,w,c
  3342  000AC0  0F7B               	addlw	123
  3343  000AC2  2624               	addwf	___ftmul@exp,f,c
  3344  000AC4  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  3345  000AC8  5020               	movf	___ftmul@f2+2,w,c
  3346  000ACA  1A29               	xorwf	___ftmul@sign,f,c
  3347  000ACC  0E80               	movlw	128
  3348  000ACE  1629               	andwf	___ftmul@sign,f,c
  3349  000AD0  8E1C               	bsf	___ftmul@f1+1,7,c
  3350  000AD2  8E1F               	bsf	___ftmul@f2+1,7,c
  3351  000AD4  0EFF               	movlw	255
  3352  000AD6  161E               	andwf	___ftmul@f2,f,c
  3353  000AD8  0EFF               	movlw	255
  3354  000ADA  161F               	andwf	___ftmul@f2+1,f,c
  3355  000ADC  0E00               	movlw	0
  3356  000ADE  1620               	andwf	___ftmul@f2+2,f,c
  3357  000AE0  0E00               	movlw	0
  3358  000AE2  6E25               	movwf	___ftmul@f3_as_product,c
  3359  000AE4  0E00               	movlw	0
  3360  000AE6  6E26               	movwf	___ftmul@f3_as_product+1,c
  3361  000AE8  0E00               	movlw	0
  3362  000AEA  6E27               	movwf	___ftmul@f3_as_product+2,c
  3363  000AEC  0E07               	movlw	7
  3364  000AEE  6E28               	movwf	___ftmul@cntr,c
  3365  000AF0                     l1982:
  3366  000AF0  A01B               	btfss	___ftmul@f1,0,c
  3367  000AF2  D006               	goto	l1986
  3368  000AF4  501E               	movf	___ftmul@f2,w,c
  3369  000AF6  2625               	addwf	___ftmul@f3_as_product,f,c
  3370  000AF8  501F               	movf	___ftmul@f2+1,w,c
  3371  000AFA  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  3372  000AFC  5020               	movf	___ftmul@f2+2,w,c
  3373  000AFE  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  3374  000B00                     l1986:
  3375  000B00  90D8               	bcf	status,0,c
  3376  000B02  321D               	rrcf	___ftmul@f1+2,f,c
  3377  000B04  321C               	rrcf	___ftmul@f1+1,f,c
  3378  000B06  321B               	rrcf	___ftmul@f1,f,c
  3379  000B08  90D8               	bcf	status,0,c
  3380  000B0A  361E               	rlcf	___ftmul@f2,f,c
  3381  000B0C  361F               	rlcf	___ftmul@f2+1,f,c
  3382  000B0E  3620               	rlcf	___ftmul@f2+2,f,c
  3383  000B10  2E28               	decfsz	___ftmul@cntr,f,c
  3384  000B12  D7EE               	goto	l1982
  3385  000B14  0E09               	movlw	9
  3386  000B16  6E28               	movwf	___ftmul@cntr,c
  3387  000B18                     l1992:
  3388  000B18  A01B               	btfss	___ftmul@f1,0,c
  3389  000B1A  D006               	goto	l1996
  3390  000B1C  501E               	movf	___ftmul@f2,w,c
  3391  000B1E  2625               	addwf	___ftmul@f3_as_product,f,c
  3392  000B20  501F               	movf	___ftmul@f2+1,w,c
  3393  000B22  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  3394  000B24  5020               	movf	___ftmul@f2+2,w,c
  3395  000B26  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  3396  000B28                     l1996:
  3397  000B28  90D8               	bcf	status,0,c
  3398  000B2A  321D               	rrcf	___ftmul@f1+2,f,c
  3399  000B2C  321C               	rrcf	___ftmul@f1+1,f,c
  3400  000B2E  321B               	rrcf	___ftmul@f1,f,c
  3401  000B30  90D8               	bcf	status,0,c
  3402  000B32  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  3403  000B34  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  3404  000B36  3225               	rrcf	___ftmul@f3_as_product,f,c
  3405  000B38  2E28               	decfsz	___ftmul@cntr,f,c
  3406  000B3A  D7EE               	goto	l1992
  3407  000B3C  C025  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  3408  000B40  C026  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3409  000B44  C027  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3410  000B48  C024  F012         	movff	___ftmul@exp,___ftpack@exp
  3411  000B4C  C029  F013         	movff	___ftmul@sign,___ftpack@sign
  3412  000B50  ECB1  F005         	call	___ftpack	;wreg free
  3413  000B54  C00F  F01B         	movff	?___ftpack,?___ftmul
  3414  000B58  C010  F01C         	movff	?___ftpack+1,?___ftmul+1
  3415  000B5C  C011  F01D         	movff	?___ftpack+2,?___ftmul+2
  3416  000B60  0012               	return	
  3417  000B62                     __end_of___ftmul:
  3418                           	opt stack 0
  3419                           tblptru	equ	0xFF8
  3420                           tblptrh	equ	0xFF7
  3421                           tblptrl	equ	0xFF6
  3422                           tablat	equ	0xFF5
  3423                           intcon	equ	0xFF2
  3424                           intcon3	equ	0xFF0
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function ___awtoft *****************
  3428 ;; Defined at:
  3429 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  c               2   22[COMRAM] int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  sign            1   25[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  3   22[COMRAM] float 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3443 ;;      Params:         3       0       0       0       0       0       0       0       0
  3444 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3446 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    2
  3450 ;; This function calls:
  3451 ;;		___ftpack
  3452 ;; This function is called by:
  3453 ;;		_setMotores
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text7
  3458  000DE8                     __ptext7:
  3459                           	opt stack 0
  3460  000DE8                     ___awtoft:
  3461                           	opt stack 26
  3462                           
  3463                           ;incstack = 0
  3464  000DE8  0E00               	movlw	0
  3465  000DEA  6E1A               	movwf	___awtoft@sign,c
  3466  000DEC  AE18               	btfss	___awtoft@c+1,7,c
  3467  000DEE  D006               	goto	l2056
  3468  000DF0  6C17               	negf	___awtoft@c,c
  3469  000DF2  1E18               	comf	___awtoft@c+1,f,c
  3470  000DF4  B0D8               	btfsc	status,0,c
  3471  000DF6  2A18               	incf	___awtoft@c+1,f,c
  3472  000DF8  0E01               	movlw	1
  3473  000DFA  6E1A               	movwf	___awtoft@sign,c
  3474  000DFC                     l2056:
  3475  000DFC  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  3476  000E00  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  3477  000E04  6A11               	clrf	___ftpack@arg+2,c
  3478  000E06  0E8E               	movlw	142
  3479  000E08  6E12               	movwf	___ftpack@exp,c
  3480  000E0A  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  3481  000E0E  ECB1  F005         	call	___ftpack	;wreg free
  3482  000E12  C00F  F017         	movff	?___ftpack,?___awtoft
  3483  000E16  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  3484  000E1A  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  3485  000E1E  0012               	return	
  3486  000E20                     __end_of___awtoft:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           intcon	equ	0xFF2
  3493                           intcon3	equ	0xFF0
  3494                           status	equ	0xFD8
  3495                           
  3496 ;; *************** function ___ftpack *****************
  3497 ;; Defined at:
  3498 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  arg             3   14[COMRAM] unsigned um
  3501 ;;  exp             1   17[COMRAM] unsigned char 
  3502 ;;  sign            1   18[COMRAM] unsigned char 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  3   14[COMRAM] float 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3514 ;;      Params:         5       0       0       0       0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3516 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3517 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3518 ;;Total ram usage:        8 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		___awtoft
  3525 ;;		___ftmul
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text8
  3530  000B62                     __ptext8:
  3531                           	opt stack 0
  3532  000B62                     ___ftpack:
  3533                           	opt stack 26
  3534                           
  3535                           ;incstack = 0
  3536  000B62  5012               	movf	___ftpack@exp,w,c
  3537  000B64  B4D8               	btfsc	status,2,c
  3538  000B66  D005               	goto	l1924
  3539  000B68  500F               	movf	___ftpack@arg,w,c
  3540  000B6A  1010               	iorwf	___ftpack@arg+1,w,c
  3541  000B6C  1011               	iorwf	___ftpack@arg+2,w,c
  3542  000B6E  A4D8               	btfss	status,2,c
  3543  000B70  D00C               	goto	l1930
  3544  000B72                     l1924:
  3545  000B72  0E00               	movlw	0
  3546  000B74  6E0F               	movwf	?___ftpack,c
  3547  000B76  0E00               	movlw	0
  3548  000B78  6E10               	movwf	?___ftpack+1,c
  3549  000B7A  0E00               	movlw	0
  3550  000B7C  6E11               	movwf	?___ftpack+2,c
  3551  000B7E  0012               	return	
  3552  000B80                     l1928:
  3553  000B80  2A12               	incf	___ftpack@exp,f,c
  3554  000B82  90D8               	bcf	status,0,c
  3555  000B84  3211               	rrcf	___ftpack@arg+2,f,c
  3556  000B86  3210               	rrcf	___ftpack@arg+1,f,c
  3557  000B88  320F               	rrcf	___ftpack@arg,f,c
  3558  000B8A                     l1930:
  3559  000B8A  0E00               	movlw	0
  3560  000B8C  140F               	andwf	___ftpack@arg,w,c
  3561  000B8E  6E14               	movwf	??___ftpack& (0+255),c
  3562  000B90  0E00               	movlw	0
  3563  000B92  1410               	andwf	___ftpack@arg+1,w,c
  3564  000B94  6E15               	movwf	(??___ftpack+1)& (0+255),c
  3565  000B96  0EFE               	movlw	254
  3566  000B98  1411               	andwf	___ftpack@arg+2,w,c
  3567  000B9A  6E16               	movwf	(??___ftpack+2)& (0+255),c
  3568  000B9C  5014               	movf	??___ftpack,w,c
  3569  000B9E  1015               	iorwf	??___ftpack+1,w,c
  3570  000BA0  1016               	iorwf	??___ftpack+2,w,c
  3571  000BA2  B4D8               	btfsc	status,2,c
  3572  000BA4  D00C               	goto	l1936
  3573  000BA6  D7EC               	goto	l1928
  3574  000BA8                     l1932:
  3575  000BA8  2A12               	incf	___ftpack@exp,f,c
  3576  000BAA  0E01               	movlw	1
  3577  000BAC  260F               	addwf	___ftpack@arg,f,c
  3578  000BAE  0E00               	movlw	0
  3579  000BB0  2210               	addwfc	___ftpack@arg+1,f,c
  3580  000BB2  0E00               	movlw	0
  3581  000BB4  2211               	addwfc	___ftpack@arg+2,f,c
  3582  000BB6  90D8               	bcf	status,0,c
  3583  000BB8  3211               	rrcf	___ftpack@arg+2,f,c
  3584  000BBA  3210               	rrcf	___ftpack@arg+1,f,c
  3585  000BBC  320F               	rrcf	___ftpack@arg,f,c
  3586  000BBE                     l1936:
  3587  000BBE  0E00               	movlw	0
  3588  000BC0  140F               	andwf	___ftpack@arg,w,c
  3589  000BC2  6E14               	movwf	??___ftpack& (0+255),c
  3590  000BC4  0E00               	movlw	0
  3591  000BC6  1410               	andwf	___ftpack@arg+1,w,c
  3592  000BC8  6E15               	movwf	(??___ftpack+1)& (0+255),c
  3593  000BCA  0EFF               	movlw	255
  3594  000BCC  1411               	andwf	___ftpack@arg+2,w,c
  3595  000BCE  6E16               	movwf	(??___ftpack+2)& (0+255),c
  3596  000BD0  5014               	movf	??___ftpack,w,c
  3597  000BD2  1015               	iorwf	??___ftpack+1,w,c
  3598  000BD4  1016               	iorwf	??___ftpack+2,w,c
  3599  000BD6  B4D8               	btfsc	status,2,c
  3600  000BD8  D006               	goto	l1940
  3601  000BDA  D7E6               	goto	l1932
  3602  000BDC                     l1938:
  3603  000BDC  0612               	decf	___ftpack@exp,f,c
  3604  000BDE  90D8               	bcf	status,0,c
  3605  000BE0  360F               	rlcf	___ftpack@arg,f,c
  3606  000BE2  3610               	rlcf	___ftpack@arg+1,f,c
  3607  000BE4  3611               	rlcf	___ftpack@arg+2,f,c
  3608  000BE6                     l1940:
  3609  000BE6  BE10               	btfsc	___ftpack@arg+1,7,c
  3610  000BE8  D003               	goto	l713
  3611  000BEA  0E02               	movlw	2
  3612  000BEC  6012               	cpfslt	___ftpack@exp,c
  3613  000BEE  D7F6               	goto	l1938
  3614  000BF0                     l713:
  3615  000BF0  A012               	btfss	___ftpack@exp,0,c
  3616  000BF2  9E10               	bcf	___ftpack@arg+1,7,c
  3617  000BF4  90D8               	bcf	status,0,c
  3618  000BF6  3212               	rrcf	___ftpack@exp,f,c
  3619  000BF8  5012               	movf	___ftpack@exp,w,c
  3620  000BFA  1211               	iorwf	___ftpack@arg+2,f,c
  3621  000BFC  5013               	movf	___ftpack@sign,w,c
  3622  000BFE  A4D8               	btfss	status,2,c
  3623  000C00  8E11               	bsf	___ftpack@arg+2,7,c
  3624  000C02  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  3625  000C06  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  3626  000C0A  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  3627  000C0E  0012               	return	
  3628  000C10                     __end_of___ftpack:
  3629                           	opt stack 0
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           intcon	equ	0xFF2
  3635                           intcon3	equ	0xFF0
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function ___awdiv *****************
  3639 ;; Defined at:
  3640 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  dividend        2   14[COMRAM] int 
  3643 ;;  divisor         2   16[COMRAM] int 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  quotient        2   20[COMRAM] int 
  3646 ;;  sign            1   19[COMRAM] unsigned char 
  3647 ;;  counter         1   18[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  2   14[COMRAM] int 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3657 ;;      Params:         4       0       0       0       0       0       0       0       0
  3658 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3660 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3661 ;;Total ram usage:        8 bytes
  3662 ;; Hardware stack levels used:    1
  3663 ;; Hardware stack levels required when called:    1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_setMotores
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text9
  3672  000CA8                     __ptext9:
  3673                           	opt stack 0
  3674  000CA8                     ___awdiv:
  3675                           	opt stack 27
  3676                           
  3677                           ;incstack = 0
  3678  000CA8  0E00               	movlw	0
  3679  000CAA  6E14               	movwf	___awdiv@sign,c
  3680  000CAC  AE12               	btfss	___awdiv@divisor+1,7,c
  3681  000CAE  D006               	goto	l2012
  3682  000CB0  6C11               	negf	___awdiv@divisor,c
  3683  000CB2  1E12               	comf	___awdiv@divisor+1,f,c
  3684  000CB4  B0D8               	btfsc	status,0,c
  3685  000CB6  2A12               	incf	___awdiv@divisor+1,f,c
  3686  000CB8  0E01               	movlw	1
  3687  000CBA  6E14               	movwf	___awdiv@sign,c
  3688  000CBC                     l2012:
  3689  000CBC  AE10               	btfss	___awdiv@dividend+1,7,c
  3690  000CBE  D006               	goto	l2018
  3691  000CC0  6C0F               	negf	___awdiv@dividend,c
  3692  000CC2  1E10               	comf	___awdiv@dividend+1,f,c
  3693  000CC4  B0D8               	btfsc	status,0,c
  3694  000CC6  2A10               	incf	___awdiv@dividend+1,f,c
  3695  000CC8  0E01               	movlw	1
  3696  000CCA  1A14               	xorwf	___awdiv@sign,f,c
  3697  000CCC                     l2018:
  3698  000CCC  0E00               	movlw	0
  3699  000CCE  6E16               	movwf	___awdiv@quotient+1,c
  3700  000CD0  0E00               	movlw	0
  3701  000CD2  6E15               	movwf	___awdiv@quotient,c
  3702  000CD4  5011               	movf	___awdiv@divisor,w,c
  3703  000CD6  1012               	iorwf	___awdiv@divisor+1,w,c
  3704  000CD8  B4D8               	btfsc	status,2,c
  3705  000CDA  D01C               	goto	l2040
  3706  000CDC  0E01               	movlw	1
  3707  000CDE  6E13               	movwf	___awdiv@counter,c
  3708  000CE0  D004               	goto	l2026
  3709  000CE2                     l2024:
  3710  000CE2  90D8               	bcf	status,0,c
  3711  000CE4  3611               	rlcf	___awdiv@divisor,f,c
  3712  000CE6  3612               	rlcf	___awdiv@divisor+1,f,c
  3713  000CE8  2A13               	incf	___awdiv@counter,f,c
  3714  000CEA                     l2026:
  3715  000CEA  AE12               	btfss	___awdiv@divisor+1,7,c
  3716  000CEC  D7FA               	goto	l2024
  3717  000CEE                     l2028:
  3718  000CEE  90D8               	bcf	status,0,c
  3719  000CF0  3615               	rlcf	___awdiv@quotient,f,c
  3720  000CF2  3616               	rlcf	___awdiv@quotient+1,f,c
  3721  000CF4  5011               	movf	___awdiv@divisor,w,c
  3722  000CF6  5C0F               	subwf	___awdiv@dividend,w,c
  3723  000CF8  5012               	movf	___awdiv@divisor+1,w,c
  3724  000CFA  5810               	subwfb	___awdiv@dividend+1,w,c
  3725  000CFC  A0D8               	btfss	status,0,c
  3726  000CFE  D005               	goto	l2036
  3727  000D00  5011               	movf	___awdiv@divisor,w,c
  3728  000D02  5E0F               	subwf	___awdiv@dividend,f,c
  3729  000D04  5012               	movf	___awdiv@divisor+1,w,c
  3730  000D06  5A10               	subwfb	___awdiv@dividend+1,f,c
  3731  000D08  8015               	bsf	___awdiv@quotient,0,c
  3732  000D0A                     l2036:
  3733  000D0A  90D8               	bcf	status,0,c
  3734  000D0C  3212               	rrcf	___awdiv@divisor+1,f,c
  3735  000D0E  3211               	rrcf	___awdiv@divisor,f,c
  3736  000D10  2E13               	decfsz	___awdiv@counter,f,c
  3737  000D12  D7ED               	goto	l2028
  3738  000D14                     l2040:
  3739  000D14  5014               	movf	___awdiv@sign,w,c
  3740  000D16  B4D8               	btfsc	status,2,c
  3741  000D18  D004               	goto	l2044
  3742  000D1A  6C15               	negf	___awdiv@quotient,c
  3743  000D1C  1E16               	comf	___awdiv@quotient+1,f,c
  3744  000D1E  B0D8               	btfsc	status,0,c
  3745  000D20  2A16               	incf	___awdiv@quotient+1,f,c
  3746  000D22                     l2044:
  3747  000D22  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  3748  000D26  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  3749  000D2A  0012               	return	
  3750  000D2C                     __end_of___awdiv:
  3751                           	opt stack 0
  3752                           tblptru	equ	0xFF8
  3753                           tblptrh	equ	0xFF7
  3754                           tblptrl	equ	0xFF6
  3755                           tablat	equ	0xFF5
  3756                           intcon	equ	0xFF2
  3757                           intcon3	equ	0xFF0
  3758                           status	equ	0xFD8
  3759                           
  3760 ;; *************** function _ISR *****************
  3761 ;; Defined at:
  3762 ;;		line 264 in file "main.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3778 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3779 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3780 ;;Total ram usage:       14 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		Interrupt level 2
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	intcode
  3790  000008                     __pintcode:
  3791                           	opt stack 0
  3792  000008                     _ISR:
  3793                           	opt stack 26
  3794                           
  3795                           ;incstack = 0
  3796  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3797  00000A  CFFA F001          	movff	pclath,??_ISR
  3798  00000E  CFFB F002          	movff	pclatu,??_ISR+1
  3799  000012  ED96  F006         	call	int_func,f	;refresh shadow registers
  3800                           pclatu	equ	0xFFB
  3801                           pclath	equ	0xFFA
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           intcon	equ	0xFF2
  3807                           intcon3	equ	0xFF0
  3808                           status	equ	0xFD8
  3809                           
  3810                           	psect	intcode_body
  3811  000D2C                     __pintcode_body:
  3812                           	opt stack 26
  3813  000D2C                     int_func:
  3814                           	opt stack 26
  3815  000D2C  0006               	pop		; remove dummy address from shadow register refresh
  3816  000D2E  CFE9 F003          	movff	fsr0l,??_ISR+2
  3817  000D32  CFEA F004          	movff	fsr0h,??_ISR+3
  3818  000D36  CFE1 F005          	movff	fsr1l,??_ISR+4
  3819  000D3A  CFE2 F006          	movff	fsr1h,??_ISR+5
  3820  000D3E  CFD9 F007          	movff	fsr2l,??_ISR+6
  3821  000D42  CFDA F008          	movff	fsr2h,??_ISR+7
  3822  000D46  CFF3 F009          	movff	prodl,??_ISR+8
  3823  000D4A  CFF4 F00A          	movff	prodh,??_ISR+9
  3824  000D4E  CFF6 F00B          	movff	tblptrl,??_ISR+10
  3825  000D52  CFF7 F00C          	movff	tblptrh,??_ISR+11
  3826  000D56  CFF8 F00D          	movff	tblptru,??_ISR+12
  3827  000D5A  CFF5 F00E          	movff	tablat,??_ISR+13
  3828                           
  3829                           ;main.c: 265: if(!TMR2IF) return;
  3830  000D5E  A29E               	btfss	3998,1,c	;volatile
  3831  000D60  D007               	goto	i2l482
  3832                           
  3833                           ;main.c: 266: TMR2IF = 0;
  3834  000D62  929E               	bcf	3998,1,c	;volatile
  3835                           
  3836                           ;main.c: 267: millisCounter++;
  3837  000D64  0E01               	movlw	1
  3838  000D66  2648               	addwf	_millisCounter,f,c
  3839  000D68  0E00               	movlw	0
  3840  000D6A  2249               	addwfc	_millisCounter+1,f,c
  3841  000D6C  224A               	addwfc	_millisCounter+2,f,c
  3842  000D6E  224B               	addwfc	_millisCounter+3,f,c
  3843  000D70                     i2l482:
  3844  000D70  C00E  FFF5         	movff	??_ISR+13,tablat
  3845  000D74  C00D  FFF8         	movff	??_ISR+12,tblptru
  3846  000D78  C00C  FFF7         	movff	??_ISR+11,tblptrh
  3847  000D7C  C00B  FFF6         	movff	??_ISR+10,tblptrl
  3848  000D80  C00A  FFF4         	movff	??_ISR+9,prodh
  3849  000D84  C009  FFF3         	movff	??_ISR+8,prodl
  3850  000D88  C008  FFDA         	movff	??_ISR+7,fsr2h
  3851  000D8C  C007  FFD9         	movff	??_ISR+6,fsr2l
  3852  000D90  C006  FFE2         	movff	??_ISR+5,fsr1h
  3853  000D94  C005  FFE1         	movff	??_ISR+4,fsr1l
  3854  000D98  C004  FFEA         	movff	??_ISR+3,fsr0h
  3855  000D9C  C003  FFE9         	movff	??_ISR+2,fsr0l
  3856  000DA0  C002  FFFB         	movff	??_ISR+1,pclatu
  3857  000DA4  C001  FFFA         	movff	??_ISR,pclath
  3858  000DA8  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3859  000DAA  0011               	retfie		f
  3860  000DAC                     __end_of_ISR:
  3861                           	opt stack 0
  3862  0000                     pclatu	equ	0xFFB
  3863                           pclath	equ	0xFFA
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           prodh	equ	0xFF4
  3869                           prodl	equ	0xFF3
  3870                           intcon	equ	0xFF2
  3871                           intcon3	equ	0xFF0
  3872                           fsr0h	equ	0xFEA
  3873                           fsr0l	equ	0xFE9
  3874                           fsr1h	equ	0xFE2
  3875                           fsr1l	equ	0xFE1
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           pclatu	equ	0xFFB
  3880                           pclath	equ	0xFFA
  3881                           tblptru	equ	0xFF8
  3882                           tblptrh	equ	0xFF7
  3883                           tblptrl	equ	0xFF6
  3884                           tablat	equ	0xFF5
  3885                           prodh	equ	0xFF4
  3886                           prodl	equ	0xFF3
  3887                           intcon	equ	0xFF2
  3888                           intcon3	equ	0xFF0
  3889                           fsr0h	equ	0xFEA
  3890                           fsr0l	equ	0xFE9
  3891                           fsr1h	equ	0xFE2
  3892                           fsr1l	equ	0xFE1
  3893                           fsr2h	equ	0xFDA
  3894                           fsr2l	equ	0xFD9
  3895                           status	equ	0xFD8
  3896                           
  3897                           	psect	rparam
  3898  0000                     pclatu	equ	0xFFB
  3899                           pclath	equ	0xFFA
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           prodh	equ	0xFF4
  3905                           prodl	equ	0xFF3
  3906                           intcon	equ	0xFF2
  3907                           intcon3	equ	0xFF0
  3908                           fsr0h	equ	0xFEA
  3909                           fsr0l	equ	0xFE9
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           fsr2h	equ	0xFDA
  3913                           fsr2l	equ	0xFD9
  3914                           status	equ	0xFD8
  3915                           
  3916                           	psect	temp
  3917  00004C                     btemp:
  3918                           	opt stack 0
  3919  00004C                     	ds	1
  3920  0000                     int$flags	set	btemp
  3921                           pclatu	equ	0xFFB
  3922                           pclath	equ	0xFFA
  3923                           tblptru	equ	0xFF8
  3924                           tblptrh	equ	0xFF7
  3925                           tblptrl	equ	0xFF6
  3926                           tablat	equ	0xFF5
  3927                           prodh	equ	0xFF4
  3928                           prodl	equ	0xFF3
  3929                           intcon	equ	0xFF2
  3930                           intcon3	equ	0xFF0
  3931                           fsr0h	equ	0xFEA
  3932                           fsr0l	equ	0xFE9
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           fsr2h	equ	0xFDA
  3936                           fsr2l	equ	0xFD9
  3937                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      75
    BANK0           160      0       0
    BANK1           256    170     178
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_loop
    _loop->_setMotores
    _init->_setMotores
    _setMotores->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17686
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               175   175      0    9875
                                             66 COMRAM     5     5      0
                                              0 BANK1    170   170      0
                             _millis
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    7811
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _setMotores                                          10     6      4    7811
                                             56 COMRAM    10     6      4
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             41 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2676
                                             26 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2211
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1992
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loop
     _millis
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AA      B2       7       69.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      4B       1       79.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD      20        0.0%
DATA                 0      0      FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Jul 16 22:33:46 2018

           ___awdiv@sign 0014              __CFG_BORV$0 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l159 01F6                      l361 0504                      l713 0BF0  
                    l468 0880                      l485 0E36             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _ISR 0008  
           __CFG_BOR$OFF 000000             __CFG_LVP$OFF 000000                     ?_ISR 0001  
           __CFG_WDT$OFF 000000                     l2012 0CBC                     l2102 0A5C  
                   l2110 07C6                     l2024 0CE2                     l2040 0D14  
                   l2120 07FA                     l2112 07D0                     l2026 0CEA  
                   l2018 0CCC                     l2130 082E                     l2122 080A  
                   l2114 07D8                     l2210 0054                     l2044 0D22  
                   l2036 0D0A                     l2028 0CEE                     l2124 0814  
                   l2108 07B6                     l2116 07E2                     l2126 081C  
                   l2118 07EA                     l2056 0DFC                     l2144 08A0  
                   l2128 0826                     l2320 01BE                     l2216 0078  
                   l2232 00A0                     l2066 09A6                     l2242 00BE  
                   l2084 0A0C                     l2316 01B0                     l2252 00EA  
                   l2094 0A34                     l2096 0A40                     l2088 0A1C  
                   l2600 0558                     l2336 0212                     l2264 0112  
                   l2272 0138                     l2098 0A46                     l2610 05C6  
                   l2346 025C                     l2186 001C                     l2612 05DC  
                   l2524 0454                     l2460 03B4                     l2508 0424  
                   l2284 0162                     l2630 065A                     l2606 0582  
                   l2374 0306                     l2358 02C6                     l2624 0630  
                   l2560 0494                     l2704 0744                     l1930 0B8A  
                   l2618 0606                     l1940 0BE6                     l1932 0BA8  
                   l1924 0B72                     l2636 0684                     l2476 03E4  
                   l2388 0326                     l2590 050E                     l1936 0BBE  
                   l1928 0B80                     l2680 06F8                     l2568 04BC  
                   l1938 0BDC                     l1962 0A96                     l2594 052E  
                   l1982 0AF0                     l1992 0B18                     l1968 0ABE  
                   l1986 0B00                     l1996 0B28                     u3030 00A8  
                   u3040 00AA                     u3150 011A                     u4200 042E  
                   u4040 03EC                     u3400 01C8                     u3160 011C  
                   u3080 00C6                     u4050 03EE                     u3090 00C8  
                   u3235 016C                     u3236 016E                     u2541 0A7E  
                   u3510 02CE                     _PIE1 000F9D                     u3520 02D0  
                   u3280 0176                     _PIE2 000FA0                     u2561 0AA6  
                   u3345 0198                     u2810 084E                     u3346 019A  
                   u3290 0178                     u4260 045C                     u3540 02EA  
                   u4430 049C                     u4270 045E                     u4190 042C  
                   u3630 032E                     u3550 02EC                     u3470 02B0  
                   u3390 01C6                     u2671 098A                     u2808 083A  
                   u4600 06A8                     u4440 049E                     u3720 035A  
                   u3640 0330                     u3385 01BA                     u2690 09C4  
                   u3730 035C                     u3386 01BC                     u2850 0024  
                   u2828 0850                     u4460 04C4                     u2860 0026  
                   u2790 0838                     u4710 06DC                     u4470 04C6  
                   u2695 09BC                     u4800 0700                     u4720 06DE  
                   u3488 02B2                     u2960 005C                     u4810 0702  
                   u4618 06AA                     u2970 005E                     u4660 06C0  
                   u4580 068E                     u3860 0382                     u4670 06C2  
                   u3870 0384                     u4850 071C                     u3970 03BC  
                   u4860 071E                     u3980 03BE                     u4598 0690  
                   _main 0E32             ___ftpack@arg 000F                     _init 0C10  
                   _loop 001A             ___ftpack@exp 0012                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 004C  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 0016            __CFG_IESO$OFF 000000             ___ftmul@cntr 0028  
           ___param_bank 000010             ___ftmul@sign 0029                    ??_ISR 0001  
           ___fttol@exp1 0038             ___fttol@lval 0034            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 0D2C                    ?_loop 0001          __end_of___ftmul 0B62  
        ___awdiv@divisor 0011          __end_of___fttol 0A6E                    _T2CON 000FCA  
                  i2l482 0D70          ___awdiv@counter 0013            __CFG_USBDIV$2 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 001A  
          ___ftpack@sign 0013                    tablat 000FF5                    loop@m 01AA  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 0DAC  
           __end_of_main 0E3C             __end_of_init 0CA8             __end_of_loop 07A6  
        setMotores@dutyD 003B          setMotores@dutyI 0039                   ??_main 0048  
          ___fttol@sign1 0033                   ??_init 0043                   ??_loop 0043  
          __activetblptr 000002                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       ___awdiv@dividend 000F         __end_of___awtoft 0E20         __end_of___ftpack 0C10  
                 _TMR2IF 007CF1           __CFG_XINST$OFF 000000                ??___awdiv 0013  
              ??___ftmul 0021                ??___fttol 002E            loop@direccion 01B0  
                 _millis 0E20         ___awdiv@quotient 0015    ___ftmul@f3_as_product 0025  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0DDA          __CFG_PBADEN$OFF 000000  
         _setMotores$945 003F           _setMotores$946 0041            ___rparam_used 000001  
             ___awtoft@c 0017               ___ftmul@f1 001B               ___ftmul@f2 001E  
             ___fttol@f1 002A           __pcstackCOMRAM 0001             __pidataBANK1 0E3C  
             __pbssBANK1 01AA                  ?_millis 000F                ?___awtoft 0017  
              ?___ftpack 000F                  _INTCON3 000FF0          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 0CA8  
                ___ftmul 0A6E                  ___fttol 097A          __CFG_STVREN$OFF 000000  
                __pcinit 0DAC               ??___awtoft 001A               ??___ftpack 0014  
        __size_of_millis 0012                  __ramtop 0800                  __ptext0 0E32  
                __ptext1 001A                  __ptext2 0E20                  __ptext3 0C10  
                __ptext4 07A6                  __ptext5 097A                  __ptext6 0A6E  
                __ptext7 0DE8                  __ptext8 0B62                  __ptext9 0CA8  
          _millisCounter 0048             __size_of_ISR 0DA4                _T2CONbits 000FCA  
         __pintcode_body 0D2C     end_of_initialization 0DDA            __Lmediumconst 0000  
                int_func 0D2C               _setMotores 07A6                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTCbits 000F82                _TRISAbits 000F92  
              _TRISBbits 000F93                _TRISCbits 000F94              _CCP1CONbits 000FBD  
            _CCP2CONbits 000FBA              ___ftmul@exp 0024           __end_of_millis 0E32  
    start_initialization 0DAC              __end_of_ISR 0DAC              ?_setMotores 0039  
            __pdataBANK1 01B0         __CFG_LPT1OSC$OFF 000000                 ??_millis 0013  
      __size_of___awtoft 0038        __size_of___ftpack 00AE              __pbssCOMRAM 0048  
          __pcstackBANK1 0100               loop@estado 01AE                __pintcode 0008  
               ?___awdiv 000F                 ?___ftmul 001B                 ?___fttol 002A  
    __size_of_setMotores 01D4                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _PIE1bits 000F9D                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
             _ADCON1bits 000FC1                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___awtoft 0DE8                 ___ftpack 0B62                 _loop$900 0154  
               _loop$901 0156                 _loop$910 0168                 _loop$902 0158  
               _loop$911 016A                 _loop$903 015A                 _loop$920 017C  
               _loop$912 016C                 _loop$904 015C                 _loop$921 017E  
               _loop$913 016E                 _loop$905 015E                 _loop$930 0190  
               _loop$922 0180                 _loop$914 0170                 _loop$906 0160  
               _loop$850 0104                 _loop$931 0192                 _loop$923 0182  
               _loop$915 0172                 _loop$907 0162                 _loop$851 0106  
               _loop$940 01A4                 _loop$932 0194                 _loop$924 0184  
               _loop$916 0174                 _loop$908 0164                 _loop$860 0118  
               _loop$852 0108                 _loop$941 01A6                 _loop$933 0196  
               _loop$925 0186                 _loop$917 0176                 _loop$909 0166  
               _loop$861 011A                 _loop$853 010A                 _loop$934 0198  
               _loop$926 0188                 _loop$918 0178                 _loop$862 011C  
               _loop$854 010C                 _loop$871 01A8                 _loop$935 019A  
               _loop$927 018A                 _loop$919 017A                 _loop$855 010E  
               _loop$936 019C                 _loop$928 018C                 _loop$880 012C  
               _loop$872 011E                 _loop$856 0110                 _loop$848 0100  
               _loop$937 019E                 _loop$929 018E                 _loop$881 012E  
               _loop$873 0120                 _loop$857 0112                 _loop$849 0102  
               _loop$938 01A0                 _loop$890 0140                 _loop$882 0130  
               _loop$874 0122                 _loop$858 0114                 _loop$939 01A2  
               _loop$891 0142                 _loop$883 0132                 _loop$875 0124  
               _loop$859 0116                 _loop$892 0144                 _loop$884 0134  
               _loop$876 0126                 _loop$877 01A9                 _loop$893 0146  
               _loop$885 0136                 _loop$894 0148                 _loop$886 0138  
               _loop$878 0128                 _loop$895 014A                 _loop$887 013A  
               _loop$879 012A                 _loop$896 014C                 _loop$888 013C  
               _loop$897 014E                 _loop$889 013E                 _loop$898 0150  
               _loop$899 0152             ??_setMotores 003D            __size_of_main 000A  
          __size_of_init 0098            __size_of_loop 078C                 int$flags 004C  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2       __end_of_setMotores 097A  
               intlevel2 0000       __CFG_FOSC$HSPLL_HS 000000  
