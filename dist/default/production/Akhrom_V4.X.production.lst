

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 17 20:48:00 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F2550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataBANK1
    65  000DDA                     __pidataBANK1:
    66                           	opt stack 0
    67                           
    68                           ;initializer for loop@direccion
    69  000DDA  0005               	dw	5
    70  0000                     _LATCbits	set	3979
    71  0000                     _PORTCbits	set	3970
    72  0000                     _PORTAbits	set	3968
    73  0000                     _PORTBbits	set	3969
    74  0000                     _LATBbits	set	3978
    75  0000                     _INTCONbits	set	4082
    76  0000                     _PIE1bits	set	3997
    77  0000                     _RCONbits	set	4048
    78  0000                     _PIE2	set	4000
    79  0000                     _PIE1	set	3997
    80  0000                     _INTCON3	set	4080
    81  0000                     _CCP2CONbits	set	4026
    82  0000                     _CCPR2L	set	4027
    83  0000                     _CCP1CONbits	set	4029
    84  0000                     _CCPR1L	set	4030
    85  0000                     _PR2	set	4043
    86  0000                     _T2CONbits	set	4042
    87  0000                     _T2CON	set	4042
    88  0000                     _TRISCbits	set	3988
    89  0000                     _TRISAbits	set	3986
    90  0000                     _TRISBbits	set	3987
    91  0000                     _ADCON1bits	set	4033
    92  0000                     _TMR2IF	set	31985
    93                           
    94                           ; #config settings
    95  0000                     
    96                           	psect	cinit
    97  000D4A                     __pcinit:
    98                           	opt stack 0
    99  000D4A                     start_initialization:
   100                           	opt stack 0
   101  000D4A                     __initialization:
   102                           	opt stack 0
   103                           
   104                           ; Initialize objects allocated to BANK1 (2 bytes)
   105                           ; load TBLPTR registers with __pidataBANK1
   106  000D4A  0EDA               	movlw	low __pidataBANK1
   107  000D4C  6EF6               	movwf	tblptrl,c
   108  000D4E  0E0D               	movlw	high __pidataBANK1
   109  000D50  6EF7               	movwf	tblptrh,c
   110  000D52  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   111  000D54  6EF8               	movwf	tblptru,c
   112  000D56  0009               	tblrd		*+	;fetch initializer
   113  000D58  CFF5 F1B0          	movff	tablat,__pdataBANK1
   114  000D5C  0009               	tblrd		*+	;fetch initializer
   115  000D5E  CFF5 F1B1          	movff	tablat,__pdataBANK1+1
   116                           
   117                           ; Clear objects allocated to BANK1 (6 bytes)
   118  000D62  0101               	movlb	1
   119  000D64  6BAF               	clrf	(__pbssBANK1+5)& (0+255),b
   120  000D66  6BAE               	clrf	(__pbssBANK1+4)& (0+255),b
   121  000D68  6BAD               	clrf	(__pbssBANK1+3)& (0+255),b
   122  000D6A  6BAC               	clrf	(__pbssBANK1+2)& (0+255),b
   123  000D6C  6BAB               	clrf	(__pbssBANK1+1)& (0+255),b
   124  000D6E  6BAA               	clrf	__pbssBANK1& (0+255),b
   125                           
   126                           ; Clear objects allocated to COMRAM (4 bytes)
   127  000D70  6A4A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   128  000D72  6A49               	clrf	(__pbssCOMRAM+2)& (0+255),c
   129  000D74  6A48               	clrf	(__pbssCOMRAM+1)& (0+255),c
   130  000D76  6A47               	clrf	__pbssCOMRAM& (0+255),c
   131  000D78                     end_of_initialization:
   132                           	opt stack 0
   133  000D78                     __end_of__initialization:
   134                           	opt stack 0
   135  000D78  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136  000D7A  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137  000D7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138  000D7E  6EF8               	movwf	tblptru,c
   139  000D80  0100               	movlb	0
   140  000D82  EFE8  F006         	goto	_main	;jump to C main() function
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           
   146                           	psect	bssCOMRAM
   147  000047                     __pbssCOMRAM:
   148                           	opt stack 0
   149  000047                     _millisCounter:
   150                           	opt stack 0
   151  000047                     	ds	4
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           
   157                           	psect	bssBANK1
   158  0001AA                     __pbssBANK1:
   159                           	opt stack 0
   160  0001AA                     loop@m:
   161                           	opt stack 0
   162  0001AA                     	ds	4
   163  0001AE                     loop@estado:
   164                           	opt stack 0
   165  0001AE                     	ds	2
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           
   171                           	psect	dataBANK1
   172  0001B0                     __pdataBANK1:
   173                           	opt stack 0
   174  0001B0                     loop@direccion:
   175                           	opt stack 0
   176  0001B0                     	ds	2
   177                           tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           
   182                           	psect	cstackBANK1
   183  000100                     __pcstackBANK1:
   184                           	opt stack 0
   185  000100                     _loop$777:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  000100                     	ds	2
   190  000102                     _loop$778:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0x2
   194  000102                     	ds	2
   195  000104                     _loop$779:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x4
   199  000104                     	ds	2
   200  000106                     _loop$780:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x6
   204  000106                     	ds	2
   205  000108                     _loop$781:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x8
   209  000108                     	ds	2
   210  00010A                     _loop$782:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0xA
   214  00010A                     	ds	2
   215  00010C                     _loop$783:
   216                           	opt stack 0
   217                           
   218                           ; 2 bytes @ 0xC
   219  00010C                     	ds	2
   220  00010E                     _loop$784:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0xE
   224  00010E                     	ds	2
   225  000110                     _loop$785:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x10
   229  000110                     	ds	2
   230  000112                     _loop$786:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x12
   234  000112                     	ds	2
   235  000114                     _loop$787:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0x14
   239  000114                     	ds	2
   240  000116                     _loop$788:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x16
   244  000116                     	ds	2
   245  000118                     _loop$789:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x18
   249  000118                     	ds	2
   250  00011A                     _loop$790:
   251                           	opt stack 0
   252                           
   253                           ; 2 bytes @ 0x1A
   254  00011A                     	ds	2
   255  00011C                     _loop$791:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x1C
   259  00011C                     	ds	2
   260  00011E                     _loop$801:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x1E
   264  00011E                     	ds	2
   265  000120                     _loop$802:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0x20
   269  000120                     	ds	2
   270  000122                     _loop$803:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x22
   274  000122                     	ds	2
   275  000124                     _loop$804:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x24
   279  000124                     	ds	2
   280  000126                     _loop$805:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x26
   284  000126                     	ds	2
   285  000128                     _loop$807:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x28
   289  000128                     	ds	2
   290  00012A                     _loop$808:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x2A
   294  00012A                     	ds	2
   295  00012C                     _loop$809:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x2C
   299  00012C                     	ds	2
   300  00012E                     _loop$810:
   301                           	opt stack 0
   302                           
   303                           ; 2 bytes @ 0x2E
   304  00012E                     	ds	2
   305  000130                     _loop$811:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x30
   309  000130                     	ds	2
   310  000132                     _loop$812:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x32
   314  000132                     	ds	2
   315  000134                     _loop$813:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x34
   319  000134                     	ds	2
   320  000136                     _loop$814:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x36
   324  000136                     	ds	2
   325  000138                     _loop$815:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x38
   329  000138                     	ds	2
   330  00013A                     _loop$816:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3A
   334  00013A                     	ds	2
   335  00013C                     _loop$817:
   336                           	opt stack 0
   337                           
   338                           ; 2 bytes @ 0x3C
   339  00013C                     	ds	2
   340  00013E                     _loop$818:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x3E
   344  00013E                     	ds	2
   345  000140                     _loop$819:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x40
   349  000140                     	ds	2
   350  000142                     _loop$820:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x42
   354  000142                     	ds	2
   355  000144                     _loop$821:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x44
   359  000144                     	ds	2
   360  000146                     _loop$822:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x46
   364  000146                     	ds	2
   365  000148                     _loop$823:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x48
   369  000148                     	ds	2
   370  00014A                     _loop$824:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x4A
   374  00014A                     	ds	2
   375  00014C                     _loop$825:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x4C
   379  00014C                     	ds	2
   380  00014E                     _loop$826:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4E
   384  00014E                     	ds	2
   385  000150                     _loop$827:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x50
   389  000150                     	ds	2
   390  000152                     _loop$828:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x52
   394  000152                     	ds	2
   395  000154                     _loop$829:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x54
   399  000154                     	ds	2
   400  000156                     _loop$830:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0x56
   404  000156                     	ds	2
   405  000158                     _loop$831:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x58
   409  000158                     	ds	2
   410  00015A                     _loop$832:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x5A
   414  00015A                     	ds	2
   415  00015C                     _loop$833:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x5C
   419  00015C                     	ds	2
   420  00015E                     _loop$834:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x5E
   424  00015E                     	ds	2
   425  000160                     _loop$835:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x60
   429  000160                     	ds	2
   430  000162                     _loop$836:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x62
   434  000162                     	ds	2
   435  000164                     _loop$837:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x64
   439  000164                     	ds	2
   440  000166                     _loop$838:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x66
   444  000166                     	ds	2
   445  000168                     _loop$839:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x68
   449  000168                     	ds	2
   450  00016A                     _loop$840:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x6A
   454  00016A                     	ds	2
   455  00016C                     _loop$841:
   456                           	opt stack 0
   457                           
   458                           ; 2 bytes @ 0x6C
   459  00016C                     	ds	2
   460  00016E                     _loop$842:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x6E
   464  00016E                     	ds	2
   465  000170                     _loop$843:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x70
   469  000170                     	ds	2
   470  000172                     _loop$844:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x72
   474  000172                     	ds	2
   475  000174                     _loop$845:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x74
   479  000174                     	ds	2
   480  000176                     _loop$846:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x76
   484  000176                     	ds	2
   485  000178                     _loop$847:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x78
   489  000178                     	ds	2
   490  00017A                     _loop$848:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x7A
   494  00017A                     	ds	2
   495  00017C                     _loop$849:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x7C
   499  00017C                     	ds	2
   500  00017E                     _loop$850:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x7E
   504  00017E                     	ds	2
   505  000180                     _loop$851:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x80
   509  000180                     	ds	2
   510  000182                     _loop$852:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x82
   514  000182                     	ds	2
   515  000184                     _loop$853:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x84
   519  000184                     	ds	2
   520  000186                     _loop$854:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x86
   524  000186                     	ds	2
   525  000188                     _loop$855:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x88
   529  000188                     	ds	2
   530  00018A                     _loop$856:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x8A
   534  00018A                     	ds	2
   535  00018C                     _loop$857:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x8C
   539  00018C                     	ds	2
   540  00018E                     _loop$858:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x8E
   544  00018E                     	ds	2
   545  000190                     _loop$859:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x90
   549  000190                     	ds	2
   550  000192                     _loop$860:
   551                           	opt stack 0
   552                           
   553                           ; 2 bytes @ 0x92
   554  000192                     	ds	2
   555  000194                     _loop$861:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x94
   559  000194                     	ds	2
   560  000196                     _loop$862:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x96
   564  000196                     	ds	2
   565  000198                     _loop$863:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x98
   569  000198                     	ds	2
   570  00019A                     _loop$864:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x9A
   574  00019A                     	ds	2
   575  00019C                     _loop$865:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x9C
   579  00019C                     	ds	2
   580  00019E                     _loop$866:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x9E
   584  00019E                     	ds	2
   585  0001A0                     _loop$867:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0xA0
   589  0001A0                     	ds	2
   590  0001A2                     _loop$868:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0xA2
   594  0001A2                     	ds	2
   595  0001A4                     _loop$869:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0xA4
   599  0001A4                     	ds	2
   600  0001A6                     _loop$870:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0xA6
   604  0001A6                     	ds	2
   605  0001A8                     _loop$800:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0xA8
   609  0001A8                     	ds	1
   610  0001A9                     _loop$806:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0xA9
   614  0001A9                     	ds	1
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           
   620                           	psect	cstackBANK0
   621  000060                     __pcstackBANK0:
   622                           	opt stack 0
   623  000060                     ??_loop:
   624                           
   625                           ; 1 bytes @ 0x0
   626  000060                     	ds	5
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           
   632                           	psect	cstackCOMRAM
   633  000001                     __pcstackCOMRAM:
   634                           	opt stack 0
   635  000001                     ??_ISR:
   636  000001                     
   637                           ; 1 bytes @ 0x0
   638  000001                     	ds	18
   639  000013                     ?___awdiv:
   640                           	opt stack 0
   641  000013                     ?___ftpack:
   642                           	opt stack 0
   643  000013                     ?_millis:
   644                           	opt stack 0
   645  000013                     ___awdiv@dividend:
   646                           	opt stack 0
   647  000013                     ___ftpack@arg:
   648                           	opt stack 0
   649                           
   650                           ; 3 bytes @ 0x12
   651  000013                     	ds	2
   652  000015                     ___awdiv@divisor:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x14
   656  000015                     	ds	1
   657  000016                     ___ftpack@exp:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x15
   661  000016                     	ds	1
   662  000017                     ___awdiv@counter:
   663                           	opt stack 0
   664  000017                     ___ftpack@sign:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x16
   668  000017                     	ds	1
   669  000018                     ??___ftpack:
   670  000018                     ___awdiv@sign:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x17
   674  000018                     	ds	1
   675  000019                     ___awdiv@quotient:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x18
   679  000019                     	ds	2
   680  00001B                     ?___awtoft:
   681                           	opt stack 0
   682  00001B                     ___awtoft@c:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x1A
   686  00001B                     	ds	3
   687  00001E                     ___awtoft@sign:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x1D
   691  00001E                     	ds	1
   692  00001F                     ?___ftmul:
   693                           	opt stack 0
   694  00001F                     ___ftmul@f1:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x1E
   698  00001F                     	ds	3
   699  000022                     ___ftmul@f2:
   700                           	opt stack 0
   701                           
   702                           ; 3 bytes @ 0x21
   703  000022                     	ds	3
   704  000025                     ??___ftmul:
   705                           
   706                           ; 1 bytes @ 0x24
   707  000025                     	ds	3
   708  000028                     ___ftmul@exp:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x27
   712  000028                     	ds	1
   713  000029                     ___ftmul@f3_as_product:
   714                           	opt stack 0
   715                           
   716                           ; 3 bytes @ 0x28
   717  000029                     	ds	3
   718  00002C                     ___ftmul@cntr:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x2B
   722  00002C                     	ds	1
   723  00002D                     ___ftmul@sign:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x2C
   727  00002D                     	ds	1
   728  00002E                     ?___fttol:
   729                           	opt stack 0
   730  00002E                     ___fttol@f1:
   731                           	opt stack 0
   732                           
   733                           ; 3 bytes @ 0x2D
   734  00002E                     	ds	4
   735  000032                     ??___fttol:
   736                           
   737                           ; 1 bytes @ 0x31
   738  000032                     	ds	5
   739  000037                     ___fttol@sign1:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x36
   743  000037                     	ds	1
   744  000038                     ___fttol@lval:
   745                           	opt stack 0
   746                           
   747                           ; 4 bytes @ 0x37
   748  000038                     	ds	4
   749  00003C                     ___fttol@exp1:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x3B
   753  00003C                     	ds	1
   754  00003D                     setMotores@dutyI:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x3C
   758  00003D                     	ds	2
   759  00003F                     setMotores@dutyD:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0x3E
   763  00003F                     	ds	2
   764  000041                     ??_setMotores:
   765                           
   766                           ; 1 bytes @ 0x40
   767  000041                     	ds	2
   768  000043                     _setMotores$874:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x42
   772  000043                     	ds	2
   773  000045                     _setMotores$875:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x44
   777  000045                     	ds	2
   778  000047                     tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           
   783                           ; 1 bytes @ 0x46
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 270 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   803 ;;      Params:         0       0       0       0       0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels required when called:    5
   809 ;; This function calls:
   810 ;;		_init
   811 ;;		_loop
   812 ;; This function is called by:
   813 ;;		Startup code after reset
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text0
   818  000DD0                     __ptext0:
   819                           	opt stack 0
   820  000DD0                     _main:
   821                           	opt stack 26
   822                           
   823                           ;main.c: 271: init();
   824                           
   825                           ;incstack = 0
   826  000DD0  EC17  F006         	call	_init	;wreg free
   827  000DD4                     l489:
   828  000DD4  EC09  F000         	call	_loop	;wreg free
   829  000DD8  D7FD               	goto	l489
   830  000DDA                     __end_of_main:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           
   837 ;; *************** function _loop *****************
   838 ;; Defined at:
   839 ;;		line 66 in file "main.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   853 ;;      Params:         0       0       0       0       0       0       0       0       0
   854 ;;      Locals:         0       0     170       0       0       0       0       0       0
   855 ;;      Temps:          0       5       0       0       0       0       0       0       0
   856 ;;      Totals:         0       5     170       0       0       0       0       0       0
   857 ;;Total ram usage:      175 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    4
   860 ;; This function calls:
   861 ;;		_millis
   862 ;;		_setMotores
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text1
   869  000012                     __ptext1:
   870                           	opt stack 0
   871  000012                     _loop:
   872                           	opt stack 26
   873                           
   874                           ;main.c: 67: static unsigned long m = 0;
   875                           ;main.c: 68: static int estado = MENU;
   876                           ;main.c: 69: static int direccion = DER;
   877                           ;main.c: 70: switch(estado){
   878                           
   879                           ;incstack = 0
   880  000012  D352               	goto	l62
   881  000014                     
   882                           ; BSR set to: 1
   883  000014  BA80               	btfsc	3968,5,c	;volatile
   884  000016  D002               	goto	u4900
   885  000018  0E01               	movlw	1
   886  00001A  D001               	goto	u4910
   887  00001C                     u4900:
   888  00001C  0E00               	movlw	0
   889  00001E                     u4910:
   890  00001E  0101               	movlb	1	; () banked
   891  000020  6F04               	movwf	_loop$779& (0+255),b
   892  000022  6B05               	clrf	(_loop$779+1)& (0+255),b
   893                           
   894                           ; BSR set to: 1
   895                           
   896                           ; BSR set to: 1
   897  000024  C104  F102         	movff	_loop$779,_loop$778
   898  000028  C105  F103         	movff	_loop$779+1,_loop$778+1
   899                           
   900                           ; BSR set to: 1
   901                           
   902                           ; BSR set to: 1
   903                           
   904                           ; BSR set to: 1
   905                           
   906                           ; BSR set to: 1
   907  00002C  C102  F100         	movff	_loop$778,_loop$777
   908  000030  C103  F101         	movff	_loop$778+1,_loop$777+1
   909                           
   910                           ; BSR set to: 1
   911                           
   912                           ; BSR set to: 1
   913                           
   914                           ; BSR set to: 1
   915                           
   916                           ; BSR set to: 1
   917  000034  5100               	movf	_loop$777& (0+255),w,b
   918  000036  1101               	iorwf	(_loop$777+1)& (0+255),w,b
   919  000038  B4D8               	btfsc	status,2,c
   920  00003A  D005               	goto	l80
   921                           
   922                           ; BSR set to: 1
   923                           ;main.c: 73: estado = LIMPIAR;
   924  00003C  0E00               	movlw	0
   925  00003E  6FAF               	movwf	(loop@estado+1)& (0+255),b
   926  000040  0E01               	movlw	1
   927  000042  6FAE               	movwf	loop@estado& (0+255),b
   928                           
   929                           ;main.c: 74: break;
   930  000044  0012               	return	
   931  000046                     l80:
   932                           
   933                           ; BSR set to: 1
   934                           
   935                           ; BSR set to: 1
   936  000046  B081               	btfsc	3969,0,c	;volatile
   937  000048  D002               	goto	u5010
   938  00004A  0E01               	movlw	1
   939  00004C  D001               	goto	u5020
   940  00004E                     u5010:
   941  00004E  0E00               	movlw	0
   942  000050                     u5020:
   943  000050  6F06               	movwf	_loop$780& (0+255),b
   944  000052  6B07               	clrf	(_loop$780+1)& (0+255),b
   945                           
   946                           ; BSR set to: 1
   947                           
   948                           ; BSR set to: 1
   949  000054  5106               	movf	_loop$780& (0+255),w,b
   950  000056  1107               	iorwf	(_loop$780+1)& (0+255),w,b
   951  000058  B4D8               	btfsc	status,2,c
   952  00005A  D023               	goto	l112
   953                           
   954                           ; BSR set to: 1
   955                           ;main.c: 78: LATBbits.LB2 = 1;
   956  00005C  848A               	bsf	3978,2,c	;volatile
   957                           
   958                           ;main.c: 79: LATBbits.LB3 = 1;
   959  00005E  868A               	bsf	3978,3,c	;volatile
   960                           
   961                           ;main.c: 80: LATBbits.LB4 = 1;
   962  000060  888A               	bsf	3978,4,c	;volatile
   963                           
   964                           ;main.c: 81: while((1 == 1 ? !PORTBbits.RB0 : (1 == 2 ? !PORTBbits.RB1 : (1 == 0 ? !PORT
      +                          Abits.RA5 : 0)))){
   965  000062  D013               	goto	l94
   966  000064                     
   967                           ; BSR set to: 1
   968                           ;main.c: 82: m = millis();
   969                           
   970                           ; BSR set to: 1
   971  000064  ECDF  F006         	call	_millis	;wreg free
   972  000068  C013  F1AA         	movff	?_millis,loop@m
   973  00006C  C014  F1AB         	movff	?_millis+1,loop@m+1
   974  000070  C015  F1AC         	movff	?_millis+2,loop@m+2
   975  000074  C016  F1AD         	movff	?_millis+3,loop@m+3
   976                           
   977                           ;main.c: 83: direccion = DER;
   978  000078  0E00               	movlw	0
   979  00007A  0101               	movlb	1	; () banked
   980  00007C  6FB1               	movwf	(loop@direccion+1)& (0+255),b
   981  00007E  0E05               	movlw	5
   982  000080  6FB0               	movwf	loop@direccion& (0+255),b
   983                           
   984                           ; BSR set to: 1
   985                           ;main.c: 84: estado = ESPERA;
   986  000082  0E00               	movlw	0
   987  000084  6FAF               	movwf	(loop@estado+1)& (0+255),b
   988  000086  0E02               	movlw	2
   989  000088  6FAE               	movwf	loop@estado& (0+255),b
   990  00008A                     l94:
   991                           
   992                           ; BSR set to: 1
   993                           
   994                           ; BSR set to: 1
   995  00008A  B081               	btfsc	3969,0,c	;volatile
   996  00008C  D002               	goto	u5080
   997  00008E  0E01               	movlw	1
   998  000090  D001               	goto	u5090
   999  000092                     u5080:
  1000  000092  0E00               	movlw	0
  1001  000094                     u5090:
  1002  000094  6F0C               	movwf	_loop$783& (0+255),b
  1003  000096  6B0D               	clrf	(_loop$783+1)& (0+255),b
  1004                           
  1005                           ; BSR set to: 1
  1006                           
  1007                           ; BSR set to: 1
  1008  000098  510C               	movf	_loop$783& (0+255),w,b
  1009  00009A  110D               	iorwf	(_loop$783+1)& (0+255),w,b
  1010  00009C  B4D8               	btfsc	status,2,c
  1011  00009E  0012               	return	
  1012  0000A0  D7E1               	goto	l92
  1013  0000A2                     l112:
  1014                           
  1015                           ; BSR set to: 1
  1016                           
  1017                           ; BSR set to: 1
  1018  0000A2  B281               	btfsc	3969,1,c	;volatile
  1019  0000A4  D002               	goto	u5130
  1020  0000A6  0E01               	movlw	1
  1021  0000A8  D001               	goto	u5140
  1022  0000AA                     u5130:
  1023  0000AA  0E00               	movlw	0
  1024  0000AC                     u5140:
  1025  0000AC  6F14               	movwf	_loop$787& (0+255),b
  1026  0000AE  6B15               	clrf	(_loop$787+1)& (0+255),b
  1027                           
  1028                           ; BSR set to: 1
  1029                           
  1030                           ; BSR set to: 1
  1031  0000B0  C114  F112         	movff	_loop$787,_loop$786
  1032  0000B4  C115  F113         	movff	_loop$787+1,_loop$786+1
  1033                           
  1034                           ; BSR set to: 1
  1035                           
  1036                           ; BSR set to: 1
  1037                           
  1038                           ; BSR set to: 1
  1039                           
  1040                           ; BSR set to: 1
  1041  0000B8  5112               	movf	_loop$786& (0+255),w,b
  1042  0000BA  1113               	iorwf	(_loop$786+1)& (0+255),w,b
  1043  0000BC  B4D8               	btfsc	status,2,c
  1044  0000BE  D027               	goto	l106
  1045                           
  1046                           ; BSR set to: 1
  1047                           ;main.c: 90: LATBbits.LB2 = 1;
  1048  0000C0  848A               	bsf	3978,2,c	;volatile
  1049                           
  1050                           ;main.c: 91: LATBbits.LB3 = 1;
  1051  0000C2  868A               	bsf	3978,3,c	;volatile
  1052                           
  1053                           ;main.c: 92: LATBbits.LB4 = 1;
  1054  0000C4  888A               	bsf	3978,4,c	;volatile
  1055                           
  1056                           ;main.c: 93: while((2 == 1 ? !PORTBbits.RB0 : (2 == 2 ? !PORTBbits.RB1 : (2 == 0 ? !PORT
      +                          Abits.RA5 : 0)))){
  1057  0000C6  D013               	goto	l126
  1058  0000C8                     
  1059                           ; BSR set to: 1
  1060                           ;main.c: 94: m = millis();
  1061                           
  1062                           ; BSR set to: 1
  1063  0000C8  ECDF  F006         	call	_millis	;wreg free
  1064  0000CC  C013  F1AA         	movff	?_millis,loop@m
  1065  0000D0  C014  F1AB         	movff	?_millis+1,loop@m+1
  1066  0000D4  C015  F1AC         	movff	?_millis+2,loop@m+2
  1067  0000D8  C016  F1AD         	movff	?_millis+3,loop@m+3
  1068                           
  1069                           ;main.c: 95: direccion = IZQ;
  1070  0000DC  0E00               	movlw	0
  1071  0000DE  0101               	movlb	1	; () banked
  1072  0000E0  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  1073  0000E2  0E08               	movlw	8
  1074  0000E4  6FB0               	movwf	loop@direccion& (0+255),b
  1075                           
  1076                           ; BSR set to: 1
  1077                           ;main.c: 96: estado = ESPERA;
  1078  0000E6  0E00               	movlw	0
  1079  0000E8  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1080  0000EA  0E02               	movlw	2
  1081  0000EC  6FAE               	movwf	loop@estado& (0+255),b
  1082  0000EE                     l126:
  1083                           
  1084                           ; BSR set to: 1
  1085                           
  1086                           ; BSR set to: 1
  1087  0000EE  B281               	btfsc	3969,1,c	;volatile
  1088  0000F0  D002               	goto	u5200
  1089  0000F2  0E01               	movlw	1
  1090  0000F4  D001               	goto	u5210
  1091  0000F6                     u5200:
  1092  0000F6  0E00               	movlw	0
  1093  0000F8                     u5210:
  1094  0000F8  6F1A               	movwf	_loop$790& (0+255),b
  1095  0000FA  6B1B               	clrf	(_loop$790+1)& (0+255),b
  1096                           
  1097                           ; BSR set to: 1
  1098                           
  1099                           ; BSR set to: 1
  1100  0000FC  C11A  F118         	movff	_loop$790,_loop$789
  1101  000100  C11B  F119         	movff	_loop$790+1,_loop$789+1
  1102                           
  1103                           ; BSR set to: 1
  1104                           
  1105                           ; BSR set to: 1
  1106                           
  1107                           ; BSR set to: 1
  1108                           
  1109                           ; BSR set to: 1
  1110  000104  5118               	movf	_loop$789& (0+255),w,b
  1111  000106  1119               	iorwf	(_loop$789+1)& (0+255),w,b
  1112  000108  B4D8               	btfsc	status,2,c
  1113  00010A  0012               	return	
  1114  00010C  D7DD               	goto	l120
  1115  00010E                     l106:
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;main.c: 99: }
  1119                           ;main.c: 101: setMotores(0, 0);
  1120                           
  1121                           ; BSR set to: 1
  1122  00010E  0E00               	movlw	0
  1123  000110  6E3E               	movwf	setMotores@dutyI+1,c
  1124  000112  0E00               	movlw	0
  1125  000114  6E3D               	movwf	setMotores@dutyI,c
  1126  000116  0E00               	movlw	0
  1127  000118  6E40               	movwf	setMotores@dutyD+1,c
  1128  00011A  0E00               	movlw	0
  1129  00011C  6E3F               	movwf	setMotores@dutyD,c
  1130  00011E  EC8E  F003         	call	_setMotores	;wreg free
  1131                           
  1132                           ;main.c: 102: LATBbits.LB2 = (1 == 1 ? !PORTAbits.RA4 : (1 == 2 ? !PORTAbits.RA3 : (1 ==
      +                           3 ? !PORTAbits.RA2 : (1 == 4 ? !PORTBbits.RB5 : (1 == 5 ? !PORTCbits.RC7 : 0))))) || (2
      +                           == 1 ? !PORTAbits.RA4 : (2 == 2 ? !PORTAbits.RA3 : (2 == 3 ? !PORTAbits.RA2 : (2 == 4 ?
  1133  000122  0E01               	movlw	1
  1134  000124  0101               	movlb	1	; () banked
  1135  000126  6FA8               	movwf	_loop$800& (0+255),b
  1136                           
  1137                           ; BSR set to: 1
  1138  000128  B880               	btfsc	3968,4,c	;volatile
  1139                           
  1140                           ; BSR set to: 1
  1141  00012A  A680               	btfss	3968,3,c	;volatile
  1142  00012C  D004               	goto	l135
  1143                           
  1144                           ; BSR set to: 1
  1145  00012E  A080               	btfss	3968,0,c	;volatile
  1146  000130  D002               	goto	l135
  1147                           
  1148                           ; BSR set to: 1
  1149  000132  0E00               	movlw	0
  1150  000134  6FA8               	movwf	_loop$800& (0+255),b
  1151  000136                     l135:
  1152                           
  1153                           ; BSR set to: 1
  1154                           ;main.c: 103: LATBbits.LB3 = (3 == 1 ? !PORTAbits.RA4 : (3 == 2 ? !PORTAbits.RA3 : (3 ==
      +                           3 ? !PORTAbits.RA2 : (3 == 4 ? !PORTBbits.RB5 : (3 == 5 ? !PORTCbits.RC7 : 0)))));
  1155                           
  1156                           ; BSR set to: 1
  1157  000136  B1A8               	btfsc	_loop$800& (0+255),0,b
  1158  000138  D002               	bra	u5285
  1159  00013A  948A               	bcf	3978,2,c	;volatile
  1160  00013C  D001               	bra	u5286
  1161  00013E                     u5285:
  1162  00013E  848A               	bsf	3978,2,c	;volatile
  1163  000140                     u5286:
  1164                           
  1165                           ; BSR set to: 1
  1166                           
  1167                           ; BSR set to: 1
  1168                           
  1169                           ; BSR set to: 1
  1170                           
  1171                           ; BSR set to: 1
  1172                           
  1173                           ; BSR set to: 1
  1174                           
  1175                           ; BSR set to: 1
  1176                           
  1177                           ; BSR set to: 1
  1178                           
  1179                           ; BSR set to: 1
  1180                           
  1181                           ; BSR set to: 1
  1182  000140  B480               	btfsc	3968,2,c	;volatile
  1183  000142  D002               	goto	u5330
  1184  000144  0E01               	movlw	1
  1185  000146  D001               	goto	u5340
  1186  000148                     u5330:
  1187  000148  0E00               	movlw	0
  1188  00014A                     u5340:
  1189  00014A  0101               	movlb	1	; () banked
  1190  00014C  6F22               	movwf	_loop$803& (0+255),b
  1191  00014E  6B23               	clrf	(_loop$803+1)& (0+255),b
  1192                           
  1193                           ; BSR set to: 1
  1194                           
  1195                           ; BSR set to: 1
  1196  000150  C122  F120         	movff	_loop$803,_loop$802
  1197  000154  C123  F121         	movff	_loop$803+1,_loop$802+1
  1198                           
  1199                           ; BSR set to: 1
  1200                           
  1201                           ; BSR set to: 1
  1202                           
  1203                           ; BSR set to: 1
  1204                           
  1205                           ; BSR set to: 1
  1206  000158  C120  F11E         	movff	_loop$802,_loop$801
  1207  00015C  C121  F11F         	movff	_loop$802+1,_loop$801+1
  1208                           
  1209                           ; BSR set to: 1
  1210                           
  1211                           ; BSR set to: 1
  1212                           
  1213                           ; BSR set to: 1
  1214                           
  1215                           ; BSR set to: 1
  1216  000160  B11E               	btfsc	_loop$801& (0+255),0,b
  1217  000162  D002               	bra	u5395
  1218  000164  968A               	bcf	3978,3,c	;volatile
  1219  000166  D001               	bra	u5396
  1220  000168                     u5395:
  1221  000168  868A               	bsf	3978,3,c	;volatile
  1222  00016A                     u5396:
  1223                           
  1224                           ;main.c: 104: LATBbits.LB4 = (4 == 1 ? !PORTAbits.RA4 : (4 == 2 ? !PORTAbits.RA3 : (4 ==
      +                           3 ? !PORTAbits.RA2 : (4 == 4 ? !PORTBbits.RB5 : (4 == 5 ? !PORTCbits.RC7 : 0))))) || (5
      +                           == 1 ? !PORTAbits.RA4 : (5 == 2 ? !PORTAbits.RA3 : (5 == 3 ? !PORTAbits.RA2 : (5 == 4 ?
  1225  00016A  0E01               	movlw	1
  1226  00016C  0101               	movlb	1	; () banked
  1227  00016E  6FA9               	movwf	_loop$806& (0+255),b
  1228                           
  1229                           ; BSR set to: 1
  1230  000170  BA81               	btfsc	3969,5,c	;volatile
  1231                           
  1232                           ; BSR set to: 1
  1233  000172  AE82               	btfss	3970,7,c	;volatile
  1234  000174  D004               	goto	l157
  1235                           
  1236                           ; BSR set to: 1
  1237  000176  A280               	btfss	3968,1,c	;volatile
  1238  000178  D002               	goto	l157
  1239                           
  1240                           ; BSR set to: 1
  1241  00017A  0E00               	movlw	0
  1242  00017C  6FA9               	movwf	_loop$806& (0+255),b
  1243  00017E                     l157:
  1244                           
  1245                           ; BSR set to: 1
  1246                           
  1247                           ; BSR set to: 1
  1248  00017E  B1A9               	btfsc	_loop$806& (0+255),0,b
  1249  000180  D002               	bra	u5435
  1250  000182  988A               	bcf	3978,4,c	;volatile
  1251  000184  D001               	bra	u5436
  1252  000186                     u5435:
  1253  000186  888A               	bsf	3978,4,c	;volatile
  1254  000188                     u5436:
  1255                           
  1256                           ;main.c: 105: break;
  1257  000188  0012               	return	
  1258  00018A                     
  1259                           ; BSR set to: 1
  1260  00018A  BA80               	btfsc	3968,5,c	;volatile
  1261  00018C  D002               	goto	u5440
  1262  00018E  0E01               	movlw	1
  1263  000190  D001               	goto	u5450
  1264  000192                     u5440:
  1265  000192  0E00               	movlw	0
  1266  000194                     u5450:
  1267  000194  0101               	movlb	1	; () banked
  1268  000196  6F2C               	movwf	_loop$809& (0+255),b
  1269  000198  6B2D               	clrf	(_loop$809+1)& (0+255),b
  1270                           
  1271                           ; BSR set to: 1
  1272                           
  1273                           ; BSR set to: 1
  1274  00019A  C12C  F12A         	movff	_loop$809,_loop$808
  1275  00019E  C12D  F12B         	movff	_loop$809+1,_loop$808+1
  1276                           
  1277                           ; BSR set to: 1
  1278                           
  1279                           ; BSR set to: 1
  1280                           
  1281                           ; BSR set to: 1
  1282                           
  1283                           ; BSR set to: 1
  1284  0001A2  C12A  F128         	movff	_loop$808,_loop$807
  1285  0001A6  C12B  F129         	movff	_loop$808+1,_loop$807+1
  1286                           
  1287                           ; BSR set to: 1
  1288                           
  1289                           ; BSR set to: 1
  1290                           
  1291                           ; BSR set to: 1
  1292                           
  1293                           ; BSR set to: 1
  1294  0001AA  5128               	movf	_loop$807& (0+255),w,b
  1295  0001AC  1129               	iorwf	(_loop$807+1)& (0+255),w,b
  1296  0001AE  A4D8               	btfss	status,2,c
  1297  0001B0  D005               	goto	l159
  1298                           
  1299                           ; BSR set to: 1
  1300                           ;main.c: 109: estado = MENU;
  1301  0001B2  0E00               	movlw	0
  1302  0001B4  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1303  0001B6  0E00               	movlw	0
  1304  0001B8  6FAE               	movwf	loop@estado& (0+255),b
  1305                           
  1306                           ;main.c: 110: break;
  1307  0001BA  0012               	return	
  1308  0001BC                     l159:
  1309                           
  1310                           ; BSR set to: 1
  1311                           ;main.c: 111: }
  1312                           ;main.c: 113: LATBbits.LB2 = 1;
  1313  0001BC  848A               	bsf	3978,2,c	;volatile
  1314                           
  1315                           ;main.c: 114: LATBbits.LB3 = 0;
  1316  0001BE  968A               	bcf	3978,3,c	;volatile
  1317                           
  1318                           ;main.c: 115: LATBbits.LB4 = 1;
  1319  0001C0  888A               	bsf	3978,4,c	;volatile
  1320                           
  1321                           ; BSR set to: 1
  1322                           ;main.c: 116: setMotores(1000, 1000);
  1323  0001C2  0E03               	movlw	3
  1324  0001C4  6E3E               	movwf	setMotores@dutyI+1,c
  1325  0001C6  0EE8               	movlw	232
  1326  0001C8  6E3D               	movwf	setMotores@dutyI,c
  1327  0001CA  0E03               	movlw	3
  1328  0001CC  6E40               	movwf	setMotores@dutyD+1,c
  1329  0001CE  0EE8               	movlw	232
  1330  0001D0  6E3F               	movwf	setMotores@dutyD,c
  1331  0001D2  EC8E  F003         	call	_setMotores	;wreg free
  1332                           
  1333                           ;main.c: 117: break;
  1334  0001D6  0012               	return	
  1335  0001D8                     
  1336                           ;main.c: 120: if(millis() > (m + 4970)){
  1337  0001D8  ECDF  F006         	call	_millis	;wreg free
  1338  0001DC  0E6A               	movlw	106
  1339  0001DE  0101               	movlb	1	; () banked
  1340  0001E0  25AA               	addwf	loop@m& (0+255),w,b
  1341  0001E2  0100               	movlb	0	; () banked
  1342  0001E4  6F60               	movwf	??_loop& (0+255),b
  1343  0001E6  0E13               	movlw	19
  1344  0001E8  0101               	movlb	1	; () banked
  1345  0001EA  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1346  0001EC  0100               	movlb	0	; () banked
  1347  0001EE  6F61               	movwf	(??_loop+1)& (0+255),b
  1348  0001F0  0E00               	movlw	0
  1349  0001F2  0101               	movlb	1	; () banked
  1350  0001F4  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1351  0001F6  0100               	movlb	0	; () banked
  1352  0001F8  6F62               	movwf	(??_loop+2)& (0+255),b
  1353  0001FA  0E00               	movlw	0
  1354  0001FC  0101               	movlb	1	; () banked
  1355  0001FE  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1356  000200  0100               	movlb	0	; () banked
  1357  000202  6F63               	movwf	(??_loop+3)& (0+255),b
  1358  000204  5013               	movf	?_millis,w,c
  1359  000206  5D60               	subwf	??_loop& (0+255),w,b
  1360  000208  5014               	movf	?_millis+1,w,c
  1361  00020A  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1362  00020C  5015               	movf	?_millis+2,w,c
  1363  00020E  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1364  000210  5016               	movf	?_millis+3,w,c
  1365  000212  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1366  000214  B0D8               	btfsc	status,0,c
  1367  000216  D009               	goto	l173
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 121: estado = 1;
  1371  000218  0E00               	movlw	0
  1372  00021A  0101               	movlb	1	; () banked
  1373  00021C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1374  00021E  0E01               	movlw	1
  1375  000220  6FAE               	movwf	loop@estado& (0+255),b
  1376                           
  1377                           ; BSR set to: 1
  1378                           ;main.c: 122: LATBbits.LB2 = 0;
  1379  000222  948A               	bcf	3978,2,c	;volatile
  1380                           
  1381                           ; BSR set to: 1
  1382                           ;main.c: 123: LATBbits.LB3 = 0;
  1383  000224  968A               	bcf	3978,3,c	;volatile
  1384                           
  1385                           ; BSR set to: 1
  1386                           ;main.c: 124: LATBbits.LB4 = 1;
  1387  000226  888A               	bsf	3978,4,c	;volatile
  1388                           
  1389                           ;main.c: 125: break;
  1390  000228  0012               	return	
  1391  00022A                     l173:
  1392                           
  1393                           ;main.c: 126: }
  1394                           ;main.c: 128: setMotores(0, 0);
  1395                           
  1396                           ; BSR set to: 1
  1397  00022A  0E00               	movlw	0
  1398  00022C  6E3E               	movwf	setMotores@dutyI+1,c
  1399  00022E  0E00               	movlw	0
  1400  000230  6E3D               	movwf	setMotores@dutyI,c
  1401  000232  0E00               	movlw	0
  1402  000234  6E40               	movwf	setMotores@dutyD+1,c
  1403  000236  0E00               	movlw	0
  1404  000238  6E3F               	movwf	setMotores@dutyD,c
  1405  00023A  EC8E  F003         	call	_setMotores	;wreg free
  1406                           
  1407                           ;main.c: 129: LATBbits.LB2 = 1;
  1408  00023E  848A               	bsf	3978,2,c	;volatile
  1409                           
  1410                           ;main.c: 130: LATBbits.LB3 = millis() > (m + (4970 / 2));
  1411  000240  ECDF  F006         	call	_millis	;wreg free
  1412  000244  0EB5               	movlw	181
  1413  000246  0101               	movlb	1	; () banked
  1414  000248  25AA               	addwf	loop@m& (0+255),w,b
  1415  00024A  0100               	movlb	0	; () banked
  1416  00024C  6F60               	movwf	??_loop& (0+255),b
  1417  00024E  0E09               	movlw	9
  1418  000250  0101               	movlb	1	; () banked
  1419  000252  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1420  000254  0100               	movlb	0	; () banked
  1421  000256  6F61               	movwf	(??_loop+1)& (0+255),b
  1422  000258  0E00               	movlw	0
  1423  00025A  0101               	movlb	1	; () banked
  1424  00025C  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1425  00025E  0100               	movlb	0	; () banked
  1426  000260  6F62               	movwf	(??_loop+2)& (0+255),b
  1427  000262  0E00               	movlw	0
  1428  000264  0101               	movlb	1	; () banked
  1429  000266  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1430  000268  0100               	movlb	0	; () banked
  1431  00026A  6F63               	movwf	(??_loop+3)& (0+255),b
  1432  00026C  5013               	movf	?_millis,w,c
  1433  00026E  5D60               	subwf	??_loop& (0+255),w,b
  1434  000270  5014               	movf	?_millis+1,w,c
  1435  000272  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1436  000274  5015               	movf	?_millis+2,w,c
  1437  000276  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1438  000278  5016               	movf	?_millis+3,w,c
  1439  00027A  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1440  00027C  B0D8               	btfsc	status,0,c
  1441  00027E  D003               	goto	u5520
  1442  000280  6B64               	clrf	(??_loop+4)& (0+255),b
  1443  000282  2B64               	incf	(??_loop+4)& (0+255),f,b
  1444  000284  D002               	goto	u5538
  1445  000286                     u5520:
  1446  000286  0100               	movlb	0	; () banked
  1447  000288  6B64               	clrf	(??_loop+4)& (0+255),b
  1448  00028A                     u5538:
  1449  00028A  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1450  00028C  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1451  00028E  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1452  000290  508A               	movf	3978,w,c	;volatile
  1453  000292  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1454  000294  0BF7               	andlw	-9
  1455  000296  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1456  000298  6E8A               	movwf	3978,c	;volatile
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;main.c: 131: LATBbits.LB4 = 0;
  1460  00029A  988A               	bcf	3978,4,c	;volatile
  1461                           
  1462                           ;main.c: 132: break;
  1463  00029C  0012               	return	
  1464  00029E                     
  1465                           ; BSR set to: 1
  1466  00029E  B080               	btfsc	3968,0,c	;volatile
  1467  0002A0  D002               	goto	u5560
  1468  0002A2  0E01               	movlw	1
  1469  0002A4  D001               	goto	u5570
  1470  0002A6                     u5560:
  1471  0002A6  0E00               	movlw	0
  1472  0002A8                     u5570:
  1473  0002A8  0101               	movlb	1	; () banked
  1474  0002AA  6F2E               	movwf	_loop$810& (0+255),b
  1475  0002AC  6B2F               	clrf	(_loop$810+1)& (0+255),b
  1476                           
  1477                           ; BSR set to: 1
  1478                           
  1479                           ; BSR set to: 1
  1480  0002AE  512E               	movf	_loop$810& (0+255),w,b
  1481  0002B0  112F               	iorwf	(_loop$810+1)& (0+255),w,b
  1482  0002B2  A4D8               	btfss	status,2,c
  1483  0002B4  D00F               	goto	u5630
  1484                           
  1485                           ; BSR set to: 1
  1486                           
  1487                           ; BSR set to: 1
  1488                           
  1489                           ; BSR set to: 1
  1490                           
  1491                           ; BSR set to: 1
  1492  0002B6  B280               	btfsc	3968,1,c	;volatile
  1493  0002B8  D002               	goto	u5590
  1494  0002BA  0E01               	movlw	1
  1495  0002BC  D001               	goto	u5600
  1496  0002BE                     u5590:
  1497  0002BE  0E00               	movlw	0
  1498  0002C0                     u5600:
  1499  0002C0  6F34               	movwf	_loop$813& (0+255),b
  1500  0002C2  6B35               	clrf	(_loop$813+1)& (0+255),b
  1501                           
  1502                           ; BSR set to: 1
  1503                           
  1504                           ; BSR set to: 1
  1505  0002C4  C134  F132         	movff	_loop$813,_loop$812
  1506  0002C8  C135  F133         	movff	_loop$813+1,_loop$812+1
  1507                           
  1508                           ; BSR set to: 1
  1509                           
  1510                           ; BSR set to: 1
  1511                           
  1512                           ; BSR set to: 1
  1513                           
  1514                           ; BSR set to: 1
  1515  0002CC  5132               	movf	_loop$812& (0+255),w,b
  1516  0002CE  1133               	iorwf	(_loop$812+1)& (0+255),w,b
  1517  0002D0  B4D8               	btfsc	status,2,c
  1518  0002D2  D00F               	goto	l204
  1519  0002D4                     u5630:
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;main.c: 136: estado = ATRAS;
  1523                           
  1524                           ; BSR set to: 1
  1525  0002D4  0E00               	movlw	0
  1526  0002D6  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1527  0002D8  0E0B               	movlw	11
  1528  0002DA  6FAE               	movwf	loop@estado& (0+255),b
  1529                           
  1530                           ; BSR set to: 1
  1531                           ;main.c: 137: m = millis();
  1532  0002DC  ECDF  F006         	call	_millis	;wreg free
  1533  0002E0  C013  F1AA         	movff	?_millis,loop@m
  1534  0002E4  C014  F1AB         	movff	?_millis+1,loop@m+1
  1535  0002E8  C015  F1AC         	movff	?_millis+2,loop@m+2
  1536  0002EC  C016  F1AD         	movff	?_millis+3,loop@m+3
  1537                           
  1538                           ;main.c: 138: break;
  1539  0002F0  0012               	return	
  1540  0002F2                     l204:
  1541                           
  1542                           ; BSR set to: 1
  1543  0002F2  B480               	btfsc	3968,2,c	;volatile
  1544  0002F4  D002               	goto	u5680
  1545  0002F6  0E01               	movlw	1
  1546  0002F8  D001               	goto	u5690
  1547  0002FA                     u5680:
  1548  0002FA  0E00               	movlw	0
  1549  0002FC                     u5690:
  1550  0002FC  0101               	movlb	1	; () banked
  1551  0002FE  6F3A               	movwf	_loop$816& (0+255),b
  1552  000300  6B3B               	clrf	(_loop$816+1)& (0+255),b
  1553                           
  1554                           ; BSR set to: 1
  1555                           
  1556                           ; BSR set to: 1
  1557  000302  C13A  F138         	movff	_loop$816,_loop$815
  1558  000306  C13B  F139         	movff	_loop$816+1,_loop$815+1
  1559                           
  1560                           ; BSR set to: 1
  1561                           
  1562                           ; BSR set to: 1
  1563                           
  1564                           ; BSR set to: 1
  1565                           
  1566                           ; BSR set to: 1
  1567  00030A  C138  F136         	movff	_loop$815,_loop$814
  1568  00030E  C139  F137         	movff	_loop$815+1,_loop$814+1
  1569                           
  1570                           ; BSR set to: 1
  1571                           ;main.c: 142: if((2 == 1 ? !PORTAbits.RA4 : (2 == 2 ? !PORTAbits.RA3 : (2 == 3 ? !PORTAb
      +                          its.RA2 : (2 == 4 ? !PORTBbits.RB5 : (2 == 5 ? !PORTCbits.RC7 : 0))))) == (4 == 1 ? !POR
      +                          TAbits.RA4 : (4 == 2 ? !PORTAbits.RA3 : (4 == 3 ? !PORTAbits.RA2 : (4 == 4 ? !PORTBbits.
  1572                           
  1573                           ; BSR set to: 1
  1574                           
  1575                           ; BSR set to: 1
  1576                           
  1577                           ; BSR set to: 1
  1578  000312  5136               	movf	_loop$814& (0+255),w,b
  1579  000314  1137               	iorwf	(_loop$814+1)& (0+255),w,b
  1580  000316  B4D8               	btfsc	status,2,c
  1581  000318  D05A               	goto	l304
  1582                           
  1583                           ; BSR set to: 1
  1584                           
  1585                           ; BSR set to: 1
  1586                           
  1587                           ; BSR set to: 1
  1588                           
  1589                           ; BSR set to: 1
  1590                           
  1591                           ; BSR set to: 1
  1592                           
  1593                           ; BSR set to: 1
  1594                           
  1595                           ; BSR set to: 1
  1596                           
  1597                           ; BSR set to: 1
  1598  00031A  BA81               	btfsc	3969,5,c	;volatile
  1599  00031C  D002               	goto	u5770
  1600  00031E  0E01               	movlw	1
  1601  000320  D001               	goto	u5780
  1602  000322                     u5770:
  1603  000322  0E00               	movlw	0
  1604  000324                     u5780:
  1605  000324  6F46               	movwf	_loop$822& (0+255),b
  1606  000326  6B47               	clrf	(_loop$822+1)& (0+255),b
  1607                           
  1608                           ; BSR set to: 1
  1609                           
  1610                           ; BSR set to: 1
  1611  000328  C146  F144         	movff	_loop$822,_loop$821
  1612  00032C  C147  F145         	movff	_loop$822+1,_loop$821+1
  1613                           
  1614                           ; BSR set to: 1
  1615                           
  1616                           ; BSR set to: 1
  1617                           
  1618                           ; BSR set to: 1
  1619                           
  1620                           ; BSR set to: 1
  1621  000330  C144  F142         	movff	_loop$821,_loop$820
  1622  000334  C145  F143         	movff	_loop$821+1,_loop$820+1
  1623                           
  1624                           ; BSR set to: 1
  1625                           
  1626                           ; BSR set to: 1
  1627                           
  1628                           ; BSR set to: 1
  1629                           
  1630                           ; BSR set to: 1
  1631  000338  C142  F140         	movff	_loop$820,_loop$819
  1632  00033C  C143  F141         	movff	_loop$820+1,_loop$819+1
  1633                           
  1634                           ; BSR set to: 1
  1635                           
  1636                           ; BSR set to: 1
  1637                           
  1638                           ; BSR set to: 1
  1639                           
  1640                           ; BSR set to: 1
  1641                           
  1642                           ; BSR set to: 1
  1643                           
  1644                           ; BSR set to: 1
  1645                           
  1646                           ; BSR set to: 1
  1647                           
  1648                           ; BSR set to: 1
  1649                           
  1650                           ; BSR set to: 1
  1651                           
  1652                           ; BSR set to: 1
  1653                           
  1654                           ; BSR set to: 1
  1655                           
  1656                           ; BSR set to: 1
  1657                           
  1658                           ; BSR set to: 1
  1659                           
  1660                           ; BSR set to: 1
  1661                           
  1662                           ; BSR set to: 1
  1663                           
  1664                           ; BSR set to: 1
  1665                           
  1666                           ; BSR set to: 1
  1667                           
  1668                           ; BSR set to: 1
  1669  000340  B680               	btfsc	3968,3,c	;volatile
  1670  000342  D002               	goto	u5910
  1671  000344  0E01               	movlw	1
  1672  000346  D001               	goto	u5920
  1673  000348                     u5910:
  1674  000348  0E00               	movlw	0
  1675  00034A                     u5920:
  1676  00034A  6F4C               	movwf	_loop$825& (0+255),b
  1677  00034C  6B4D               	clrf	(_loop$825+1)& (0+255),b
  1678                           
  1679                           ; BSR set to: 1
  1680                           
  1681                           ; BSR set to: 1
  1682  00034E  C14C  F14A         	movff	_loop$825,_loop$824
  1683  000352  C14D  F14B         	movff	_loop$825+1,_loop$824+1
  1684                           
  1685                           ; BSR set to: 1
  1686                           
  1687                           ; BSR set to: 1
  1688                           
  1689                           ; BSR set to: 1
  1690                           
  1691                           ; BSR set to: 1
  1692  000356  5140               	movf	_loop$819& (0+255),w,b
  1693  000358  194A               	xorwf	_loop$824& (0+255),w,b
  1694  00035A  E109               	bnz	l3022
  1695  00035C  5141               	movf	(_loop$819+1)& (0+255),w,b
  1696  00035E  194B               	xorwf	(_loop$824+1)& (0+255),w,b
  1697  000360  A4D8               	btfss	status,2,c
  1698  000362  D005               	goto	l262
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;main.c: 143: estado = ATAQUE;
  1702  000364  0E00               	movlw	0
  1703  000366  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1704  000368  0E04               	movlw	4
  1705  00036A  6FAE               	movwf	loop@estado& (0+255),b
  1706                           
  1707                           ;main.c: 144: break;
  1708  00036C  0012               	return	
  1709  00036E                     l262:
  1710  00036E                     l3022:
  1711                           
  1712                           ; BSR set to: 1
  1713  00036E  B680               	btfsc	3968,3,c	;volatile
  1714  000370  D002               	goto	u6020
  1715  000372  0E01               	movlw	1
  1716  000374  D001               	goto	u6030
  1717  000376                     u6020:
  1718  000376  0E00               	movlw	0
  1719  000378                     u6030:
  1720  000378  6F56               	movwf	_loop$830& (0+255),b
  1721  00037A  6B57               	clrf	(_loop$830+1)& (0+255),b
  1722                           
  1723                           ; BSR set to: 1
  1724                           
  1725                           ; BSR set to: 1
  1726  00037C  C156  F154         	movff	_loop$830,_loop$829
  1727  000380  C157  F155         	movff	_loop$830+1,_loop$829+1
  1728                           
  1729                           ; BSR set to: 1
  1730                           
  1731                           ; BSR set to: 1
  1732                           
  1733                           ; BSR set to: 1
  1734                           
  1735                           ; BSR set to: 1
  1736  000384  5154               	movf	_loop$829& (0+255),w,b
  1737  000386  1155               	iorwf	(_loop$829+1)& (0+255),w,b
  1738  000388  B4D8               	btfsc	status,2,c
  1739  00038A  D005               	goto	l291
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;main.c: 148: estado = IZQAV;
  1743  00038C  0E00               	movlw	0
  1744  00038E  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1745  000390  0E0A               	movlw	10
  1746  000392  6FAE               	movwf	loop@estado& (0+255),b
  1747                           
  1748                           ;main.c: 149: break;
  1749  000394  0012               	return	
  1750  000396                     l291:
  1751                           
  1752                           ; BSR set to: 1
  1753                           
  1754                           ; BSR set to: 1
  1755  000396  BA81               	btfsc	3969,5,c	;volatile
  1756  000398  D002               	goto	u6090
  1757  00039A  0E01               	movlw	1
  1758  00039C  D001               	goto	u6100
  1759  00039E                     u6090:
  1760  00039E  0E00               	movlw	0
  1761  0003A0                     u6100:
  1762  0003A0  6F64               	movwf	_loop$837& (0+255),b
  1763  0003A2  6B65               	clrf	(_loop$837+1)& (0+255),b
  1764                           
  1765                           ; BSR set to: 1
  1766                           
  1767                           ; BSR set to: 1
  1768  0003A4  C164  F162         	movff	_loop$837,_loop$836
  1769  0003A8  C165  F163         	movff	_loop$837+1,_loop$836+1
  1770                           
  1771                           ; BSR set to: 1
  1772                           
  1773                           ; BSR set to: 1
  1774                           
  1775                           ; BSR set to: 1
  1776                           
  1777                           ; BSR set to: 1
  1778  0003AC  C162  F160         	movff	_loop$836,_loop$835
  1779  0003B0  C163  F161         	movff	_loop$836+1,_loop$835+1
  1780                           
  1781                           ; BSR set to: 1
  1782                           
  1783                           ; BSR set to: 1
  1784                           
  1785                           ; BSR set to: 1
  1786                           
  1787                           ; BSR set to: 1
  1788  0003B4  C160  F15E         	movff	_loop$835,_loop$834
  1789  0003B8  C161  F15F         	movff	_loop$835+1,_loop$834+1
  1790                           
  1791                           ; BSR set to: 1
  1792                           
  1793                           ; BSR set to: 1
  1794                           
  1795                           ; BSR set to: 1
  1796                           
  1797                           ; BSR set to: 1
  1798  0003BC  515E               	movf	_loop$834& (0+255),w,b
  1799  0003BE  115F               	iorwf	(_loop$834+1)& (0+255),w,b
  1800  0003C0  B4D8               	btfsc	status,2,c
  1801  0003C2  D005               	goto	l304
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;main.c: 153: estado = DERAV;
  1805  0003C4  0E00               	movlw	0
  1806  0003C6  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1807  0003C8  0E07               	movlw	7
  1808  0003CA  6FAE               	movwf	loop@estado& (0+255),b
  1809                           
  1810                           ;main.c: 154: break;
  1811  0003CC  0012               	return	
  1812  0003CE                     l304:
  1813                           
  1814                           ; BSR set to: 1
  1815                           
  1816                           ; BSR set to: 1
  1817  0003CE  B680               	btfsc	3968,3,c	;volatile
  1818  0003D0  D002               	goto	u6240
  1819  0003D2  0E01               	movlw	1
  1820  0003D4  D001               	goto	u6250
  1821  0003D6                     u6240:
  1822  0003D6  0E00               	movlw	0
  1823  0003D8                     u6250:
  1824  0003D8  6F6A               	movwf	_loop$840& (0+255),b
  1825  0003DA  6B6B               	clrf	(_loop$840+1)& (0+255),b
  1826                           
  1827                           ; BSR set to: 1
  1828                           
  1829                           ; BSR set to: 1
  1830  0003DC  C16A  F168         	movff	_loop$840,_loop$839
  1831  0003E0  C16B  F169         	movff	_loop$840+1,_loop$839+1
  1832                           
  1833                           ; BSR set to: 1
  1834                           
  1835                           ; BSR set to: 1
  1836                           
  1837                           ; BSR set to: 1
  1838                           
  1839                           ; BSR set to: 1
  1840  0003E4  5168               	movf	_loop$839& (0+255),w,b
  1841  0003E6  1169               	iorwf	(_loop$839+1)& (0+255),w,b
  1842  0003E8  B4D8               	btfsc	status,2,c
  1843  0003EA  D005               	goto	l333
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;main.c: 159: estado = IZQA;
  1847  0003EC  0E00               	movlw	0
  1848  0003EE  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1849  0003F0  0E09               	movlw	9
  1850  0003F2  6FAE               	movwf	loop@estado& (0+255),b
  1851                           
  1852                           ;main.c: 160: break;
  1853  0003F4  0012               	return	
  1854  0003F6                     l333:
  1855                           
  1856                           ; BSR set to: 1
  1857                           
  1858                           ; BSR set to: 1
  1859  0003F6  BA81               	btfsc	3969,5,c	;volatile
  1860  0003F8  D002               	goto	u6310
  1861  0003FA  0E01               	movlw	1
  1862  0003FC  D001               	goto	u6320
  1863  0003FE                     u6310:
  1864  0003FE  0E00               	movlw	0
  1865  000400                     u6320:
  1866  000400  6F78               	movwf	_loop$847& (0+255),b
  1867  000402  6B79               	clrf	(_loop$847+1)& (0+255),b
  1868                           
  1869                           ; BSR set to: 1
  1870                           
  1871                           ; BSR set to: 1
  1872  000404  C178  F176         	movff	_loop$847,_loop$846
  1873  000408  C179  F177         	movff	_loop$847+1,_loop$846+1
  1874                           
  1875                           ; BSR set to: 1
  1876                           
  1877                           ; BSR set to: 1
  1878                           
  1879                           ; BSR set to: 1
  1880                           
  1881                           ; BSR set to: 1
  1882  00040C  C176  F174         	movff	_loop$846,_loop$845
  1883  000410  C177  F175         	movff	_loop$846+1,_loop$845+1
  1884                           
  1885                           ; BSR set to: 1
  1886                           
  1887                           ; BSR set to: 1
  1888                           
  1889                           ; BSR set to: 1
  1890                           
  1891                           ; BSR set to: 1
  1892  000414  C174  F172         	movff	_loop$845,_loop$844
  1893  000418  C175  F173         	movff	_loop$845+1,_loop$844+1
  1894                           
  1895                           ; BSR set to: 1
  1896                           
  1897                           ; BSR set to: 1
  1898                           
  1899                           ; BSR set to: 1
  1900                           
  1901                           ; BSR set to: 1
  1902  00041C  5172               	movf	_loop$844& (0+255),w,b
  1903  00041E  1173               	iorwf	(_loop$844+1)& (0+255),w,b
  1904  000420  B4D8               	btfsc	status,2,c
  1905  000422  D005               	goto	l342
  1906                           
  1907                           ; BSR set to: 1
  1908                           ;main.c: 164: estado = DERA;
  1909  000424  0E00               	movlw	0
  1910  000426  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1911  000428  0E06               	movlw	6
  1912  00042A  6FAE               	movwf	loop@estado& (0+255),b
  1913                           
  1914                           ;main.c: 165: break;
  1915  00042C  0012               	return	
  1916  00042E                     l342:
  1917                           
  1918                           ; BSR set to: 1
  1919                           
  1920                           ; BSR set to: 1
  1921  00042E  B880               	btfsc	3968,4,c	;volatile
  1922  000430  D002               	goto	u6480
  1923  000432  0E01               	movlw	1
  1924  000434  D001               	goto	u6490
  1925  000436                     u6480:
  1926  000436  0E00               	movlw	0
  1927  000438                     u6490:
  1928  000438  6F7C               	movwf	_loop$849& (0+255),b
  1929  00043A  6B7D               	clrf	(_loop$849+1)& (0+255),b
  1930                           
  1931                           ; BSR set to: 1
  1932                           
  1933                           ; BSR set to: 1
  1934  00043C  517C               	movf	_loop$849& (0+255),w,b
  1935  00043E  117D               	iorwf	(_loop$849+1)& (0+255),w,b
  1936  000440  B4D8               	btfsc	status,2,c
  1937  000442  D005               	goto	l379
  1938                           
  1939                           ; BSR set to: 1
  1940                           ;main.c: 169: estado = IZQ;
  1941  000444  0E00               	movlw	0
  1942  000446  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1943  000448  0E08               	movlw	8
  1944  00044A  6FAE               	movwf	loop@estado& (0+255),b
  1945                           
  1946                           ;main.c: 170: break;
  1947  00044C  0012               	return	
  1948  00044E                     l379:
  1949                           
  1950                           ; BSR set to: 1
  1951                           
  1952                           ; BSR set to: 1
  1953  00044E  BE82               	btfsc	3970,7,c	;volatile
  1954  000450  D002               	goto	u6510
  1955  000452  0E01               	movlw	1
  1956  000454  D001               	goto	u6520
  1957  000456                     u6510:
  1958  000456  0E00               	movlw	0
  1959  000458                     u6520:
  1960  000458  6F8E               	movwf	_loop$858& (0+255),b
  1961  00045A  6B8F               	clrf	(_loop$858+1)& (0+255),b
  1962                           
  1963                           ; BSR set to: 1
  1964                           
  1965                           ; BSR set to: 1
  1966  00045C  C18E  F18C         	movff	_loop$858,_loop$857
  1967  000460  C18F  F18D         	movff	_loop$858+1,_loop$857+1
  1968                           
  1969                           ; BSR set to: 1
  1970                           
  1971                           ; BSR set to: 1
  1972                           
  1973                           ; BSR set to: 1
  1974                           
  1975                           ; BSR set to: 1
  1976  000464  C18C  F18A         	movff	_loop$857,_loop$856
  1977  000468  C18D  F18B         	movff	_loop$857+1,_loop$856+1
  1978                           
  1979                           ; BSR set to: 1
  1980                           
  1981                           ; BSR set to: 1
  1982                           
  1983                           ; BSR set to: 1
  1984                           
  1985                           ; BSR set to: 1
  1986  00046C  C18A  F188         	movff	_loop$856,_loop$855
  1987  000470  C18B  F189         	movff	_loop$856+1,_loop$855+1
  1988                           
  1989                           ; BSR set to: 1
  1990                           
  1991                           ; BSR set to: 1
  1992                           
  1993                           ; BSR set to: 1
  1994                           
  1995                           ; BSR set to: 1
  1996  000474  C188  F186         	movff	_loop$855,_loop$854
  1997  000478  C189  F187         	movff	_loop$855+1,_loop$854+1
  1998                           
  1999                           ; BSR set to: 1
  2000                           
  2001                           ; BSR set to: 1
  2002                           
  2003                           ; BSR set to: 1
  2004                           
  2005                           ; BSR set to: 1
  2006  00047C  5186               	movf	_loop$854& (0+255),w,b
  2007  00047E  1187               	iorwf	(_loop$854+1)& (0+255),w,b
  2008  000480  B4D8               	btfsc	status,2,c
  2009  000482  D005               	goto	l361
  2010                           
  2011                           ; BSR set to: 1
  2012                           ;main.c: 174: estado = DER;
  2013  000484  0E00               	movlw	0
  2014  000486  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2015  000488  0E05               	movlw	5
  2016  00048A  6FAE               	movwf	loop@estado& (0+255),b
  2017                           
  2018                           ;main.c: 175: break;
  2019  00048C  0012               	return	
  2020  00048E                     l361:
  2021                           
  2022                           ; BSR set to: 1
  2023                           ;main.c: 176: }
  2024                           ;main.c: 178: estado = direccion;
  2025  00048E  C1B0  F1AE         	movff	loop@direccion,loop@estado
  2026  000492  C1B1  F1AF         	movff	loop@direccion+1,loop@estado+1
  2027                           
  2028                           ;main.c: 179: break;
  2029  000496  0012               	return	
  2030  000498                     
  2031                           ;main.c: 182: setMotores(1000, 1000);
  2032                           
  2033                           ; BSR set to: 1
  2034  000498  0E03               	movlw	3
  2035  00049A  6E3E               	movwf	setMotores@dutyI+1,c
  2036  00049C  0EE8               	movlw	232
  2037  00049E  6E3D               	movwf	setMotores@dutyI,c
  2038  0004A0  0E03               	movlw	3
  2039  0004A2  6E40               	movwf	setMotores@dutyD+1,c
  2040  0004A4  0EE8               	movlw	232
  2041  0004A6  6E3F               	movwf	setMotores@dutyD,c
  2042  0004A8  EC8E  F003         	call	_setMotores	;wreg free
  2043                           
  2044                           ;main.c: 183: estado = ANALISIS;
  2045  0004AC  0E00               	movlw	0
  2046  0004AE  0101               	movlb	1	; () banked
  2047  0004B0  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2048  0004B2  0E03               	movlw	3
  2049  0004B4  6FAE               	movwf	loop@estado& (0+255),b
  2050                           
  2051                           ;main.c: 184: break;
  2052  0004B6  0012               	return	
  2053  0004B8                     
  2054                           ;main.c: 187: setMotores(1000, 1000 / 2);
  2055                           
  2056                           ; BSR set to: 1
  2057  0004B8  0E03               	movlw	3
  2058  0004BA  6E3E               	movwf	setMotores@dutyI+1,c
  2059  0004BC  0EE8               	movlw	232
  2060  0004BE  6E3D               	movwf	setMotores@dutyI,c
  2061  0004C0  0E01               	movlw	1
  2062  0004C2  6E40               	movwf	setMotores@dutyD+1,c
  2063  0004C4  0EF4               	movlw	244
  2064  0004C6  6E3F               	movwf	setMotores@dutyD,c
  2065  0004C8  EC8E  F003         	call	_setMotores	;wreg free
  2066                           
  2067                           ;main.c: 188: direccion = DER;
  2068  0004CC  0E00               	movlw	0
  2069  0004CE  0101               	movlb	1	; () banked
  2070  0004D0  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2071  0004D2  0E05               	movlw	5
  2072  0004D4  6FB0               	movwf	loop@direccion& (0+255),b
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;main.c: 189: estado = ANALISIS;
  2076  0004D6  0E00               	movlw	0
  2077  0004D8  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2078  0004DA  0E03               	movlw	3
  2079  0004DC  6FAE               	movwf	loop@estado& (0+255),b
  2080                           
  2081                           ;main.c: 190: break;
  2082  0004DE  0012               	return	
  2083  0004E0                     
  2084                           ;main.c: 193: setMotores(1000 / 2, 1000);
  2085                           
  2086                           ; BSR set to: 1
  2087  0004E0  0E01               	movlw	1
  2088  0004E2  6E3E               	movwf	setMotores@dutyI+1,c
  2089  0004E4  0EF4               	movlw	244
  2090  0004E6  6E3D               	movwf	setMotores@dutyI,c
  2091  0004E8  0E03               	movlw	3
  2092  0004EA  6E40               	movwf	setMotores@dutyD+1,c
  2093  0004EC  0EE8               	movlw	232
  2094  0004EE  6E3F               	movwf	setMotores@dutyD,c
  2095  0004F0  EC8E  F003         	call	_setMotores	;wreg free
  2096                           
  2097                           ;main.c: 194: direccion = IZQ;
  2098  0004F4  0E00               	movlw	0
  2099  0004F6  0101               	movlb	1	; () banked
  2100  0004F8  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2101  0004FA  0E08               	movlw	8
  2102  0004FC  6FB0               	movwf	loop@direccion& (0+255),b
  2103                           
  2104                           ; BSR set to: 1
  2105                           ;main.c: 195: estado = ANALISIS;
  2106  0004FE  0E00               	movlw	0
  2107  000500  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2108  000502  0E03               	movlw	3
  2109  000504  6FAE               	movwf	loop@estado& (0+255),b
  2110                           
  2111                           ;main.c: 196: break;
  2112  000506  0012               	return	
  2113  000508                     
  2114                           ;main.c: 199: if(millis() > (m + 200)){
  2115                           
  2116                           ; BSR set to: 1
  2117  000508  ECDF  F006         	call	_millis	;wreg free
  2118  00050C  0EC8               	movlw	200
  2119  00050E  0101               	movlb	1	; () banked
  2120  000510  25AA               	addwf	loop@m& (0+255),w,b
  2121  000512  0100               	movlb	0	; () banked
  2122  000514  6F60               	movwf	??_loop& (0+255),b
  2123  000516  0E00               	movlw	0
  2124  000518  0101               	movlb	1	; () banked
  2125  00051A  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  2126  00051C  0100               	movlb	0	; () banked
  2127  00051E  6F61               	movwf	(??_loop+1)& (0+255),b
  2128  000520  0E00               	movlw	0
  2129  000522  0101               	movlb	1	; () banked
  2130  000524  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  2131  000526  0100               	movlb	0	; () banked
  2132  000528  6F62               	movwf	(??_loop+2)& (0+255),b
  2133  00052A  0E00               	movlw	0
  2134  00052C  0101               	movlb	1	; () banked
  2135  00052E  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  2136  000530  0100               	movlb	0	; () banked
  2137  000532  6F63               	movwf	(??_loop+3)& (0+255),b
  2138  000534  5013               	movf	?_millis,w,c
  2139  000536  5D60               	subwf	??_loop& (0+255),w,b
  2140  000538  5014               	movf	?_millis+1,w,c
  2141  00053A  5961               	subwfb	(??_loop+1)& (0+255),w,b
  2142  00053C  5015               	movf	?_millis+2,w,c
  2143  00053E  5962               	subwfb	(??_loop+2)& (0+255),w,b
  2144  000540  5016               	movf	?_millis+3,w,c
  2145  000542  5963               	subwfb	(??_loop+3)& (0+255),w,b
  2146  000544  B0D8               	btfsc	status,0,c
  2147  000546  D006               	goto	l386
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;main.c: 200: estado = ANALISIS;
  2151  000548  0E00               	movlw	0
  2152  00054A  0101               	movlb	1	; () banked
  2153  00054C  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2154  00054E  0E03               	movlw	3
  2155  000550  6FAE               	movwf	loop@estado& (0+255),b
  2156                           
  2157                           ;main.c: 201: break;
  2158  000552  0012               	return	
  2159  000554                     l386:
  2160                           
  2161                           ;main.c: 202: }
  2162                           ;main.c: 204: setMotores(-1000, -1000);
  2163                           
  2164                           ; BSR set to: 1
  2165  000554  0EFC               	movlw	252
  2166  000556  6E3E               	movwf	setMotores@dutyI+1,c
  2167  000558  0E18               	movlw	24
  2168  00055A  6E3D               	movwf	setMotores@dutyI,c
  2169  00055C  0EFC               	movlw	252
  2170  00055E  6E40               	movwf	setMotores@dutyD+1,c
  2171  000560  0E18               	movlw	24
  2172  000562  6E3F               	movwf	setMotores@dutyD,c
  2173  000564  EC8E  F003         	call	_setMotores	;wreg free
  2174                           
  2175                           ;main.c: 205: break;
  2176  000568  0012               	return	
  2177  00056A                     
  2178                           ;main.c: 208: setMotores(0, 1000);
  2179  00056A  0E00               	movlw	0
  2180  00056C  6E3E               	movwf	setMotores@dutyI+1,c
  2181  00056E  0E00               	movlw	0
  2182  000570  6E3D               	movwf	setMotores@dutyI,c
  2183  000572  0E03               	movlw	3
  2184  000574  6E40               	movwf	setMotores@dutyD+1,c
  2185  000576  0EE8               	movlw	232
  2186  000578  6E3F               	movwf	setMotores@dutyD,c
  2187  00057A  EC8E  F003         	call	_setMotores	;wreg free
  2188                           
  2189                           ;main.c: 209: direccion = IZQ;
  2190  00057E  0E00               	movlw	0
  2191  000580  0101               	movlb	1	; () banked
  2192  000582  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2193  000584  0E08               	movlw	8
  2194  000586  6FB0               	movwf	loop@direccion& (0+255),b
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;main.c: 210: estado = ANALISIS;
  2198  000588  0E00               	movlw	0
  2199  00058A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2200  00058C  0E03               	movlw	3
  2201  00058E  6FAE               	movwf	loop@estado& (0+255),b
  2202                           
  2203                           ;main.c: 211: break;
  2204  000590  0012               	return	
  2205  000592                     
  2206                           ;main.c: 214: setMotores(1000, 0);
  2207                           
  2208                           ; BSR set to: 1
  2209  000592  0E03               	movlw	3
  2210  000594  6E3E               	movwf	setMotores@dutyI+1,c
  2211  000596  0EE8               	movlw	232
  2212  000598  6E3D               	movwf	setMotores@dutyI,c
  2213  00059A  0E00               	movlw	0
  2214  00059C  6E40               	movwf	setMotores@dutyD+1,c
  2215  00059E  0E00               	movlw	0
  2216  0005A0  6E3F               	movwf	setMotores@dutyD,c
  2217  0005A2  EC8E  F003         	call	_setMotores	;wreg free
  2218                           
  2219                           ;main.c: 215: direccion = DER;
  2220  0005A6  0E00               	movlw	0
  2221  0005A8  0101               	movlb	1	; () banked
  2222  0005AA  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2223  0005AC  0E05               	movlw	5
  2224  0005AE  6FB0               	movwf	loop@direccion& (0+255),b
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;main.c: 216: estado = ANALISIS;
  2228  0005B0  0E00               	movlw	0
  2229  0005B2  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2230  0005B4  0E03               	movlw	3
  2231  0005B6  6FAE               	movwf	loop@estado& (0+255),b
  2232                           
  2233                           ;main.c: 217: break;
  2234  0005B8  0012               	return	
  2235  0005BA                     
  2236                           ;main.c: 220: setMotores(-700, 700);
  2237                           
  2238                           ; BSR set to: 1
  2239  0005BA  0EFD               	movlw	253
  2240  0005BC  6E3E               	movwf	setMotores@dutyI+1,c
  2241  0005BE  0E44               	movlw	68
  2242  0005C0  6E3D               	movwf	setMotores@dutyI,c
  2243  0005C2  0E02               	movlw	2
  2244  0005C4  6E40               	movwf	setMotores@dutyD+1,c
  2245  0005C6  0EBC               	movlw	188
  2246  0005C8  6E3F               	movwf	setMotores@dutyD,c
  2247  0005CA  EC8E  F003         	call	_setMotores	;wreg free
  2248                           
  2249                           ;main.c: 221: direccion = IZQ;
  2250  0005CE  0E00               	movlw	0
  2251  0005D0  0101               	movlb	1	; () banked
  2252  0005D2  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2253  0005D4  0E08               	movlw	8
  2254  0005D6  6FB0               	movwf	loop@direccion& (0+255),b
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;main.c: 222: estado = ANALISIS;
  2258  0005D8  0E00               	movlw	0
  2259  0005DA  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2260  0005DC  0E03               	movlw	3
  2261  0005DE  6FAE               	movwf	loop@estado& (0+255),b
  2262                           
  2263                           ;main.c: 223: break;
  2264  0005E0  0012               	return	
  2265  0005E2                     
  2266                           ;main.c: 226: setMotores(700, -700);
  2267                           
  2268                           ; BSR set to: 1
  2269  0005E2  0E02               	movlw	2
  2270  0005E4  6E3E               	movwf	setMotores@dutyI+1,c
  2271  0005E6  0EBC               	movlw	188
  2272  0005E8  6E3D               	movwf	setMotores@dutyI,c
  2273  0005EA  0EFD               	movlw	253
  2274  0005EC  6E40               	movwf	setMotores@dutyD+1,c
  2275  0005EE  0E44               	movlw	68
  2276  0005F0  6E3F               	movwf	setMotores@dutyD,c
  2277  0005F2  EC8E  F003         	call	_setMotores	;wreg free
  2278                           
  2279                           ;main.c: 227: direccion = DER;
  2280  0005F6  0E00               	movlw	0
  2281  0005F8  0101               	movlb	1	; () banked
  2282  0005FA  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2283  0005FC  0E05               	movlw	5
  2284  0005FE  6FB0               	movwf	loop@direccion& (0+255),b
  2285                           
  2286                           ; BSR set to: 1
  2287                           ;main.c: 228: estado = ANALISIS;
  2288  000600  0E00               	movlw	0
  2289  000602  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2290  000604  0E03               	movlw	3
  2291  000606  6FAE               	movwf	loop@estado& (0+255),b
  2292                           
  2293                           ;main.c: 229: break;
  2294  000608  0012               	return	
  2295  00060A                     
  2296                           ;main.c: 232: LATBbits.LB2 = !PORTAbits.RA0;
  2297                           
  2298                           ; BSR set to: 1
  2299  00060A  B080               	btfsc	3968,0,c	;volatile
  2300  00060C  D004               	goto	u6630
  2301  00060E  0100               	movlb	0	; () banked
  2302  000610  6B60               	clrf	??_loop& (0+255),b
  2303  000612  2B60               	incf	??_loop& (0+255),f,b
  2304  000614  D002               	goto	u6648
  2305  000616                     u6630:
  2306  000616  0100               	movlb	0	; () banked
  2307  000618  6B60               	clrf	??_loop& (0+255),b
  2308  00061A                     u6648:
  2309  00061A  4760               	rlncf	??_loop& (0+255),f,b
  2310  00061C  4760               	rlncf	??_loop& (0+255),f,b
  2311  00061E  508A               	movf	3978,w,c	;volatile
  2312  000620  1960               	xorwf	??_loop& (0+255),w,b
  2313  000622  0BFB               	andlw	-5
  2314  000624  1960               	xorwf	??_loop& (0+255),w,b
  2315  000626  6E8A               	movwf	3978,c	;volatile
  2316                           
  2317                           ;main.c: 233: LATBbits.LB4 = !PORTAbits.RA1;
  2318  000628  B280               	btfsc	3968,1,c	;volatile
  2319  00062A  D003               	goto	u6650
  2320  00062C  6B60               	clrf	??_loop& (0+255),b
  2321  00062E  2B60               	incf	??_loop& (0+255),f,b
  2322  000630  D002               	goto	u6668
  2323  000632                     u6650:
  2324  000632  0100               	movlb	0	; () banked
  2325  000634  6B60               	clrf	??_loop& (0+255),b
  2326  000636                     u6668:
  2327  000636  3B60               	swapf	??_loop& (0+255),f,b
  2328  000638  508A               	movf	3978,w,c	;volatile
  2329  00063A  1960               	xorwf	??_loop& (0+255),w,b
  2330  00063C  0BEF               	andlw	-17
  2331  00063E  1960               	xorwf	??_loop& (0+255),w,b
  2332  000640  6E8A               	movwf	3978,c	;volatile
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 234: LATBbits.LB3 = 1;
  2336  000642  868A               	bsf	3978,3,c	;volatile
  2337                           
  2338                           ; BSR set to: 1
  2339                           
  2340                           ; BSR set to: 1
  2341                           
  2342                           ; BSR set to: 1
  2343                           
  2344                           ; BSR set to: 1
  2345                           
  2346                           ; BSR set to: 1
  2347                           
  2348                           ; BSR set to: 1
  2349                           
  2350                           ; BSR set to: 1
  2351                           
  2352                           ; BSR set to: 1
  2353                           
  2354                           ; BSR set to: 1
  2355                           
  2356                           ; BSR set to: 0
  2357                           
  2358                           ;main.c: 235: if((1 == 1 ? !PORTBbits.RB0 : (1 == 2 ? !PORTBbits.RB1 : (1 == 0 ? !PORTAb
      +                          its.RA5 : 0))) || (2 == 1 ? !PORTBbits.RB0 : (2 == 2 ? !PORTBbits.RB1 : (2 == 0 ? !PORTA
      +                          bits.RA5 : 0)))){
  2359  000644  B081               	btfsc	3969,0,c	;volatile
  2360  000646  D002               	goto	u6710
  2361  000648  0E01               	movlw	1
  2362  00064A  D001               	goto	u6720
  2363  00064C                     u6710:
  2364  00064C  0E00               	movlw	0
  2365  00064E                     u6720:
  2366  00064E  0101               	movlb	1	; () banked
  2367  000650  6F90               	movwf	_loop$859& (0+255),b
  2368  000652  6B91               	clrf	(_loop$859+1)& (0+255),b
  2369                           
  2370                           ; BSR set to: 1
  2371                           
  2372                           ; BSR set to: 1
  2373  000654  5190               	movf	_loop$859& (0+255),w,b
  2374  000656  1191               	iorwf	(_loop$859+1)& (0+255),w,b
  2375  000658  A4D8               	btfss	status,2,c
  2376  00065A  D00F               	goto	l422
  2377                           
  2378                           ; BSR set to: 1
  2379                           
  2380                           ; BSR set to: 1
  2381                           
  2382                           ; BSR set to: 1
  2383                           
  2384                           ; BSR set to: 1
  2385                           
  2386                           ; BSR set to: 1
  2387                           
  2388                           ; BSR set to: 1
  2389                           
  2390                           ; BSR set to: 1
  2391                           
  2392                           ; BSR set to: 1
  2393  00065C  B281               	btfsc	3969,1,c	;volatile
  2394  00065E  D002               	goto	u6760
  2395  000660  0E01               	movlw	1
  2396  000662  D001               	goto	u6770
  2397  000664                     u6760:
  2398  000664  0E00               	movlw	0
  2399  000666                     u6770:
  2400  000666  6F98               	movwf	_loop$863& (0+255),b
  2401  000668  6B99               	clrf	(_loop$863+1)& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           
  2405                           ; BSR set to: 1
  2406  00066A  C198  F196         	movff	_loop$863,_loop$862
  2407  00066E  C199  F197         	movff	_loop$863+1,_loop$862+1
  2408                           
  2409                           ; BSR set to: 1
  2410                           
  2411                           ; BSR set to: 1
  2412                           
  2413                           ; BSR set to: 1
  2414                           
  2415                           ; BSR set to: 1
  2416  000672  5196               	movf	_loop$862& (0+255),w,b
  2417  000674  1197               	iorwf	(_loop$862+1)& (0+255),w,b
  2418  000676  B4D8               	btfsc	status,2,c
  2419  000678  0012               	return	
  2420  00067A                     l422:
  2421                           
  2422                           ; BSR set to: 1
  2423                           
  2424                           ; BSR set to: 1
  2425  00067A  B081               	btfsc	3969,0,c	;volatile
  2426  00067C  D002               	goto	u6850
  2427  00067E  0E01               	movlw	1
  2428  000680  D001               	goto	u6860
  2429  000682                     u6850:
  2430  000682  0E00               	movlw	0
  2431  000684                     u6860:
  2432  000684  6F9C               	movwf	_loop$865& (0+255),b
  2433  000686  6B9D               	clrf	(_loop$865+1)& (0+255),b
  2434                           
  2435                           ; BSR set to: 1
  2436                           
  2437                           ; BSR set to: 1
  2438  000688  519C               	movf	_loop$865& (0+255),w,b
  2439  00068A  119D               	iorwf	(_loop$865+1)& (0+255),w,b
  2440  00068C  A4D8               	btfss	status,2,c
  2441  00068E  D7F5               	goto	l422
  2442                           
  2443                           ; BSR set to: 1
  2444                           
  2445                           ; BSR set to: 1
  2446                           
  2447                           ; BSR set to: 1
  2448                           
  2449                           ; BSR set to: 1
  2450                           
  2451                           ; BSR set to: 1
  2452                           
  2453                           ; BSR set to: 1
  2454                           
  2455                           ; BSR set to: 1
  2456                           
  2457                           ; BSR set to: 1
  2458  000690  B281               	btfsc	3969,1,c	;volatile
  2459  000692  D002               	goto	u6900
  2460  000694  0E01               	movlw	1
  2461  000696  D001               	goto	u6910
  2462  000698                     u6900:
  2463  000698  0E00               	movlw	0
  2464  00069A                     u6910:
  2465  00069A  6FA4               	movwf	_loop$869& (0+255),b
  2466  00069C  6BA5               	clrf	(_loop$869+1)& (0+255),b
  2467                           
  2468                           ; BSR set to: 1
  2469                           
  2470                           ; BSR set to: 1
  2471  00069E  C1A4  F1A2         	movff	_loop$869,_loop$868
  2472  0006A2  C1A5  F1A3         	movff	_loop$869+1,_loop$868+1
  2473                           
  2474                           ; BSR set to: 1
  2475                           
  2476                           ; BSR set to: 1
  2477                           
  2478                           ; BSR set to: 1
  2479                           
  2480                           ; BSR set to: 1
  2481  0006A6  51A2               	movf	_loop$868& (0+255),w,b
  2482  0006A8  11A3               	iorwf	(_loop$868+1)& (0+255),w,b
  2483  0006AA  A4D8               	btfss	status,2,c
  2484  0006AC  D7E6               	goto	l422
  2485                           
  2486                           ; BSR set to: 1
  2487                           ;main.c: 237: estado = 0;
  2488                           
  2489                           ; BSR set to: 1
  2490  0006AE  0E00               	movlw	0
  2491  0006B0  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2492  0006B2  0E00               	movlw	0
  2493  0006B4  6FAE               	movwf	loop@estado& (0+255),b
  2494                           
  2495                           ; BSR set to: 1
  2496                           ;main.c: 240: }
  2497                           
  2498                           ; BSR set to: 1
  2499                           ;main.c: 238: }
  2500                           ;main.c: 239: break;
  2501  0006B6  0012               	return	
  2502  0006B8                     l62:
  2503                           
  2504                           ; BSR set to: 1
  2505  0006B8  C1AE  F060         	movff	loop@estado,??_loop
  2506  0006BC  C1AF  F061         	movff	loop@estado+1,??_loop+1
  2507                           
  2508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2509                           ; Switch size 1, requested type "space"
  2510                           ; Number of cases is 1, Range of values is 0 to 0
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte            4     3 (average)
  2514                           ;	Chosen strategy is simple_byte
  2515  0006C0  0100               	movlb	0	; () banked
  2516  0006C2  5161               	movf	(??_loop+1)& (0+255),w,b
  2517  0006C4  0A00               	xorlw	0	; case 0
  2518  0006C6  A4D8               	btfss	status,2,c
  2519  0006C8  0012               	return	
  2520                           
  2521                           ; BSR set to: 0
  2522                           ; Switch size 1, requested type "space"
  2523                           ; Number of cases is 13, Range of values is 0 to 12
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte           40    21 (average)
  2527                           ;	Chosen strategy is simple_byte
  2528  0006CA  5160               	movf	??_loop& (0+255),w,b
  2529  0006CC  0A00               	xorlw	0	; case 0
  2530  0006CE  B4D8               	btfsc	status,2,c
  2531  0006D0  D4A1               	goto	l74
  2532  0006D2  0A01               	xorlw	1	; case 1
  2533  0006D4  B4D8               	btfsc	status,2,c
  2534  0006D6  D559               	goto	l169
  2535  0006D8  0A03               	xorlw	3	; case 2
  2536  0006DA  B4D8               	btfsc	status,2,c
  2537  0006DC  D57D               	goto	l172
  2538  0006DE  0A01               	xorlw	1	; case 3
  2539  0006E0  B4D8               	btfsc	status,2,c
  2540  0006E2  D5DD               	goto	l179
  2541  0006E4  0A07               	xorlw	7	; case 4
  2542  0006E6  B4D8               	btfsc	status,2,c
  2543  0006E8  D6D7               	goto	l382
  2544  0006EA  0A01               	xorlw	1	; case 5
  2545  0006EC  B4D8               	btfsc	status,2,c
  2546  0006EE  D779               	goto	l390
  2547  0006F0  0A03               	xorlw	3	; case 6
  2548  0006F2  B4D8               	btfsc	status,2,c
  2549  0006F4  D74E               	goto	l388
  2550  0006F6  0A01               	xorlw	1	; case 7
  2551  0006F8  B4D8               	btfsc	status,2,c
  2552  0006FA  D6DE               	goto	l383
  2553  0006FC  0A0F               	xorlw	15	; case 8
  2554  0006FE  B4D8               	btfsc	status,2,c
  2555  000700  D75C               	goto	l389
  2556  000702  0A01               	xorlw	1	; case 9
  2557  000704  B4D8               	btfsc	status,2,c
  2558  000706  D731               	goto	l387
  2559  000708  0A03               	xorlw	3	; case 10
  2560  00070A  B4D8               	btfsc	status,2,c
  2561  00070C  D6E9               	goto	l384
  2562  00070E  0A01               	xorlw	1	; case 11
  2563  000710  B4D8               	btfsc	status,2,c
  2564  000712  D6FA               	goto	l385
  2565  000714  0A07               	xorlw	7	; case 12
  2566  000716  A4D8               	btfss	status,2,c
  2567  000718  0012               	return	
  2568  00071A  D777               	goto	l391
  2569  00071C                     __end_of_loop:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           status	equ	0xFD8
  2576                           
  2577 ;; *************** function _millis *****************
  2578 ;; Defined at:
  2579 ;;		line 263 in file "main.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;		None
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  4   18[COMRAM] unsigned long 
  2586 ;; Registers used:
  2587 ;;		None
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2593 ;;      Params:         4       0       0       0       0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2596 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2597 ;;Total ram usage:        4 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_loop
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text2
  2608  000DBE                     __ptext2:
  2609                           	opt stack 0
  2610  000DBE                     _millis:
  2611                           	opt stack 28
  2612                           
  2613                           ;incstack = 0
  2614  000DBE  C047  F013         	movff	_millisCounter,?_millis
  2615  000DC2  C048  F014         	movff	_millisCounter+1,?_millis+1
  2616  000DC6  C049  F015         	movff	_millisCounter+2,?_millis+2
  2617  000DCA  C04A  F016         	movff	_millisCounter+3,?_millis+3
  2618  000DCE  0012               	return		;funcret
  2619  000DD0                     __end_of_millis:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           tblptrh	equ	0xFF7
  2623                           tblptrl	equ	0xFF6
  2624                           tablat	equ	0xFF5
  2625                           status	equ	0xFD8
  2626                           
  2627 ;; *************** function _init *****************
  2628 ;; Defined at:
  2629 ;;		line 10 in file "main.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2643 ;;      Params:         0       0       0       0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    4
  2650 ;; This function calls:
  2651 ;;		_setMotores
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text3
  2658  000C2E                     __ptext3:
  2659                           	opt stack 0
  2660  000C2E                     _init:
  2661                           	opt stack 26
  2662                           
  2663                           ;main.c: 12: ADCON1bits.PCFG = 0b1111;
  2664                           
  2665                           ;incstack = 0
  2666  000C2E  80C1               	bsf	4033,0,c	;volatile
  2667  000C30  82C1               	bsf	4033,1,c	;volatile
  2668  000C32  84C1               	bsf	4033,2,c	;volatile
  2669  000C34  86C1               	bsf	4033,3,c	;volatile
  2670                           
  2671                           ;main.c: 15: TRISBbits.RB0 = INPUT;
  2672  000C36  8093               	bsf	3987,0,c	;volatile
  2673                           
  2674                           ;main.c: 16: TRISBbits.RB1 = INPUT;
  2675  000C38  8293               	bsf	3987,1,c	;volatile
  2676                           
  2677                           ;main.c: 17: TRISBbits.RB2 = OUTPUT;
  2678  000C3A  9493               	bcf	3987,2,c	;volatile
  2679                           
  2680                           ;main.c: 18: TRISBbits.RB3 = OUTPUT;
  2681  000C3C  9693               	bcf	3987,3,c	;volatile
  2682                           
  2683                           ;main.c: 19: TRISBbits.RB4 = OUTPUT;
  2684  000C3E  9893               	bcf	3987,4,c	;volatile
  2685                           
  2686                           ;main.c: 20: TRISAbits.RA4 = INPUT;
  2687  000C40  8892               	bsf	3986,4,c	;volatile
  2688                           
  2689                           ;main.c: 21: TRISAbits.RA3 = INPUT;
  2690  000C42  8692               	bsf	3986,3,c	;volatile
  2691                           
  2692                           ;main.c: 22: TRISAbits.RA2 = INPUT;
  2693  000C44  8492               	bsf	3986,2,c	;volatile
  2694                           
  2695                           ;main.c: 23: TRISBbits.RB5 = INPUT;
  2696  000C46  8A93               	bsf	3987,5,c	;volatile
  2697                           
  2698                           ;main.c: 24: TRISCbits.RC7 = INPUT;
  2699  000C48  8E94               	bsf	3988,7,c	;volatile
  2700                           
  2701                           ;main.c: 25: TRISAbits.RA0 = INPUT;
  2702  000C4A  8092               	bsf	3986,0,c	;volatile
  2703                           
  2704                           ;main.c: 26: TRISAbits.RA1 = INPUT;
  2705  000C4C  8292               	bsf	3986,1,c	;volatile
  2706                           
  2707                           ;main.c: 27: TRISCbits.RC2 = OUTPUT;
  2708  000C4E  9494               	bcf	3988,2,c	;volatile
  2709                           
  2710                           ;main.c: 28: TRISCbits.RC1 = OUTPUT;
  2711  000C50  9294               	bcf	3988,1,c	;volatile
  2712                           
  2713                           ;main.c: 29: TRISCbits.RC6 = OUTPUT;
  2714  000C52  9C94               	bcf	3988,6,c	;volatile
  2715                           
  2716                           ;main.c: 30: TRISCbits.RC0 = OUTPUT;
  2717  000C54  9094               	bcf	3988,0,c	;volatile
  2718                           
  2719                           ;main.c: 33: T2CON = 0;
  2720  000C56  0E00               	movlw	0
  2721  000C58  6ECA               	movwf	4042,c	;volatile
  2722                           
  2723                           ;main.c: 34: T2CONbits.TOUTPS=11;
  2724  000C5A  50CA               	movf	4042,w,c	;volatile
  2725  000C5C  0B87               	andlw	-121
  2726  000C5E  0958               	iorlw	88
  2727  000C60  6ECA               	movwf	4042,c	;volatile
  2728                           
  2729                           ;main.c: 35: T2CONbits.T2CKPS=1;
  2730  000C62  50CA               	movf	4042,w,c	;volatile
  2731  000C64  0BFC               	andlw	-4
  2732  000C66  0901               	iorlw	1
  2733  000C68  6ECA               	movwf	4042,c	;volatile
  2734                           
  2735                           ;main.c: 36: PR2=249;
  2736  000C6A  0EF9               	movlw	249
  2737  000C6C  6ECB               	movwf	4043,c	;volatile
  2738                           
  2739                           ;main.c: 37: T2CONbits.TMR2ON=1;
  2740  000C6E  84CA               	bsf	4042,2,c	;volatile
  2741                           
  2742                           ;main.c: 40: CCPR1L=0;
  2743  000C70  0E00               	movlw	0
  2744  000C72  6EBE               	movwf	4030,c	;volatile
  2745                           
  2746                           ;main.c: 41: CCP1CONbits.DC1B=0;
  2747  000C74  0ECF               	movlw	-49
  2748  000C76  16BD               	andwf	4029,f,c	;volatile
  2749                           
  2750                           ;main.c: 42: CCP1CONbits.CCP1M=12;
  2751  000C78  50BD               	movf	4029,w,c	;volatile
  2752  000C7A  0BF0               	andlw	-16
  2753  000C7C  090C               	iorlw	12
  2754  000C7E  6EBD               	movwf	4029,c	;volatile
  2755                           
  2756                           ;main.c: 43: CCPR2L=0;
  2757  000C80  0E00               	movlw	0
  2758  000C82  6EBB               	movwf	4027,c	;volatile
  2759                           
  2760                           ;main.c: 44: CCP2CONbits.DC2B=0;
  2761  000C84  0ECF               	movlw	-49
  2762  000C86  16BA               	andwf	4026,f,c	;volatile
  2763                           
  2764                           ;main.c: 45: CCP2CONbits.CCP2M=12;
  2765  000C88  50BA               	movf	4026,w,c	;volatile
  2766  000C8A  0BF0               	andlw	-16
  2767  000C8C  090C               	iorlw	12
  2768  000C8E  6EBA               	movwf	4026,c	;volatile
  2769                           
  2770                           ;main.c: 48: INTCON3=0;
  2771  000C90  0E00               	movlw	0
  2772  000C92  6EF0               	movwf	intcon3,c	;volatile
  2773                           
  2774                           ;main.c: 49: PIE1=0;
  2775  000C94  0E00               	movlw	0
  2776  000C96  6E9D               	movwf	3997,c	;volatile
  2777                           
  2778                           ;main.c: 50: PIE2=0;
  2779  000C98  0E00               	movlw	0
  2780  000C9A  6EA0               	movwf	4000,c	;volatile
  2781                           
  2782                           ;main.c: 51: RCONbits.IPEN=0;
  2783  000C9C  9ED0               	bcf	4048,7,c	;volatile
  2784                           
  2785                           ;main.c: 52: PIE1bits.TMR2IE=1;
  2786  000C9E  829D               	bsf	3997,1,c	;volatile
  2787                           
  2788                           ;main.c: 53: INTCONbits.PEIE_GIEL=1;
  2789  000CA0  8CF2               	bsf	intcon,6,c	;volatile
  2790                           
  2791                           ;main.c: 54: INTCONbits.GIE_GIEH=1;
  2792  000CA2  8EF2               	bsf	intcon,7,c	;volatile
  2793                           
  2794                           ;main.c: 55: RCONbits.IPEN = 0;
  2795  000CA4  9ED0               	bcf	4048,7,c	;volatile
  2796                           
  2797                           ;main.c: 56: INTCONbits.PEIE = 1;
  2798  000CA6  8CF2               	bsf	intcon,6,c	;volatile
  2799                           
  2800                           ;main.c: 57: INTCONbits.GIE = 1;
  2801  000CA8  8EF2               	bsf	intcon,7,c	;volatile
  2802                           
  2803                           ;main.c: 60: setMotores(0, 0);
  2804  000CAA  0E00               	movlw	0
  2805  000CAC  6E3E               	movwf	setMotores@dutyI+1,c
  2806  000CAE  0E00               	movlw	0
  2807  000CB0  6E3D               	movwf	setMotores@dutyI,c
  2808  000CB2  0E00               	movlw	0
  2809  000CB4  6E40               	movwf	setMotores@dutyD+1,c
  2810  000CB6  0E00               	movlw	0
  2811  000CB8  6E3F               	movwf	setMotores@dutyD,c
  2812  000CBA  EC8E  F003         	call	_setMotores	;wreg free
  2813                           
  2814                           ;main.c: 61: LATBbits.LB2 = 0;
  2815  000CBE  948A               	bcf	3978,2,c	;volatile
  2816                           
  2817                           ;main.c: 62: LATBbits.LB3 = 0;
  2818  000CC0  968A               	bcf	3978,3,c	;volatile
  2819                           
  2820                           ;main.c: 63: LATBbits.LB4 = 0;
  2821  000CC2  988A               	bcf	3978,4,c	;volatile
  2822  000CC4  0012               	return		;funcret
  2823  000CC6                     __end_of_init:
  2824                           	opt stack 0
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           intcon	equ	0xFF2
  2830                           intcon3	equ	0xFF0
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _setMotores *****************
  2834 ;; Defined at:
  2835 ;;		line 243 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;  dutyI           2   60[COMRAM] int 
  2838 ;;  dutyD           2   62[COMRAM] int 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2850 ;;      Params:         4       0       0       0       0       0       0       0       0
  2851 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2852 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2853 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2854 ;;Total ram usage:       10 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    3
  2857 ;; This function calls:
  2858 ;;		___awdiv
  2859 ;;		___awtoft
  2860 ;;		___ftmul
  2861 ;;		___fttol
  2862 ;; This function is called by:
  2863 ;;		_init
  2864 ;;		_loop
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text4
  2869  00071C                     __ptext4:
  2870                           	opt stack 0
  2871  00071C                     _setMotores:
  2872                           	opt stack 26
  2873                           
  2874                           ;main.c: 244: dutyI = (dutyI > 1000 ? 1000 : (dutyI < -1000 ? -1000 : dutyI));
  2875                           
  2876                           ;incstack = 0
  2877  00071C  BE3E               	btfsc	setMotores@dutyI+1,7,c
  2878  00071E  D006               	goto	u2750
  2879  000720  0EE9               	movlw	233
  2880  000722  5C3D               	subwf	setMotores@dutyI,w,c
  2881  000724  0E03               	movlw	3
  2882  000726  583E               	subwfb	setMotores@dutyI+1,w,c
  2883  000728  B0D8               	btfsc	status,0,c
  2884  00072A  D016               	goto	l450
  2885  00072C                     u2750:
  2886  00072C  AE3E               	btfss	setMotores@dutyI+1,7,c
  2887  00072E  D006               	goto	u2760
  2888  000730  0E18               	movlw	24
  2889  000732  5C3D               	subwf	setMotores@dutyI,w,c
  2890  000734  0EFC               	movlw	252
  2891  000736  583E               	subwfb	setMotores@dutyI+1,w,c
  2892  000738  A0D8               	btfss	status,0,c
  2893  00073A  D005               	goto	l454
  2894  00073C                     u2760:
  2895  00073C  C03D  F043         	movff	setMotores@dutyI,_setMotores$874
  2896  000740  C03E  F044         	movff	setMotores@dutyI+1,_setMotores$874+1
  2897  000744  D004               	goto	l456
  2898  000746                     l454:
  2899  000746  0EFC               	movlw	252
  2900  000748  6E44               	movwf	_setMotores$874+1,c
  2901  00074A  0E18               	movlw	24
  2902  00074C  6E43               	movwf	_setMotores$874,c
  2903  00074E                     l456:
  2904  00074E  C043  F03D         	movff	_setMotores$874,setMotores@dutyI
  2905  000752  C044  F03E         	movff	_setMotores$874+1,setMotores@dutyI+1
  2906  000756  D004               	goto	l452
  2907  000758                     l450:
  2908  000758  0E03               	movlw	3
  2909  00075A  6E3E               	movwf	setMotores@dutyI+1,c
  2910  00075C  0EE8               	movlw	232
  2911  00075E  6E3D               	movwf	setMotores@dutyI,c
  2912  000760                     l452:
  2913                           
  2914                           ;main.c: 245: dutyD = (dutyD > 1000 ? 1000 : (dutyD < -1000 ? -1000 : dutyD));
  2915  000760  BE40               	btfsc	setMotores@dutyD+1,7,c
  2916  000762  D006               	goto	u2770
  2917  000764  0EE9               	movlw	233
  2918  000766  5C3F               	subwf	setMotores@dutyD,w,c
  2919  000768  0E03               	movlw	3
  2920  00076A  5840               	subwfb	setMotores@dutyD+1,w,c
  2921  00076C  B0D8               	btfsc	status,0,c
  2922  00076E  D016               	goto	l458
  2923  000770                     u2770:
  2924  000770  AE40               	btfss	setMotores@dutyD+1,7,c
  2925  000772  D006               	goto	u2780
  2926  000774  0E18               	movlw	24
  2927  000776  5C3F               	subwf	setMotores@dutyD,w,c
  2928  000778  0EFC               	movlw	252
  2929  00077A  5840               	subwfb	setMotores@dutyD+1,w,c
  2930  00077C  A0D8               	btfss	status,0,c
  2931  00077E  D005               	goto	l462
  2932  000780                     u2780:
  2933  000780  C03F  F045         	movff	setMotores@dutyD,_setMotores$875
  2934  000784  C040  F046         	movff	setMotores@dutyD+1,_setMotores$875+1
  2935  000788  D004               	goto	l464
  2936  00078A                     l462:
  2937  00078A  0EFC               	movlw	252
  2938  00078C  6E46               	movwf	_setMotores$875+1,c
  2939  00078E  0E18               	movlw	24
  2940  000790  6E45               	movwf	_setMotores$875,c
  2941  000792                     l464:
  2942  000792  C045  F03F         	movff	_setMotores$875,setMotores@dutyD
  2943  000796  C046  F040         	movff	_setMotores$875+1,setMotores@dutyD+1
  2944  00079A  D004               	goto	l460
  2945  00079C                     l458:
  2946  00079C  0E03               	movlw	3
  2947  00079E  6E40               	movwf	setMotores@dutyD+1,c
  2948  0007A0  0EE8               	movlw	232
  2949  0007A2  6E3F               	movwf	setMotores@dutyD,c
  2950  0007A4                     l460:
  2951                           
  2952                           ;main.c: 247: LATCbits.LC0 = dutyI < 0;
  2953  0007A4  AE3E               	btfss	setMotores@dutyI+1,7,c
  2954  0007A6  D003               	goto	u2790
  2955  0007A8  6A41               	clrf	??_setMotores& (0+255),c
  2956  0007AA  2A41               	incf	??_setMotores& (0+255),f,c
  2957  0007AC  D001               	goto	u2808
  2958  0007AE                     u2790:
  2959  0007AE  6A41               	clrf	??_setMotores& (0+255),c
  2960  0007B0                     u2808:
  2961  0007B0  508B               	movf	3979,w,c	;volatile
  2962  0007B2  1841               	xorwf	??_setMotores,w,c
  2963  0007B4  0BFE               	andlw	-2
  2964  0007B6  1841               	xorwf	??_setMotores,w,c
  2965  0007B8  6E8B               	movwf	3979,c	;volatile
  2966                           
  2967                           ;main.c: 248: LATCbits.LC6 = dutyD < 0;
  2968  0007BA  AE40               	btfss	setMotores@dutyD+1,7,c
  2969  0007BC  D003               	goto	u2810
  2970  0007BE  6A41               	clrf	??_setMotores& (0+255),c
  2971  0007C0  2A41               	incf	??_setMotores& (0+255),f,c
  2972  0007C2  D001               	goto	u2828
  2973  0007C4                     u2810:
  2974  0007C4  6A41               	clrf	??_setMotores& (0+255),c
  2975  0007C6                     u2828:
  2976  0007C6  3A41               	swapf	??_setMotores,f,c
  2977  0007C8  4641               	rlncf	??_setMotores,f,c
  2978  0007CA  4641               	rlncf	??_setMotores,f,c
  2979  0007CC  508B               	movf	3979,w,c	;volatile
  2980  0007CE  1841               	xorwf	??_setMotores,w,c
  2981  0007D0  0BBF               	andlw	-65
  2982  0007D2  1841               	xorwf	??_setMotores,w,c
  2983  0007D4  6E8B               	movwf	3979,c	;volatile
  2984                           
  2985                           ;main.c: 250: dutyI = (dutyI < 0 ? 1000-dutyI : dutyI);
  2986  0007D6  AE3E               	btfss	setMotores@dutyI+1,7,c
  2987  0007D8  D00E               	goto	l468
  2988  0007DA  C03D  F041         	movff	setMotores@dutyI,??_setMotores
  2989  0007DE  C03E  F042         	movff	setMotores@dutyI+1,??_setMotores+1
  2990  0007E2  1E41               	comf	??_setMotores,f,c
  2991  0007E4  1E42               	comf	??_setMotores+1,f,c
  2992  0007E6  4A41               	infsnz	??_setMotores,f,c
  2993  0007E8  2A42               	incf	??_setMotores+1,f,c
  2994  0007EA  0EE8               	movlw	232
  2995  0007EC  2441               	addwf	??_setMotores,w,c
  2996  0007EE  6E3D               	movwf	setMotores@dutyI,c
  2997  0007F0  0E03               	movlw	3
  2998  0007F2  2042               	addwfc	??_setMotores+1,w,c
  2999  0007F4  6E3E               	movwf	setMotores@dutyI+1,c
  3000  0007F6                     l468:
  3001                           
  3002                           ;main.c: 251: dutyD = (dutyD < 0 ? 1000-dutyD : dutyD);
  3003  0007F6  AE40               	btfss	setMotores@dutyD+1,7,c
  3004  0007F8  D00E               	goto	l472
  3005  0007FA  C03F  F041         	movff	setMotores@dutyD,??_setMotores
  3006  0007FE  C040  F042         	movff	setMotores@dutyD+1,??_setMotores+1
  3007  000802  1E41               	comf	??_setMotores,f,c
  3008  000804  1E42               	comf	??_setMotores+1,f,c
  3009  000806  4A41               	infsnz	??_setMotores,f,c
  3010  000808  2A42               	incf	??_setMotores+1,f,c
  3011  00080A  0EE8               	movlw	232
  3012  00080C  2441               	addwf	??_setMotores,w,c
  3013  00080E  6E3F               	movwf	setMotores@dutyD,c
  3014  000810  0E03               	movlw	3
  3015  000812  2042               	addwfc	??_setMotores+1,w,c
  3016  000814  6E40               	movwf	setMotores@dutyD+1,c
  3017  000816                     l472:
  3018                           
  3019                           ;main.c: 253: dutyI *= 1.023;
  3020  000816  0EF2               	movlw	242
  3021  000818  6E22               	movwf	___ftmul@f2,c
  3022  00081A  0E82               	movlw	130
  3023  00081C  6E23               	movwf	___ftmul@f2+1,c
  3024  00081E  0E3F               	movlw	63
  3025  000820  6E24               	movwf	___ftmul@f2+2,c
  3026  000822  C03D  F01B         	movff	setMotores@dutyI,___awtoft@c
  3027  000826  C03E  F01C         	movff	setMotores@dutyI+1,___awtoft@c+1
  3028  00082A  ECC3  F006         	call	___awtoft	;wreg free
  3029  00082E  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3030  000832  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3031  000836  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3032  00083A  ECF2  F004         	call	___ftmul	;wreg free
  3033  00083E  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3034  000842  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3035  000846  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3036  00084A  EC78  F004         	call	___fttol	;wreg free
  3037  00084E  C02E  F03D         	movff	?___fttol,setMotores@dutyI
  3038  000852  C02F  F03E         	movff	?___fttol+1,setMotores@dutyI+1
  3039                           
  3040                           ;main.c: 254: dutyD *= 1.023;
  3041  000856  0EF2               	movlw	242
  3042  000858  6E22               	movwf	___ftmul@f2,c
  3043  00085A  0E82               	movlw	130
  3044  00085C  6E23               	movwf	___ftmul@f2+1,c
  3045  00085E  0E3F               	movlw	63
  3046  000860  6E24               	movwf	___ftmul@f2+2,c
  3047  000862  C03F  F01B         	movff	setMotores@dutyD,___awtoft@c
  3048  000866  C040  F01C         	movff	setMotores@dutyD+1,___awtoft@c+1
  3049  00086A  ECC3  F006         	call	___awtoft	;wreg free
  3050  00086E  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3051  000872  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3052  000876  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3053  00087A  ECF2  F004         	call	___ftmul	;wreg free
  3054  00087E  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3055  000882  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3056  000886  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3057  00088A  EC78  F004         	call	___fttol	;wreg free
  3058  00088E  C02E  F03F         	movff	?___fttol,setMotores@dutyD
  3059  000892  C02F  F040         	movff	?___fttol+1,setMotores@dutyD+1
  3060                           
  3061                           ;main.c: 256: CCPR1L = dutyD / 4;
  3062  000896  C03F  F013         	movff	setMotores@dutyD,___awdiv@dividend
  3063  00089A  C040  F014         	movff	setMotores@dutyD+1,___awdiv@dividend+1
  3064  00089E  0E00               	movlw	0
  3065  0008A0  6E16               	movwf	___awdiv@divisor+1,c
  3066  0008A2  0E04               	movlw	4
  3067  0008A4  6E15               	movwf	___awdiv@divisor,c
  3068  0008A6  EC63  F006         	call	___awdiv	;wreg free
  3069  0008AA  5013               	movf	?___awdiv,w,c
  3070  0008AC  6EBE               	movwf	4030,c	;volatile
  3071                           
  3072                           ;main.c: 257: CCPR2L = dutyI / 4;
  3073  0008AE  C03D  F013         	movff	setMotores@dutyI,___awdiv@dividend
  3074  0008B2  C03E  F014         	movff	setMotores@dutyI+1,___awdiv@dividend+1
  3075  0008B6  0E00               	movlw	0
  3076  0008B8  6E16               	movwf	___awdiv@divisor+1,c
  3077  0008BA  0E04               	movlw	4
  3078  0008BC  6E15               	movwf	___awdiv@divisor,c
  3079  0008BE  EC63  F006         	call	___awdiv	;wreg free
  3080  0008C2  5013               	movf	?___awdiv,w,c
  3081  0008C4  6EBB               	movwf	4027,c	;volatile
  3082                           
  3083                           ;main.c: 258: CCP1CONbits.DC1B = dutyD % 4;
  3084  0008C6  C03F  F041         	movff	setMotores@dutyD,??_setMotores
  3085  0008CA  0E03               	movlw	3
  3086  0008CC  1641               	andwf	??_setMotores,f,c
  3087  0008CE  3A41               	swapf	??_setMotores,f,c
  3088  0008D0  50BD               	movf	4029,w,c	;volatile
  3089  0008D2  1841               	xorwf	??_setMotores,w,c
  3090  0008D4  0BCF               	andlw	-49
  3091  0008D6  1841               	xorwf	??_setMotores,w,c
  3092  0008D8  6EBD               	movwf	4029,c	;volatile
  3093                           
  3094                           ;main.c: 259: CCP2CONbits.DC2B = dutyI % 4;
  3095  0008DA  C03D  F041         	movff	setMotores@dutyI,??_setMotores
  3096  0008DE  0E03               	movlw	3
  3097  0008E0  1641               	andwf	??_setMotores,f,c
  3098  0008E2  3A41               	swapf	??_setMotores,f,c
  3099  0008E4  50BA               	movf	4026,w,c	;volatile
  3100  0008E6  1841               	xorwf	??_setMotores,w,c
  3101  0008E8  0BCF               	andlw	-49
  3102  0008EA  1841               	xorwf	??_setMotores,w,c
  3103  0008EC  6EBA               	movwf	4026,c	;volatile
  3104  0008EE  0012               	return		;funcret
  3105  0008F0                     __end_of_setMotores:
  3106                           	opt stack 0
  3107                           tblptru	equ	0xFF8
  3108                           tblptrh	equ	0xFF7
  3109                           tblptrl	equ	0xFF6
  3110                           tablat	equ	0xFF5
  3111                           intcon	equ	0xFF2
  3112                           intcon3	equ	0xFF0
  3113                           status	equ	0xFD8
  3114                           
  3115 ;; *************** function ___fttol *****************
  3116 ;; Defined at:
  3117 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  f1              3   45[COMRAM] float 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  lval            4   55[COMRAM] unsigned long 
  3122 ;;  exp1            1   59[COMRAM] unsigned char 
  3123 ;;  sign1           1   54[COMRAM] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  4   45[COMRAM] long 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:         4       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3136 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:       15 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    1
  3140 ;; This function calls:
  3141 ;;		Nothing
  3142 ;; This function is called by:
  3143 ;;		_setMotores
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text5
  3148  0008F0                     __ptext5:
  3149                           	opt stack 0
  3150  0008F0                     ___fttol:
  3151                           	opt stack 27
  3152                           
  3153                           ;incstack = 0
  3154  0008F0  C030  F032         	movff	___fttol@f1+2,??___fttol
  3155  0008F4  6A33               	clrf	(??___fttol+1)& (0+255),c
  3156  0008F6  6A34               	clrf	(??___fttol+2)& (0+255),c
  3157  0008F8  342F               	rlcf	___fttol@f1+1,w,c
  3158  0008FA  3632               	rlcf	??___fttol& (0+255),f,c
  3159  0008FC  E301               	bnc	u2671
  3160  0008FE  8033               	bsf	(??___fttol+1)& (0+255),0,c
  3161  000900                     u2671:
  3162  000900  5032               	movf	??___fttol,w,c
  3163  000902  6E3C               	movwf	___fttol@exp1,c
  3164  000904  503C               	movf	___fttol@exp1,w,c
  3165  000906  A4D8               	btfss	status,2,c
  3166  000908  D009               	goto	l807
  3167  00090A  0E00               	movlw	0
  3168  00090C  6E2E               	movwf	?___fttol,c
  3169  00090E  0E00               	movlw	0
  3170  000910  6E2F               	movwf	?___fttol+1,c
  3171  000912  0E00               	movlw	0
  3172  000914  6E30               	movwf	?___fttol+2,c
  3173  000916  0E00               	movlw	0
  3174  000918  6E31               	movwf	?___fttol+3,c
  3175  00091A  0012               	return	
  3176  00091C                     l807:
  3177  00091C  0E17               	movlw	23
  3178  00091E  6E32               	movwf	??___fttol& (0+255),c
  3179  000920  C02E  F033         	movff	___fttol@f1,??___fttol+1
  3180  000924  C02F  F034         	movff	___fttol@f1+1,??___fttol+2
  3181  000928  C030  F035         	movff	___fttol@f1+2,??___fttol+3
  3182  00092C  2832               	incf	??___fttol,w,c
  3183  00092E  6E36               	movwf	(??___fttol+4)& (0+255),c
  3184  000930  D004               	goto	u2690
  3185  000932                     u2695:
  3186  000932  90D8               	bcf	status,0,c
  3187  000934  3235               	rrcf	??___fttol+3,f,c
  3188  000936  3234               	rrcf	??___fttol+2,f,c
  3189  000938  3233               	rrcf	??___fttol+1,f,c
  3190  00093A                     u2690:
  3191  00093A  2E36               	decfsz	(??___fttol+4)& (0+255),f,c
  3192  00093C  D7FA               	goto	u2695
  3193  00093E  5033               	movf	??___fttol+1,w,c
  3194  000940  6E37               	movwf	___fttol@sign1,c
  3195  000942  8E2F               	bsf	___fttol@f1+1,7,c
  3196  000944  0EFF               	movlw	255
  3197  000946  162E               	andwf	___fttol@f1,f,c
  3198  000948  0EFF               	movlw	255
  3199  00094A  162F               	andwf	___fttol@f1+1,f,c
  3200  00094C  0E00               	movlw	0
  3201  00094E  1630               	andwf	___fttol@f1+2,f,c
  3202  000950  502E               	movf	___fttol@f1,w,c
  3203  000952  6E38               	movwf	___fttol@lval,c
  3204  000954  502F               	movf	___fttol@f1+1,w,c
  3205  000956  6E39               	movwf	___fttol@lval+1,c
  3206  000958  5030               	movf	___fttol@f1+2,w,c
  3207  00095A  6E3A               	movwf	___fttol@lval+2,c
  3208  00095C  6A3B               	clrf	___fttol@lval+3,c
  3209  00095E  0E8E               	movlw	142
  3210  000960  5E3C               	subwf	___fttol@exp1,f,c
  3211  000962  AE3C               	btfss	___fttol@exp1,7,c
  3212  000964  D016               	goto	l809
  3213  000966  503C               	movf	___fttol@exp1,w,c
  3214  000968  0A80               	xorlw	128
  3215  00096A  0F8F               	addlw	143
  3216  00096C  B0D8               	btfsc	status,0,c
  3217  00096E  D009               	goto	l810
  3218  000970  0E00               	movlw	0
  3219  000972  6E2E               	movwf	?___fttol,c
  3220  000974  0E00               	movlw	0
  3221  000976  6E2F               	movwf	?___fttol+1,c
  3222  000978  0E00               	movlw	0
  3223  00097A  6E30               	movwf	?___fttol+2,c
  3224  00097C  0E00               	movlw	0
  3225  00097E  6E31               	movwf	?___fttol+3,c
  3226  000980  0012               	return	
  3227  000982                     l810:
  3228  000982  90D8               	bcf	status,0,c
  3229  000984  323B               	rrcf	___fttol@lval+3,f,c
  3230  000986  323A               	rrcf	___fttol@lval+2,f,c
  3231  000988  3239               	rrcf	___fttol@lval+1,f,c
  3232  00098A  3238               	rrcf	___fttol@lval,f,c
  3233  00098C  3E3C               	incfsz	___fttol@exp1,f,c
  3234  00098E  D7F9               	goto	l810
  3235  000990  D015               	goto	u2730
  3236  000992                     l809:
  3237  000992  0E17               	movlw	23
  3238  000994  643C               	cpfsgt	___fttol@exp1,c
  3239  000996  D00F               	goto	l815
  3240  000998  0E00               	movlw	0
  3241  00099A  6E2E               	movwf	?___fttol,c
  3242  00099C  0E00               	movlw	0
  3243  00099E  6E2F               	movwf	?___fttol+1,c
  3244  0009A0  0E00               	movlw	0
  3245  0009A2  6E30               	movwf	?___fttol+2,c
  3246  0009A4  0E00               	movlw	0
  3247  0009A6  6E31               	movwf	?___fttol+3,c
  3248  0009A8  0012               	return	
  3249  0009AA  90D8               	bcf	status,0,c
  3250  0009AC  3638               	rlcf	___fttol@lval,f,c
  3251  0009AE  3639               	rlcf	___fttol@lval+1,f,c
  3252  0009B0  363A               	rlcf	___fttol@lval+2,f,c
  3253  0009B2  363B               	rlcf	___fttol@lval+3,f,c
  3254  0009B4  063C               	decf	___fttol@exp1,f,c
  3255  0009B6                     l815:
  3256  0009B6  503C               	movf	___fttol@exp1,w,c
  3257  0009B8  A4D8               	btfss	status,2,c
  3258  0009BA  D7F7               	goto	l816
  3259  0009BC                     u2730:
  3260  0009BC  5037               	movf	___fttol@sign1,w,c
  3261  0009BE  B4D8               	btfsc	status,2,c
  3262  0009C0  D008               	goto	l818
  3263  0009C2  1E3B               	comf	___fttol@lval+3,f,c
  3264  0009C4  1E3A               	comf	___fttol@lval+2,f,c
  3265  0009C6  1E39               	comf	___fttol@lval+1,f,c
  3266  0009C8  6C38               	negf	___fttol@lval,c
  3267  0009CA  0E00               	movlw	0
  3268  0009CC  2239               	addwfc	___fttol@lval+1,f,c
  3269  0009CE  223A               	addwfc	___fttol@lval+2,f,c
  3270  0009D0  223B               	addwfc	___fttol@lval+3,f,c
  3271  0009D2                     l818:
  3272  0009D2  C038  F02E         	movff	___fttol@lval,?___fttol
  3273  0009D6  C039  F02F         	movff	___fttol@lval+1,?___fttol+1
  3274  0009DA  C03A  F030         	movff	___fttol@lval+2,?___fttol+2
  3275  0009DE  C03B  F031         	movff	___fttol@lval+3,?___fttol+3
  3276  0009E2  0012               	return	
  3277  0009E4                     __end_of___fttol:
  3278                           	opt stack 0
  3279                           tblptru	equ	0xFF8
  3280                           tblptrh	equ	0xFF7
  3281                           tblptrl	equ	0xFF6
  3282                           tablat	equ	0xFF5
  3283                           intcon	equ	0xFF2
  3284                           intcon3	equ	0xFF0
  3285                           status	equ	0xFD8
  3286                           
  3287 ;; *************** function ___ftmul *****************
  3288 ;; Defined at:
  3289 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  f1              3   30[COMRAM] float 
  3292 ;;  f2              3   33[COMRAM] float 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  f3_as_produc    3   40[COMRAM] unsigned um
  3295 ;;  sign            1   44[COMRAM] unsigned char 
  3296 ;;  cntr            1   43[COMRAM] unsigned char 
  3297 ;;  exp             1   39[COMRAM] unsigned char 
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  3   30[COMRAM] float 
  3300 ;; Registers used:
  3301 ;;		wreg, status,2, status,0, cstack
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3307 ;;      Params:         6       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3310 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:       15 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    2
  3314 ;; This function calls:
  3315 ;;		___ftpack
  3316 ;; This function is called by:
  3317 ;;		_setMotores
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text6
  3322  0009E4                     __ptext6:
  3323                           	opt stack 0
  3324  0009E4                     ___ftmul:
  3325                           	opt stack 26
  3326                           
  3327                           ;incstack = 0
  3328  0009E4  C021  F025         	movff	___ftmul@f1+2,??___ftmul
  3329  0009E8  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3330  0009EA  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3331  0009EC  3420               	rlcf	___ftmul@f1+1,w,c
  3332  0009EE  3625               	rlcf	??___ftmul& (0+255),f,c
  3333  0009F0  E301               	bnc	u2541
  3334  0009F2  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3335  0009F4                     u2541:
  3336  0009F4  5025               	movf	??___ftmul,w,c
  3337  0009F6  6E28               	movwf	___ftmul@exp,c
  3338  0009F8  5028               	movf	___ftmul@exp,w,c
  3339  0009FA  A4D8               	btfss	status,2,c
  3340  0009FC  D007               	goto	l786
  3341  0009FE  0E00               	movlw	0
  3342  000A00  6E1F               	movwf	?___ftmul,c
  3343  000A02  0E00               	movlw	0
  3344  000A04  6E20               	movwf	?___ftmul+1,c
  3345  000A06  0E00               	movlw	0
  3346  000A08  6E21               	movwf	?___ftmul+2,c
  3347  000A0A  0012               	return	
  3348  000A0C                     l786:
  3349  000A0C  C024  F025         	movff	___ftmul@f2+2,??___ftmul
  3350  000A10  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3351  000A12  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3352  000A14  3423               	rlcf	___ftmul@f2+1,w,c
  3353  000A16  3625               	rlcf	??___ftmul& (0+255),f,c
  3354  000A18  E301               	bnc	u2561
  3355  000A1A  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3356  000A1C                     u2561:
  3357  000A1C  5025               	movf	??___ftmul,w,c
  3358  000A1E  6E2D               	movwf	___ftmul@sign,c
  3359  000A20  502D               	movf	___ftmul@sign,w,c
  3360  000A22  A4D8               	btfss	status,2,c
  3361  000A24  D007               	goto	l788
  3362  000A26  0E00               	movlw	0
  3363  000A28  6E1F               	movwf	?___ftmul,c
  3364  000A2A  0E00               	movlw	0
  3365  000A2C  6E20               	movwf	?___ftmul+1,c
  3366  000A2E  0E00               	movlw	0
  3367  000A30  6E21               	movwf	?___ftmul+2,c
  3368  000A32  0012               	return	
  3369  000A34                     l788:
  3370  000A34  502D               	movf	___ftmul@sign,w,c
  3371  000A36  0F7B               	addlw	123
  3372  000A38  2628               	addwf	___ftmul@exp,f,c
  3373  000A3A  C021  F02D         	movff	___ftmul@f1+2,___ftmul@sign
  3374  000A3E  5024               	movf	___ftmul@f2+2,w,c
  3375  000A40  1A2D               	xorwf	___ftmul@sign,f,c
  3376  000A42  0E80               	movlw	128
  3377  000A44  162D               	andwf	___ftmul@sign,f,c
  3378  000A46  8E20               	bsf	___ftmul@f1+1,7,c
  3379  000A48  8E23               	bsf	___ftmul@f2+1,7,c
  3380  000A4A  0EFF               	movlw	255
  3381  000A4C  1622               	andwf	___ftmul@f2,f,c
  3382  000A4E  0EFF               	movlw	255
  3383  000A50  1623               	andwf	___ftmul@f2+1,f,c
  3384  000A52  0E00               	movlw	0
  3385  000A54  1624               	andwf	___ftmul@f2+2,f,c
  3386  000A56  0E00               	movlw	0
  3387  000A58  6E29               	movwf	___ftmul@f3_as_product,c
  3388  000A5A  0E00               	movlw	0
  3389  000A5C  6E2A               	movwf	___ftmul@f3_as_product+1,c
  3390  000A5E  0E00               	movlw	0
  3391  000A60  6E2B               	movwf	___ftmul@f3_as_product+2,c
  3392  000A62  0E07               	movlw	7
  3393  000A64  6E2C               	movwf	___ftmul@cntr,c
  3394  000A66  A01F               	btfss	___ftmul@f1,0,c
  3395  000A68  D006               	goto	l790
  3396  000A6A  5022               	movf	___ftmul@f2,w,c
  3397  000A6C  2629               	addwf	___ftmul@f3_as_product,f,c
  3398  000A6E  5023               	movf	___ftmul@f2+1,w,c
  3399  000A70  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3400  000A72  5024               	movf	___ftmul@f2+2,w,c
  3401  000A74  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3402  000A76                     l790:
  3403  000A76  90D8               	bcf	status,0,c
  3404  000A78  3221               	rrcf	___ftmul@f1+2,f,c
  3405  000A7A  3220               	rrcf	___ftmul@f1+1,f,c
  3406  000A7C  321F               	rrcf	___ftmul@f1,f,c
  3407  000A7E  90D8               	bcf	status,0,c
  3408  000A80  3622               	rlcf	___ftmul@f2,f,c
  3409  000A82  3623               	rlcf	___ftmul@f2+1,f,c
  3410  000A84  3624               	rlcf	___ftmul@f2+2,f,c
  3411  000A86  2E2C               	decfsz	___ftmul@cntr,f,c
  3412  000A88  D7EE               	goto	l789
  3413  000A8A  0E09               	movlw	9
  3414  000A8C  6E2C               	movwf	___ftmul@cntr,c
  3415  000A8E  A01F               	btfss	___ftmul@f1,0,c
  3416  000A90  D006               	goto	l793
  3417  000A92  5022               	movf	___ftmul@f2,w,c
  3418  000A94  2629               	addwf	___ftmul@f3_as_product,f,c
  3419  000A96  5023               	movf	___ftmul@f2+1,w,c
  3420  000A98  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3421  000A9A  5024               	movf	___ftmul@f2+2,w,c
  3422  000A9C  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3423  000A9E                     l793:
  3424  000A9E  90D8               	bcf	status,0,c
  3425  000AA0  3221               	rrcf	___ftmul@f1+2,f,c
  3426  000AA2  3220               	rrcf	___ftmul@f1+1,f,c
  3427  000AA4  321F               	rrcf	___ftmul@f1,f,c
  3428  000AA6  90D8               	bcf	status,0,c
  3429  000AA8  322B               	rrcf	___ftmul@f3_as_product+2,f,c
  3430  000AAA  322A               	rrcf	___ftmul@f3_as_product+1,f,c
  3431  000AAC  3229               	rrcf	___ftmul@f3_as_product,f,c
  3432  000AAE  2E2C               	decfsz	___ftmul@cntr,f,c
  3433  000AB0  D7EE               	goto	l792
  3434  000AB2  C029  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3435  000AB6  C02A  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3436  000ABA  C02B  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3437  000ABE  C028  F016         	movff	___ftmul@exp,___ftpack@exp
  3438  000AC2  C02D  F017         	movff	___ftmul@sign,___ftpack@sign
  3439  000AC6  EC6C  F005         	call	___ftpack	;wreg free
  3440  000ACA  C013  F01F         	movff	?___ftpack,?___ftmul
  3441  000ACE  C014  F020         	movff	?___ftpack+1,?___ftmul+1
  3442  000AD2  C015  F021         	movff	?___ftpack+2,?___ftmul+2
  3443  000AD6  0012               	return	
  3444  000AD8                     __end_of___ftmul:
  3445                           	opt stack 0
  3446                           tblptru	equ	0xFF8
  3447                           tblptrh	equ	0xFF7
  3448                           tblptrl	equ	0xFF6
  3449                           tablat	equ	0xFF5
  3450                           intcon	equ	0xFF2
  3451                           intcon3	equ	0xFF0
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function ___awtoft *****************
  3455 ;; Defined at:
  3456 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  c               2   26[COMRAM] int 
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;  sign            1   29[COMRAM] unsigned char 
  3461 ;; Return value:  Size  Location     Type
  3462 ;;                  3   26[COMRAM] float 
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3470 ;;      Params:         3       0       0       0       0       0       0       0       0
  3471 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3473 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3474 ;;Total ram usage:        4 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    2
  3477 ;; This function calls:
  3478 ;;		___ftpack
  3479 ;; This function is called by:
  3480 ;;		_setMotores
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text7
  3485  000D86                     __ptext7:
  3486                           	opt stack 0
  3487  000D86                     ___awtoft:
  3488                           	opt stack 26
  3489                           
  3490                           ;incstack = 0
  3491  000D86  0E00               	movlw	0
  3492  000D88  6E1E               	movwf	___awtoft@sign,c
  3493  000D8A  AE1C               	btfss	___awtoft@c+1,7,c
  3494  000D8C  D006               	goto	l688
  3495  000D8E  6C1B               	negf	___awtoft@c,c
  3496  000D90  1E1C               	comf	___awtoft@c+1,f,c
  3497  000D92  B0D8               	btfsc	status,0,c
  3498  000D94  2A1C               	incf	___awtoft@c+1,f,c
  3499  000D96  0E01               	movlw	1
  3500  000D98  6E1E               	movwf	___awtoft@sign,c
  3501  000D9A                     l688:
  3502  000D9A  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  3503  000D9E  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  3504  000DA2  6A15               	clrf	___ftpack@arg+2,c
  3505  000DA4  0E8E               	movlw	142
  3506  000DA6  6E16               	movwf	___ftpack@exp,c
  3507  000DA8  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  3508  000DAC  EC6C  F005         	call	___ftpack	;wreg free
  3509  000DB0  C013  F01B         	movff	?___ftpack,?___awtoft
  3510  000DB4  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  3511  000DB8  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  3512  000DBC  0012               	return	
  3513  000DBE                     __end_of___awtoft:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           intcon	equ	0xFF2
  3520                           intcon3	equ	0xFF0
  3521                           status	equ	0xFD8
  3522                           
  3523 ;; *************** function ___ftpack *****************
  3524 ;; Defined at:
  3525 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  arg             3   18[COMRAM] unsigned um
  3528 ;;  exp             1   21[COMRAM] unsigned char 
  3529 ;;  sign            1   22[COMRAM] unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;		None
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  3   18[COMRAM] float 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3541 ;;      Params:         5       0       0       0       0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3543 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3544 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3545 ;;Total ram usage:        8 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		___awtoft
  3552 ;;		___ftmul
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text8
  3557  000AD8                     __ptext8:
  3558                           	opt stack 0
  3559  000AD8                     ___ftpack:
  3560                           	opt stack 26
  3561                           
  3562                           ;incstack = 0
  3563  000AD8  5016               	movf	___ftpack@exp,w,c
  3564  000ADA  B4D8               	btfsc	status,2,c
  3565  000ADC  D005               	goto	u2470
  3566  000ADE  5013               	movf	___ftpack@arg,w,c
  3567  000AE0  1014               	iorwf	___ftpack@arg+1,w,c
  3568  000AE2  1015               	iorwf	___ftpack@arg+2,w,c
  3569  000AE4  A4D8               	btfss	status,2,c
  3570  000AE6  D00C               	goto	l707
  3571  000AE8                     u2470:
  3572  000AE8  0E00               	movlw	0
  3573  000AEA  6E13               	movwf	?___ftpack,c
  3574  000AEC  0E00               	movlw	0
  3575  000AEE  6E14               	movwf	?___ftpack+1,c
  3576  000AF0  0E00               	movlw	0
  3577  000AF2  6E15               	movwf	?___ftpack+2,c
  3578  000AF4  0012               	return	
  3579  000AF6  2A16               	incf	___ftpack@exp,f,c
  3580  000AF8  90D8               	bcf	status,0,c
  3581  000AFA  3215               	rrcf	___ftpack@arg+2,f,c
  3582  000AFC  3214               	rrcf	___ftpack@arg+1,f,c
  3583  000AFE  3213               	rrcf	___ftpack@arg,f,c
  3584  000B00                     l707:
  3585  000B00  0E00               	movlw	0
  3586  000B02  1413               	andwf	___ftpack@arg,w,c
  3587  000B04  6E18               	movwf	??___ftpack& (0+255),c
  3588  000B06  0E00               	movlw	0
  3589  000B08  1414               	andwf	___ftpack@arg+1,w,c
  3590  000B0A  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3591  000B0C  0EFE               	movlw	254
  3592  000B0E  1415               	andwf	___ftpack@arg+2,w,c
  3593  000B10  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3594  000B12  5018               	movf	??___ftpack,w,c
  3595  000B14  1019               	iorwf	??___ftpack+1,w,c
  3596  000B16  101A               	iorwf	??___ftpack+2,w,c
  3597  000B18  B4D8               	btfsc	status,2,c
  3598  000B1A  D00C               	goto	l710
  3599  000B1C  D7EC               	goto	l708
  3600  000B1E  2A16               	incf	___ftpack@exp,f,c
  3601  000B20  0E01               	movlw	1
  3602  000B22  2613               	addwf	___ftpack@arg,f,c
  3603  000B24  0E00               	movlw	0
  3604  000B26  2214               	addwfc	___ftpack@arg+1,f,c
  3605  000B28  0E00               	movlw	0
  3606  000B2A  2215               	addwfc	___ftpack@arg+2,f,c
  3607  000B2C  90D8               	bcf	status,0,c
  3608  000B2E  3215               	rrcf	___ftpack@arg+2,f,c
  3609  000B30  3214               	rrcf	___ftpack@arg+1,f,c
  3610  000B32  3213               	rrcf	___ftpack@arg,f,c
  3611  000B34                     l710:
  3612  000B34  0E00               	movlw	0
  3613  000B36  1413               	andwf	___ftpack@arg,w,c
  3614  000B38  6E18               	movwf	??___ftpack& (0+255),c
  3615  000B3A  0E00               	movlw	0
  3616  000B3C  1414               	andwf	___ftpack@arg+1,w,c
  3617  000B3E  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3618  000B40  0EFF               	movlw	255
  3619  000B42  1415               	andwf	___ftpack@arg+2,w,c
  3620  000B44  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3621  000B46  5018               	movf	??___ftpack,w,c
  3622  000B48  1019               	iorwf	??___ftpack+1,w,c
  3623  000B4A  101A               	iorwf	??___ftpack+2,w,c
  3624  000B4C  B4D8               	btfsc	status,2,c
  3625  000B4E  D006               	goto	l713
  3626  000B50  D7E6               	goto	l711
  3627  000B52  0616               	decf	___ftpack@exp,f,c
  3628  000B54  90D8               	bcf	status,0,c
  3629  000B56  3613               	rlcf	___ftpack@arg,f,c
  3630  000B58  3614               	rlcf	___ftpack@arg+1,f,c
  3631  000B5A  3615               	rlcf	___ftpack@arg+2,f,c
  3632  000B5C                     l713:
  3633  000B5C  BE14               	btfsc	___ftpack@arg+1,7,c
  3634  000B5E  D003               	goto	u2510
  3635  000B60  0E02               	movlw	2
  3636  000B62  6016               	cpfslt	___ftpack@exp,c
  3637  000B64  D7F6               	goto	l714
  3638  000B66                     u2510:
  3639  000B66  A016               	btfss	___ftpack@exp,0,c
  3640  000B68  9E14               	bcf	___ftpack@arg+1,7,c
  3641  000B6A  90D8               	bcf	status,0,c
  3642  000B6C  3216               	rrcf	___ftpack@exp,f,c
  3643  000B6E  5016               	movf	___ftpack@exp,w,c
  3644  000B70  1215               	iorwf	___ftpack@arg+2,f,c
  3645  000B72  5017               	movf	___ftpack@sign,w,c
  3646  000B74  A4D8               	btfss	status,2,c
  3647  000B76  8E15               	bsf	___ftpack@arg+2,7,c
  3648  000B78  C013  F013         	movff	___ftpack@arg,?___ftpack
  3649  000B7C  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3650  000B80  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3651  000B84  0012               	return	
  3652  000B86                     __end_of___ftpack:
  3653                           	opt stack 0
  3654                           tblptru	equ	0xFF8
  3655                           tblptrh	equ	0xFF7
  3656                           tblptrl	equ	0xFF6
  3657                           tablat	equ	0xFF5
  3658                           intcon	equ	0xFF2
  3659                           intcon3	equ	0xFF0
  3660                           status	equ	0xFD8
  3661                           
  3662 ;; *************** function ___awdiv *****************
  3663 ;; Defined at:
  3664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  dividend        2   18[COMRAM] int 
  3667 ;;  divisor         2   20[COMRAM] int 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  quotient        2   24[COMRAM] int 
  3670 ;;  sign            1   23[COMRAM] unsigned char 
  3671 ;;  counter         1   22[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  2   18[COMRAM] int 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3681 ;;      Params:         4       0       0       0       0       0       0       0       0
  3682 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3684 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3685 ;;Total ram usage:        8 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; Hardware stack levels required when called:    1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_setMotores
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text9
  3696  000CC6                     __ptext9:
  3697                           	opt stack 0
  3698  000CC6                     ___awdiv:
  3699                           	opt stack 27
  3700                           
  3701                           ;incstack = 0
  3702  000CC6  0E00               	movlw	0
  3703  000CC8  6E18               	movwf	___awdiv@sign,c
  3704  000CCA  AE16               	btfss	___awdiv@divisor+1,7,c
  3705  000CCC  D006               	goto	l660
  3706  000CCE  6C15               	negf	___awdiv@divisor,c
  3707  000CD0  1E16               	comf	___awdiv@divisor+1,f,c
  3708  000CD2  B0D8               	btfsc	status,0,c
  3709  000CD4  2A16               	incf	___awdiv@divisor+1,f,c
  3710  000CD6  0E01               	movlw	1
  3711  000CD8  6E18               	movwf	___awdiv@sign,c
  3712  000CDA                     l660:
  3713  000CDA  AE14               	btfss	___awdiv@dividend+1,7,c
  3714  000CDC  D006               	goto	l661
  3715  000CDE  6C13               	negf	___awdiv@dividend,c
  3716  000CE0  1E14               	comf	___awdiv@dividend+1,f,c
  3717  000CE2  B0D8               	btfsc	status,0,c
  3718  000CE4  2A14               	incf	___awdiv@dividend+1,f,c
  3719  000CE6  0E01               	movlw	1
  3720  000CE8  1A18               	xorwf	___awdiv@sign,f,c
  3721  000CEA                     l661:
  3722  000CEA  0E00               	movlw	0
  3723  000CEC  6E1A               	movwf	___awdiv@quotient+1,c
  3724  000CEE  0E00               	movlw	0
  3725  000CF0  6E19               	movwf	___awdiv@quotient,c
  3726  000CF2  5015               	movf	___awdiv@divisor,w,c
  3727  000CF4  1016               	iorwf	___awdiv@divisor+1,w,c
  3728  000CF6  B4D8               	btfsc	status,2,c
  3729  000CF8  D01C               	goto	l668
  3730  000CFA  0E01               	movlw	1
  3731  000CFC  6E17               	movwf	___awdiv@counter,c
  3732  000CFE  D004               	goto	l663
  3733  000D00  90D8               	bcf	status,0,c
  3734  000D02  3615               	rlcf	___awdiv@divisor,f,c
  3735  000D04  3616               	rlcf	___awdiv@divisor+1,f,c
  3736  000D06  2A17               	incf	___awdiv@counter,f,c
  3737  000D08                     l663:
  3738  000D08  AE16               	btfss	___awdiv@divisor+1,7,c
  3739  000D0A  D7FA               	goto	l664
  3740  000D0C                     u2630:
  3741  000D0C  90D8               	bcf	status,0,c
  3742  000D0E  3619               	rlcf	___awdiv@quotient,f,c
  3743  000D10  361A               	rlcf	___awdiv@quotient+1,f,c
  3744  000D12  5015               	movf	___awdiv@divisor,w,c
  3745  000D14  5C13               	subwf	___awdiv@dividend,w,c
  3746  000D16  5016               	movf	___awdiv@divisor+1,w,c
  3747  000D18  5814               	subwfb	___awdiv@dividend+1,w,c
  3748  000D1A  A0D8               	btfss	status,0,c
  3749  000D1C  D005               	goto	l667
  3750  000D1E  5015               	movf	___awdiv@divisor,w,c
  3751  000D20  5E13               	subwf	___awdiv@dividend,f,c
  3752  000D22  5016               	movf	___awdiv@divisor+1,w,c
  3753  000D24  5A14               	subwfb	___awdiv@dividend+1,f,c
  3754  000D26  8019               	bsf	___awdiv@quotient,0,c
  3755  000D28                     l667:
  3756  000D28  90D8               	bcf	status,0,c
  3757  000D2A  3216               	rrcf	___awdiv@divisor+1,f,c
  3758  000D2C  3215               	rrcf	___awdiv@divisor,f,c
  3759  000D2E  2E17               	decfsz	___awdiv@counter,f,c
  3760  000D30  D7ED               	goto	u2630
  3761  000D32                     l668:
  3762  000D32  5018               	movf	___awdiv@sign,w,c
  3763  000D34  B4D8               	btfsc	status,2,c
  3764  000D36  D004               	goto	l669
  3765  000D38  6C19               	negf	___awdiv@quotient,c
  3766  000D3A  1E1A               	comf	___awdiv@quotient+1,f,c
  3767  000D3C  B0D8               	btfsc	status,0,c
  3768  000D3E  2A1A               	incf	___awdiv@quotient+1,f,c
  3769  000D40                     l669:
  3770  000D40  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3771  000D44  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3772  000D48  0012               	return	
  3773  000D4A                     __end_of___awdiv:
  3774                           	opt stack 0
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           intcon	equ	0xFF2
  3780                           intcon3	equ	0xFF0
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _ISR *****************
  3784 ;; Defined at:
  3785 ;;		line 264 in file "main.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3799 ;;      Params:         0       0       0       0       0       0       0       0       0
  3800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3801 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3802 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3803 ;;Total ram usage:       18 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		Interrupt level 2
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	intcode
  3813  000008                     __pintcode:
  3814                           	opt stack 0
  3815  000008                     _ISR:
  3816                           	opt stack 26
  3817                           
  3818                           ;incstack = 0
  3819  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3820  00000A  EDC3  F005         	call	int_func,f	;refresh shadow registers
  3821                           tblptru	equ	0xFF8
  3822                           tblptrh	equ	0xFF7
  3823                           tblptrl	equ	0xFF6
  3824                           tablat	equ	0xFF5
  3825                           intcon	equ	0xFF2
  3826                           intcon3	equ	0xFF0
  3827                           status	equ	0xFD8
  3828                           
  3829                           	psect	intcode_body
  3830  000B86                     __pintcode_body:
  3831                           	opt stack 26
  3832  000B86                     int_func:
  3833                           	opt stack 26
  3834  000B86  0006               	pop		; remove dummy address from shadow register refresh
  3835  000B88  CFFA F001          	movff	pclath,??_ISR
  3836  000B8C  CFFB F002          	movff	pclatu,??_ISR+1
  3837  000B90  CFE9 F003          	movff	fsr0l,??_ISR+2
  3838  000B94  CFEA F004          	movff	fsr0h,??_ISR+3
  3839  000B98  CFE1 F005          	movff	fsr1l,??_ISR+4
  3840  000B9C  CFE2 F006          	movff	fsr1h,??_ISR+5
  3841  000BA0  CFD9 F007          	movff	fsr2l,??_ISR+6
  3842  000BA4  CFDA F008          	movff	fsr2h,??_ISR+7
  3843  000BA8  CFF3 F009          	movff	prodl,??_ISR+8
  3844  000BAC  CFF4 F00A          	movff	prodh,??_ISR+9
  3845  000BB0  CFF6 F00B          	movff	tblptrl,??_ISR+10
  3846  000BB4  CFF7 F00C          	movff	tblptrh,??_ISR+11
  3847  000BB8  CFF8 F00D          	movff	tblptru,??_ISR+12
  3848  000BBC  CFF5 F00E          	movff	tablat,??_ISR+13
  3849  000BC0  C04B  F00F         	movff	btemp,??_ISR+14
  3850  000BC4  C04C  F010         	movff	btemp+1,??_ISR+15
  3851  000BC8  C04D  F011         	movff	btemp+2,??_ISR+16
  3852  000BCC  C04E  F012         	movff	btemp+3,??_ISR+17
  3853                           
  3854                           ;main.c: 265: if(!TMR2IF) return;
  3855  000BD0  A29E               	btfss	3998,1,c	;volatile
  3856  000BD2  D007               	goto	i2l484
  3857                           
  3858                           ;main.c: 266: TMR2IF = 0;
  3859  000BD4  929E               	bcf	3998,1,c	;volatile
  3860                           
  3861                           ;main.c: 267: millisCounter++;
  3862  000BD6  0E01               	movlw	1
  3863  000BD8  2647               	addwf	_millisCounter,f,c
  3864  000BDA  0E00               	movlw	0
  3865  000BDC  2248               	addwfc	_millisCounter+1,f,c
  3866  000BDE  2249               	addwfc	_millisCounter+2,f,c
  3867  000BE0  224A               	addwfc	_millisCounter+3,f,c
  3868  000BE2                     i2l484:
  3869  000BE2  C012  F04E         	movff	??_ISR+17,btemp+3
  3870  000BE6  C011  F04D         	movff	??_ISR+16,btemp+2
  3871  000BEA  C010  F04C         	movff	??_ISR+15,btemp+1
  3872  000BEE  C00F  F04B         	movff	??_ISR+14,btemp
  3873  000BF2  C00E  FFF5         	movff	??_ISR+13,tablat
  3874  000BF6  C00D  FFF8         	movff	??_ISR+12,tblptru
  3875  000BFA  C00C  FFF7         	movff	??_ISR+11,tblptrh
  3876  000BFE  C00B  FFF6         	movff	??_ISR+10,tblptrl
  3877  000C02  C00A  FFF4         	movff	??_ISR+9,prodh
  3878  000C06  C009  FFF3         	movff	??_ISR+8,prodl
  3879  000C0A  C008  FFDA         	movff	??_ISR+7,fsr2h
  3880  000C0E  C007  FFD9         	movff	??_ISR+6,fsr2l
  3881  000C12  C006  FFE2         	movff	??_ISR+5,fsr1h
  3882  000C16  C005  FFE1         	movff	??_ISR+4,fsr1l
  3883  000C1A  C004  FFEA         	movff	??_ISR+3,fsr0h
  3884  000C1E  C003  FFE9         	movff	??_ISR+2,fsr0l
  3885  000C22  C002  FFFB         	movff	??_ISR+1,pclatu
  3886  000C26  C001  FFFA         	movff	??_ISR,pclath
  3887  000C2A  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3888  000C2C  0011               	retfie		f
  3889  000C2E                     __end_of_ISR:
  3890                           	opt stack 0
  3891  0000                     pclatu	equ	0xFFB
  3892                           pclath	equ	0xFFA
  3893                           tblptru	equ	0xFF8
  3894                           tblptrh	equ	0xFF7
  3895                           tblptrl	equ	0xFF6
  3896                           tablat	equ	0xFF5
  3897                           prodh	equ	0xFF4
  3898                           prodl	equ	0xFF3
  3899                           intcon	equ	0xFF2
  3900                           intcon3	equ	0xFF0
  3901                           fsr0h	equ	0xFEA
  3902                           fsr0l	equ	0xFE9
  3903                           fsr1h	equ	0xFE2
  3904                           fsr1l	equ	0xFE1
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           intcon3	equ	0xFF0
  3918                           fsr0h	equ	0xFEA
  3919                           fsr0l	equ	0xFE9
  3920                           fsr1h	equ	0xFE2
  3921                           fsr1l	equ	0xFE1
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926                           	psect	rparam
  3927  0000                     pclatu	equ	0xFFB
  3928                           pclath	equ	0xFFA
  3929                           tblptru	equ	0xFF8
  3930                           tblptrh	equ	0xFF7
  3931                           tblptrl	equ	0xFF6
  3932                           tablat	equ	0xFF5
  3933                           prodh	equ	0xFF4
  3934                           prodl	equ	0xFF3
  3935                           intcon	equ	0xFF2
  3936                           intcon3	equ	0xFF0
  3937                           fsr0h	equ	0xFEA
  3938                           fsr0l	equ	0xFE9
  3939                           fsr1h	equ	0xFE2
  3940                           fsr1l	equ	0xFE1
  3941                           fsr2h	equ	0xFDA
  3942                           fsr2l	equ	0xFD9
  3943                           status	equ	0xFD8
  3944                           
  3945                           	psect	temp
  3946  00004B                     btemp:
  3947                           	opt stack 0
  3948  00004B                     	ds	1
  3949  0000                     int$flags	set	btemp
  3950  0000                     wtemp6	set	btemp+1
  3951                           pclatu	equ	0xFFB
  3952                           pclath	equ	0xFFA
  3953                           tblptru	equ	0xFF8
  3954                           tblptrh	equ	0xFF7
  3955                           tblptrl	equ	0xFF6
  3956                           tablat	equ	0xFF5
  3957                           prodh	equ	0xFF4
  3958                           prodl	equ	0xFF3
  3959                           intcon	equ	0xFF2
  3960                           intcon3	equ	0xFF0
  3961                           fsr0h	equ	0xFEA
  3962                           fsr0l	equ	0xFE9
  3963                           fsr1h	equ	0xFE2
  3964                           fsr1l	equ	0xFE1
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      74
    BANK0           160      5       5
    BANK1           256    170     178
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_setMotores
    _init->_setMotores
    _setMotores->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21300
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               175   175      0   12241
                                              0 BANK0      5     5      0
                                              0 BANK1    170   170      0
                             _millis
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    9059
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _setMotores                                          10     6      4    9059
                                             60 COMRAM    10     6      4
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     404
                                             45 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3144
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2631
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2388
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loop
     _millis
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AA      B2       7       69.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      20        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 17 20:48:00 2018

                     l62 06B8                       l80 0046                       l74 0014  
                     l92 0064                       l94 008A             ___awdiv@sign 0018  
            __CFG_BORV$0 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l120 00C8  
                    l112 00A2                      l106 010E                      l204 02F2  
                    l126 00EE                      l135 0136                      l304 03CE  
                    l172 01D8                      l333 03F6                      l173 022A  
                    l157 017E                      l422 067A                      l342 042E  
                    l262 036E                      l159 01BC                      l361 048E  
                    l169 018A                      l450 0758                      l291 0396  
                    l179 029E                      l460 07A4                      l452 0760  
                    l710 0B34                      l462 078A                      l454 0746  
                    l390 05E2                      l382 0498                      l711 0B1E  
                    l391 060A                      l383 04B8                      l472 0816  
                    l464 0792                      l456 074E                      l384 04E0  
                    l713 0B5C                      l385 0508                      l714 0B52  
                    l810 0982                      l458 079C                      l386 0554  
                    l707 0B00                      l387 056A                      l379 044E  
                    l660 0CDA                      l708 0AF6                      l468 07F6  
                    l388 0592                      l661 0CEA                      l389 05BA  
                    l663 0D08                      l815 09B6                      l807 091C  
                    l664 0D00                      l816 09AA                      l809 0992  
                    l489 0DD4                      l818 09D2                      l667 0D28  
                    l668 0D32                      l669 0D40                      l790 0A76  
                    l688 0D9A                      l792 0A8E                      l793 0A9E  
                    l786 0A0C                      l788 0A34                      l789 0A66  
           __CFG_CPB$OFF 000000                      _PR2 000FCB             __CFG_CPD$OFF 000000  
                    _ISR 0008             __CFG_BOR$OFF 000000             __CFG_LVP$OFF 000000  
                   ?_ISR 0001             __CFG_WDT$OFF 000000                     l3022 036E  
                   u2510 0B66                     u5010 004E                     u5020 0050  
                   u2541 09F4                     u2630 0D0C                     u2470 0AE8  
                   _PIE1 000F9D                     u5200 00F6                     _PIE2 000FA0  
                   u2561 0A1C                     u2730 09BC                     u2810 07C4  
                   u5210 00F8                     u5130 00AA                     u6100 03A0  
                   u6020 0376                     u5140 00AC                     u2750 072C  
                   u6030 0378                     u2671 0900                     u2808 07B0  
                   u2760 073C                     u5080 0092                     u2690 093A  
                   u2770 0770                     u5330 0148                     u5090 0094  
                   u2828 07C6                     u2780 0780                     u5340 014A  
                   u2790 07AE                     u6310 03FE                     u2695 0932  
                   u6320 0400                     u6240 03D6                     u5600 02C0  
                   u5520 0286                     u5440 0192                     u6250 03D8  
                   u6090 039E                     u5450 0194                     u5435 0186  
                   u5436 0188                     u4900 001C                     u5285 013E  
                   u6510 0456                     u5630 02D4                     u5286 0140  
                   u4910 001E                     u6520 0458                     u5560 02A6  
                   u5570 02A8                     u5538 028A                     u5395 0168  
                   u5396 016A                     u6710 064C                     u6630 0616  
                   u5910 0348                     u5590 02BE                     u6720 064E  
                   u6480 0436                     u5920 034A                     u5680 02FA  
                   u6650 0632                     u6490 0438                     u5770 0322  
                   u5690 02FC                     u6900 0698                     u5780 0324  
                   u6910 069A                     u6760 0664                     u6648 061A  
                   u6850 0682                     u6770 0666                     u6860 0684  
                   u6668 0636                     _main 0DD0             ___ftpack@arg 0013  
                   _init 0C2E                     _loop 0012             ___ftpack@exp 0016  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 004B                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___ftmul@cntr 002C  
           ___param_bank 000000             ___ftmul@sign 002D                    ??_ISR 0001  
           ___fttol@exp1 003C             ___fttol@lval 0038            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 0D4A                    ?_loop 0001          __end_of___ftmul 0AD8  
        ___awdiv@divisor 0015          __end_of___fttol 09E4                    _T2CON 000FCA  
                  i2l484 0BE2          ___awdiv@counter 0017            __CFG_USBDIV$2 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 001E  
          ___ftpack@sign 0017                    pclath 000FFA                    tablat 000FF5  
                  loop@m 01AA                    status 000FD8                    wtemp6 004C  
         __CFG_MCLRE$OFF 000000          __initialization 0D4A             __end_of_main 0DDA  
           __end_of_init 0CC6             __end_of_loop 071C          setMotores@dutyD 003F  
        setMotores@dutyI 003D                   ??_main 0047            ___fttol@sign1 0037  
                 ??_init 0047                   ??_loop 0060            __activetblptr 000002  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         ___awdiv@dividend 0013  
       __end_of___awtoft 0DBE         __end_of___ftpack 0B86                   _TMR2IF 007CF1  
         __CFG_XINST$OFF 000000                ??___awdiv 0017                ??___ftmul 0025  
              ??___fttol 0032            loop@direccion 01B0                   _millis 0DBE  
       ___awdiv@quotient 0019    ___ftmul@f3_as_product 0029                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0D78          __CFG_PBADEN$OFF 000000           _setMotores$874 0043  
         _setMotores$875 0045            ___rparam_used 000001               ___awtoft@c 001B  
             ___ftmul@f1 001F               ___ftmul@f2 0022               ___fttol@f1 002E  
         __pcstackCOMRAM 0001             __pidataBANK1 0DDA               __pbssBANK1 01AA  
                ?_millis 0013                ?___awtoft 001B                ?___ftpack 0013  
                _INTCON3 000FF0          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0CC6                  ___ftmul 09E4  
                ___fttol 08F0          __CFG_STVREN$OFF 000000                  __pcinit 0D4A  
             ??___awtoft 001E               ??___ftpack 0018          __size_of_millis 0012  
                __ramtop 0800                  __ptext0 0DD0                  __ptext1 0012  
                __ptext2 0DBE                  __ptext3 0C2E                  __ptext4 071C  
                __ptext5 08F0                  __ptext6 09E4                  __ptext7 0D86  
                __ptext8 0AD8                  __ptext9 0CC6            _millisCounter 0047  
           __size_of_ISR 0C26                _T2CONbits 000FCA           __pintcode_body 0B86  
   end_of_initialization 0D78            __Lmediumconst 0000                  int_func 0B86  
             _setMotores 071C                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94              _CCP1CONbits 000FBD              _CCP2CONbits 000FBA  
            ___ftmul@exp 0028           __end_of_millis 0DD0      start_initialization 0D4A  
            __end_of_ISR 0C2E              ?_setMotores 003D              __pdataBANK1 01B0  
       __CFG_LPT1OSC$OFF 000000                 ??_millis 0017        __size_of___awtoft 0038  
      __size_of___ftpack 00AE              __pbssCOMRAM 0047            __pcstackBANK0 0060  
          __pcstackBANK1 0100               loop@estado 01AE                __pintcode 0008  
               ?___awdiv 0013                 ?___ftmul 001F                 ?___fttol 002E  
    __size_of_setMotores 01D4                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _PIE1bits 000F9D                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
             _ADCON1bits 000FC1                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___awtoft 0D86                 ___ftpack 0AD8                 _loop$800 01A8  
               _loop$801 011E                 _loop$810 012E                 _loop$802 0120  
               _loop$811 0130                 _loop$803 0122                 _loop$820 0142  
               _loop$812 0132                 _loop$804 0124                 _loop$821 0144  
               _loop$813 0134                 _loop$805 0126                 _loop$806 01A9  
               _loop$830 0156                 _loop$822 0146                 _loop$814 0136  
               _loop$831 0158                 _loop$823 0148                 _loop$815 0138  
               _loop$807 0128                 _loop$840 016A                 _loop$832 015A  
               _loop$824 014A                 _loop$816 013A                 _loop$808 012A  
               _loop$841 016C                 _loop$833 015C                 _loop$825 014C  
               _loop$817 013C                 _loop$809 012C                 _loop$850 017E  
               _loop$842 016E                 _loop$834 015E                 _loop$826 014E  
               _loop$818 013E                 _loop$851 0180                 _loop$843 0170  
               _loop$835 0160                 _loop$827 0150                 _loop$819 0140  
               _loop$860 0192                 _loop$852 0182                 _loop$844 0172  
               _loop$836 0162                 _loop$828 0152                 _loop$780 0106  
               _loop$861 0194                 _loop$853 0184                 _loop$845 0174  
               _loop$837 0164                 _loop$829 0154                 _loop$781 0108  
               _loop$870 01A6                 _loop$862 0196                 _loop$854 0186  
               _loop$846 0176                 _loop$838 0166                 _loop$790 011A  
               _loop$782 010A                 _loop$863 0198                 _loop$855 0188  
               _loop$847 0178                 _loop$839 0168                 _loop$791 011C  
               _loop$783 010C                 _loop$864 019A                 _loop$856 018A  
               _loop$848 017A                 _loop$784 010E                 _loop$865 019C  
               _loop$857 018C                 _loop$849 017C                 _loop$785 0110  
               _loop$777 0100                 _loop$866 019E                 _loop$858 018E  
               _loop$786 0112                 _loop$778 0102                 _loop$867 01A0  
               _loop$859 0190                 _loop$787 0114                 _loop$779 0104  
               _loop$868 01A2                 _loop$788 0116                 _loop$869 01A4  
               _loop$789 0118             ??_setMotores 0041            __size_of_main 000A  
          __size_of_init 0098            __size_of_loop 070A                 int$flags 004B  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2       __end_of_setMotores 08F0  
               intlevel2 0000       __CFG_FOSC$HSPLL_HS 000000  
